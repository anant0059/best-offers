curl 'https://www.flipkart.com/payments?isRevampedDesktopView=true&token=PN25072221323201e33ab6b3712bd3a0affecfebc589233075f7532446661ec95fa1673f7b973fdb648a452f3823b51ca80c573c9ff2391_v3_1' \
  -H 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7' \
  -H 'Accept-Language: en-US,en;q=0.9' \
  -H 'Connection: keep-alive' \
  -b 'T=TI175319936004500089161842565208205811040996962172561766530218387020; K-ACTION=null; AMCVS_17EB401053DAF4840A490D4C%40AdobeOrg=1; AMCV_17EB401053DAF4840A490D4C%40AdobeOrg=-227196251%7CMCIDTS%7C20292%7CMCMID%7C16798868178631765704369131230882303199%7CMCAAMLH-1753804164%7C12%7CMCAAMB-1753804164%7CRKhpRz8krg2tLO6pguXWp5olkAcUniQYPHaMWWgdJ3xzPWQmdj0y%7CMCOPTOUT-1753206566s%7CNONE%7CMCAID%7CNONE; ULSN=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJjb29raWUiLCJhdWQiOiJmbGlwa2FydCIsImlzcyI6ImF1dGguZmxpcGthcnQuY29tIiwiY2xhaW1zIjp7ImdlbiI6IjEiLCJ1bmlxdWVJZCI6IlVVSTI1MDcyMjIxMTk0NzM0MEpJWFRTTksiLCJma0RldiI6bnVsbH0sImV4cCI6MTc2ODk3OTM4NywiaWF0IjoxNzUzMTk5Mzg3LCJqdGkiOiJjMmJlN2NjZS1mYjkzLTQxZjItYjQyYy05NTU1NDQxMDNjNTgifQ.HA7J-EjJmOJa_MBmxr7PV2INosPTCqUw6ZYALcJxCCE; at=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjhlM2ZhMGE3LTJmZDMtNGNiMi05MWRjLTZlNTMxOGU1YTkxZiJ9.eyJleHAiOjE3NTMyMDExODcsImlhdCI6MTc1MzE5OTM4NywiaXNzIjoia2V2bGFyIiwianRpIjoiMTU0Yzg3NzktZGI1Mi00MTkzLThjZDEtZDA4YThkNGE4NWI3IiwidHlwZSI6IkFUIiwiZElkIjoiVEkxNzUzMTk5MzYwMDQ1MDAwODkxNjE4NDI1NjUyMDgyMDU4MTEwNDA5OTY5NjIxNzI1NjE3NjY1MzAyMTgzODcwMjAiLCJiSWQiOiJUWFVKSVciLCJrZXZJZCI6IlZJRjhGOUNEMDk4RjJCNDFDMUI1NUYxQjJGODAzMTVBNDQiLCJ0SWQiOiJtYXBpIiwiZWFJZCI6IlVmc1pjNUl3T1dsdXY2bV9zeXZsUFNHWjJGREJKVDNTb3UwY1BTQVVtNGdYV1FEVENuand1QT09IiwidnMiOiJMSSIsInoiOiJDSCIsIm0iOnRydWUsImdlbiI6NH0.Wppoi4vId9Jh_snxNyzw35DCPP0KO3vxRVuqNLaFI74; rt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IjhlM2ZhMGE3LTJmZDMtNGNiMi05MWRjLTZlNTMxOGU1YTkxZiJ9.eyJleHAiOjE3NjkwOTY5ODcsImlhdCI6MTc1MzE5OTM4NywiaXNzIjoia2V2bGFyIiwianRpIjoiYzBlZWZjMTEtNDMzZC00MmMyLThhNGMtYWE4ZGYwOWYyNzU3IiwidHlwZSI6IlJUIiwiZElkIjoiVEkxNzUzMTk5MzYwMDQ1MDAwODkxNjE4NDI1NjUyMDgyMDU4MTEwNDA5OTY5NjIxNzI1NjE3NjY1MzAyMTgzODcwMjAiLCJiSWQiOiJUWFVKSVciLCJrZXZJZCI6IlZJRjhGOUNEMDk4RjJCNDFDMUI1NUYxQjJGODAzMTVBNDQiLCJ0SWQiOiJtYXBpIiwibSI6eyJ0eXBlIjoibiJ9LCJ2IjoiVVJLUEZWIn0.G8td_K7wE9ecKlcslT8uxfwpNU8j23Uveq52M71sXrY; vh=812; vw=1440; dpr=2; fonts-loaded=en_loaded; Network-Type=4g; isH2EnabledBandwidth=false; h2NetworkBandwidth=9; pt_seen=true; vd=VIF8F9CD098F2B41C1B55F1B2F80315A44-1753199363842-1.1753200103.1753199363.154769188; qH=a3dc101ea3bce06d; ud=2.VogYwlUWqZC3mok_5Tvo2pcJHBU70kFc6ATng2-l3uSeUMJ0Lnysad9pRgD18Iqq4WT8ZWXv4-Vg-qgKLIYXqHrPi01L_CtqvxoQ3-qKsnFP3XpzDaeIPvPJYc7uWkxLajvr1cHuD-g9Xe9HK9cbuYtFGU6HX-6KgDD6Cscefa6j0j-uYtmzmtJXD7Sm2MjRQiROw8dM_VwBJRPM6cuFOZtHbjun3bPGWhe6phQQ9Cqox0yRK3Mqbk_0cE8JBsQfh4qhERJJPm98hCV-5woC50WKudtXbGP_Y2S9Mvq013e8Uk4A-QSINhW3Wp9AHOsR8yQ-S3dTr3kBt81aSD_4SLSolTaLl_im1vkle2ADwVcGpWuwPxoGjnVWicPCGlMWXsbtPnjlTKmVDGi-OgcXpYT9MZ6VcAIZ3THEA1HFq-9H0J-OYawuItHCO56MZcLqCqbMxnipV2uoy3eY6ByBMBi_yVVUGMHkx5YWzzTsd0JNoLSgsjPY2IfnTuemTkxeripDaCuXPlnzNUvOuVS3QQUw1rUlENiqaZ8eMDgiW4hGwvx3jEYr0qM2LGdtHs_5aVCtpZ_iB78teLBAbPgid7fNlGIE3ZE9Rq-pau7QDVUAjLLSSnoDdWITYN2TNr5Lx_CGIrwPuhcwDkFM0yEch2AeW8KZJEG47dmNyXqakWLlr6zCBXsHeGkALsSFrYmm82NqNLdz-APqP_LH6kRJw9lbSokh9izuXHktlgmQSZ49MXcPEsrCF-LraTCApOTEnP3OlpWj55vzXD4xsVHjeq0MOOX48ozQ3R2Mml7Aa41amehrgllCUtt9kzkx_KI1yBvcct3MDFDignXELQqPYQNb2YVo3-UWB6BSwfWCslihx4rEgkgFFlDwViQQeP_beuj-59OYwWGgt-ZAqd1PCw; s_sq=flipkart-prd%3D%2526pid%253Dwww.flipkart.com%25253Acheckout%25253Ainit%2526pidt%253D1%2526oid%253DfunctionJr%252528%252529%25257B%25257D%2526oidt%253D2%2526ot%253DSUBMIT; S=d1t10P3lrPz8/Rj8/QT8nZB8/DOPJm1BQuhTvHAP+Tm49KF7zOhckeIogjs2uVK7GgHR379zAPM3SijbmtiXtuFWMSA==; SN=VIF8F9CD098F2B41C1B55F1B2F80315A44.TOKFE52F14E93ED453EA5D1DE64570283B1.1753200152031.LI' \
  -H 'Referer: https://www.flipkart.com/checkout/init?domain=physical&view=FLIPKART&loginFlow=false' \
  -H 'Sec-Fetch-Dest: document' \
  -H 'Sec-Fetch-Mode: navigate' \
  -H 'Sec-Fetch-Site: same-origin' \
  -H 'Sec-Fetch-User: ?1' \
  -H 'Upgrade-Insecure-Requests: 1' \
  -H 'User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36' \
  -H 'sec-ch-ua: "Google Chrome";v="137", "Chromium";v="137", "Not/A)Brand";v="24"' \
  -H 'sec-ch-ua-arch: "arm"' \
  -H 'sec-ch-ua-full-version: "137.0.7151.120"' \
  -H 'sec-ch-ua-full-version-list: "Google Chrome";v="137.0.7151.120", "Chromium";v="137.0.7151.120", "Not/A)Brand";v="24.0.0.0"' \
  -H 'sec-ch-ua-mobile: ?0' \
  -H 'sec-ch-ua-model: ""' \
  -H 'sec-ch-ua-platform: "macOS"' \
  -H 'sec-ch-ua-platform-version: "15.5.0"'





************************************  Response  *********************

<!doctype html>
<html lang="en-IN">
    <title>Flipkart Payments Page</title>
    <head>
        <link rel="preconnect" href="https://static-assets-web.flixcart.com"/>
        <link rel="preconnect" href="https://static-assets-web.flixcart.com" crossorigin/>
        <link rel="preconnect" href="https://1.payments.flipkart.com" crossorigin/>
        <link rel="preconnect" href="https://2.payments.flipkart.com" crossorigin/>
        <link rel="preload" href="//static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/p/fonts/Inter-Regular.woff2" as="font" crossorigin/>
        <link rel="preload" href="//static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/p/fonts/Inter-SemiBold.woff2" as="font" crossorigin/>
        <link rel="stylesheet" href="//static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/p/css/app.chunk.dd9800.css"/>
        <link rel="stylesheet" href="//static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/p/css/dls_styles.chunk.19e87e.css"/>
        <link rel="stylesheet" href="//static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/p/css/Home.chunk.814f78.css"/>
        <meta name="viewport" content="width=device-width,minimum-scale=1,initial-scale=1,maximum-scale=1,user-scalable=no,interactive-widget=resizes-content"/>
        <meta charset="UTF-8"/>
        <meta http-equiv="X-UA-Compatible" content="IE=edge"/>
        <link rel="shortcut icon" href="https://static-assets-web.flixcart.com/www/promos/new/20150528-140547-favicon-retina.ico"/>
        <style>
            #container {
                height: 100%;
                overflow: scroll;
            }
        </style>
        <script id="lang-bundle" defer="defer" crossorigin="anonymous" nonce="5080350460649940621" src="//static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/p/js/en-js.chunk.e92f1e68.js"></script>
        <script src="//static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/p/js/runtime.a1b9cc0c.js" defer="defer" crossorigin="anonymous" nonce="5080350460649940621"></script>
        <script src="//static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/p/js/vendor.chunk.9e6a26ec.js" defer="defer" crossorigin="anonymous" nonce="5080350460649940621"></script>
        <script src="//static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/p/js/app.chunk.a0571085.js" defer="defer" crossorigin="anonymous" nonce="5080350460649940621"></script>
        <script crossorigin="anonymous" defer="defer" nonce="5080350460649940621" src="//static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/p/js/Home.chunk.fc0fcc8e.js"></script>
    </head>
    <body>
        <div id="container">
            <div id="header-container-sticky" class="E4P+UG">
                <header class="dzn7Mw z6B+q3 V5bxCW" data-testid="header">
                    <section class="ZDYZh+">
                        <button class="Button-module_button__P7hTI font-m-semibold Button-module_secondary__ieoHb _3NACFp" variant="secondary" aria-label="Back Button" data-testid="backButton">
                            <img src="//static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/p/img/back-button.svg"/>
                        </button>
                    </section>
                    <section class="ZJ-+VB font-s ellipsis-container">
                        <p class="font-s aIfcqv">Step 3 of 3</p>
                        <section class="comD76">
                            <h5 data-testid="page-title" class="font-l-semibold xjuazR ellipsis-text">Payments</h5>
                            <img src="//static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/p/img/fk-brand-logo.svg" class="TkjsxU"/>
                            <section class="Dr7NNM font-s-semibold">
                                <div data-testid="callout" class="HZlTsP tLBeHy flex-center font-s-semibold hCwyCv">
                                    <img src="https://static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/images/lock-icon.svg" class="YkJopE" data-testid="callout-left-img"/>
                                    <span data-testid="help">100% Secure</span>
                                </div>
                            </section>
                        </section>
                    </section>
                </header>
            </div>
            <div class="Wr52Y1">
                <div class="ZE5IA3 Oo+Ray">
                    <header class="ttHus7">
                        <div>
                            <header class="dzn7Mw z6B+q3" data-testid="header">
                                <section class="ZDYZh+">
                                    <button class="Button-module_button__P7hTI font-m-semibold Button-module_secondary__ieoHb _3NACFp" variant="secondary" aria-label="Back Button" data-testid="backButton">
                                        <img src="//static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/p/img/back-button.svg"/>
                                    </button>
                                </section>
                                <section class="ZJ-+VB font-s ellipsis-container">
                                    <section class="comD76">
                                        <h5 data-testid="page-title" class="font-l-semibold xjuazR ellipsis-text">Complete Payment</h5>
                                        <img src="//static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/p/img/fk-brand-logo.svg" class="TkjsxU"/>
                                        <section class="Dr7NNM font-s-semibold">
                                            <div data-testid="callout" class="HZlTsP tLBeHy flex-center font-s-semibold Rjo+8E">
                                                <img src="https://static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/images/lock-icon.svg" class="YkJopE" data-testid="callout-left-img"/>
                                                <span data-testid="help">100% Secure</span>
                                            </div>
                                        </section>
                                    </section>
                                </section>
                            </header>
                        </div>
                    </header>
                    <section class="iGRJtT">
                        <div class="MvsVJI" data-testid="payment-options-list">
                            <div class="gT+azH">
                                <div class="Ot5TFk MuKrF-">
                                    <section class="RMFVQw">
                                        <div class="tZNqZu">
                                            <div class="AccordionItem-module_container__wzVrA XL1nQM">
                                                <div>
                                                    <div data-disabled="false" class="rwYWFp">
                                                        <div class="aJW5Ph">
                                                            <img src="https://static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/images/clock-counter-clockwise.svg" class="_2U1j-B"/>
                                                            <div class="_2c+L1Y">
                                                                <span class="EtFGuU font-m-semibold">Saved Payment Options</span>
                                                                <div class="W9OJ53"></div>
                                                            </div>
                                                        </div>
                                                        <img src="//static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/p/img/UpArrow.svg" class="Zdjyxi mejl7R"/>
                                                    </div>
                                                </div>
                                                <div class="AccordionItem-module_content-wrapper__xPTg8 AccordionItem-module_open-content__jtO8C" style="transition-duration:0.5s;transition-timing-function:ease-in-out">
                                                    <div class="AccordionItem-module_content__aMJ7P" aria-hidden="false">
                                                        <div class="nACeX6 Gvw5jz" data-testid="loader">
                                                            <div class="gWNFqx t8cIdF" style="width:35px">
                                                                <svg class="_9Gc2rZ" viewBox="25 25 50 50">
                                                                    <circle class="L7r32S" cx="50" cy="50" r="20" stroke-miterlimit="10"></circle>
                                                                    <circle class="KC2aqC" cx="50" cy="50" r="20" stroke-miterlimit="10"></circle>
                                                                </svg>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="AccordionItem-module_container__wzVrA XL1nQM">
                                                <div>
                                                    <div data-disabled="false" class="rwYWFp _3Awrcc">
                                                        <div class="aJW5Ph">
                                                            <img src="https://static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/images/upi.svg" class="_2U1j-B"/>
                                                            <div class="_2c+L1Y">
                                                                <span class="EtFGuU font-m-semibold">UPI</span>
                                                                <div>
                                                                    <div class="eZcpWE rC9zAr">
                                                                        <span class="font-s _2icVpm">Pay by any UPI app</span>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <img src="//static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/p/img/DownArrow.svg" class="Zdjyxi mejl7R"/>
                                                    </div>
                                                </div>
                                                <div class="AccordionItem-module_content-wrapper__xPTg8" style="transition-duration:0.5s;transition-timing-function:ease-in-out">
                                                    <div class="AccordionItem-module_content__aMJ7P" aria-hidden="true">
                                                        <div class="El2Upy">
                                                            <div>
                                                                <section class="MbhdE+ ddC7qQ" data-disabled="false">
                                                                    <div class="Radio-module_input-wrapper__dFjwL">
                                                                        <input type="radio" class="Radio-module_input-radio__NEcqz" aria-label="new-upi-id" aria-checked="false" name="newUpiOption" id="new-upi-id" readonly=""/>
                                                                        <label for="new-upi-id" class="font-m Radio-module_input-label__CtCpv">
                                                                            <div class="WzE53e">
                                                                                <div class="Mu-Dgc">
                                                                                    <div class="font-m v+I8tr">Add new UPI ID</div>
                                                                                </div>
                                                                                <div data-testid="callout" class="HZlTsP tLBeHy flex-center font-s-semibold primary-500">
                                                                                    <span data-testid="help">How to find?</span>
                                                                                </div>
                                                                            </div>
                                                                        </label>
                                                                    </div>
                                                                </section>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="AccordionItem-module_container__wzVrA XL1nQM">
                                                <div>
                                                    <div data-disabled="false" class="rwYWFp _3Awrcc">
                                                        <div class="aJW5Ph">
                                                            <img src="https://static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/images/card.svg" class="_2U1j-B"/>
                                                            <div class="_2c+L1Y">
                                                                <span class="EtFGuU font-m-semibold">Credit / Debit / ATM Card</span>
                                                                <div>
                                                                    <div class="eZcpWE rC9zAr">
                                                                        <span class="font-s _2icVpm">Add and secure cards as per RBI guidelines</span>
                                                                    </div>
                                                                    <div class="cqmeM6 aePrmb">
                                                                        <div class="aePrmb">
                                                                            <span class="font-s success-500">Save upto ₹10,000</span>
                                                                        </div>
                                                                        <div class="aePrmb">
                                                                            <span class="wJ+s+j"></span>
                                                                            <span class="font-s success-500">5 offers available</span>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <img src="//static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/p/img/DownArrow.svg" class="Zdjyxi mejl7R"/>
                                                    </div>
                                                </div>
                                                <div class="AccordionItem-module_content-wrapper__xPTg8" style="transition-duration:0.5s;transition-timing-function:ease-in-out">
                                                    <div class="AccordionItem-module_content__aMJ7P" aria-hidden="true">
                                                        <div class="font-s FNTgO7 GqySPo"></div>
                                                        <div class="IwI1xC">
                                                            <form id="cards"></form>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="AccordionItem-module_container__wzVrA XL1nQM">
                                                <div>
                                                    <div data-disabled="false" class="rwYWFp _3Awrcc">
                                                        <div class="aJW5Ph">
                                                            <img src="https://static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/images/emi-header-08092023.svg" class="_2U1j-B"/>
                                                            <div class="_2c+L1Y">
                                                                <span class="EtFGuU font-m-semibold">EMI</span>
                                                                <div>
                                                                    <div class="eZcpWE rC9zAr">
                                                                        <span class="font-s _2icVpm">Get Debit and Cardless EMIs on HDFC Bank</span>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <img src="//static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/p/img/DownArrow.svg" class="Zdjyxi mejl7R"/>
                                                    </div>
                                                </div>
                                                <div class="AccordionItem-module_content-wrapper__xPTg8" style="transition-duration:0.5s;transition-timing-function:ease-in-out">
                                                    <div class="AccordionItem-module_content__aMJ7P" aria-hidden="true">
                                                        <div class="V3wsNk">
                                                            <div class="EeMvMV">
                                                                <span class="font-s-semibold +c-B+M">Get EMI in 3 easy steps</span>
                                                                <div class="dOm0W+">
                                                                    <div class="VcCt1j">
                                                                        <div class="Q29h09">
                                                                            <div class="KnbbEl">
                                                                                <img src="https://static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/images/card.svg" style="height:16px;width:16px;object-fit:contain"/>
                                                                            </div>
                                                                            <p class="font-s neutral-900 _2phWoo">Choose bank</p>
                                                                        </div>
                                                                        <div class="Q29h09">
                                                                            <div class="KnbbEl">
                                                                                <img src="https://static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/images/calender-blank.svg" style="height:16px;width:16px;object-fit:contain"/>
                                                                            </div>
                                                                            <p class="font-s neutral-900 _2phWoo">Choose Plan</p>
                                                                        </div>
                                                                        <div class="Q29h09">
                                                                            <div class="KnbbEl">
                                                                                <img src="https://static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/images/black-tick.svg" style="height:16px;width:16px;object-fit:contain"/>
                                                                            </div>
                                                                            <p class="font-s neutral-900 _2phWoo">Confirm &amp;Pay</p>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div data-testid="emi-banks-list">
                                                                <section class="nKULwu" data-disabled="false">
                                                                    <div class="Radio-module_input-wrapper__dFjwL">
                                                                        <input type="radio" class="Radio-module_input-radio__NEcqz" aria-label="SBI Credit Card_0" aria-checked="false" name="emiOption" id="SBI Credit Card_0" readonly=""/>
                                                                        <label for="SBI Credit Card_0" class="font-m Radio-module_input-label__CtCpv">
                                                                            <div class="WzE53e">
                                                                                <div class="Mu-Dgc">
                                                                                    <div class="font-m v+I8tr">SBI Credit Card</div>
                                                                                    <div class="DnfM-J">
                                                                                        <span class="success-500 font-s">No Cost EMI </span>
                                                                                        <span class="font-s">₹16,335/m</span>
                                                                                    </div>
                                                                                    <div class="K96z6V font-s CDNOes" data-testid="inline-offer">
                                                                                        <img src="https://static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/images/offer-unselected.svg" class="wSZdlN" style="height:16px;width:16px;object-fit:contain"/>
                                                                                        <div>
                                                                                            <span class="qKkzrO success-500">1 offer applicable</span>
                                                                                            <div data-testid="callout" class="HZlTsP tLBeHy flex-center font-s-semibold JX8Ncv">
                                                                                                <span data-testid="help">Details</span>
                                                                                            </div>
                                                                                        </div>
                                                                                    </div>
                                                                                </div>
                                                                                <img src="https://static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/images/banks/SBI.svg" class="_0MaLVA" data-testid="card-image"/>
                                                                            </div>
                                                                        </label>
                                                                    </div>
                                                                </section>
                                                                <section class="nKULwu" data-disabled="false">
                                                                    <div class="Radio-module_input-wrapper__dFjwL">
                                                                        <input type="radio" class="Radio-module_input-radio__NEcqz" aria-label="ICICI Bank_1" aria-checked="false" name="emiOption" id="ICICI Bank_1" readonly=""/>
                                                                        <label for="ICICI Bank_1" class="font-m Radio-module_input-label__CtCpv">
                                                                            <div class="WzE53e">
                                                                                <div class="Mu-Dgc">
                                                                                    <div class="font-m v+I8tr">ICICI Bank</div>
                                                                                    <div class="DnfM-J">
                                                                                        <span class="success-500 font-s">No Cost EMI </span>
                                                                                        <span class="font-s">₹16,334/m</span>
                                                                                    </div>
                                                                                    <div class="K96z6V font-s CDNOes" data-testid="inline-offer">
                                                                                        <img src="https://static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/images/offer-unselected.svg" class="wSZdlN" style="height:16px;width:16px;object-fit:contain"/>
                                                                                        <div>
                                                                                            <span class="qKkzrO success-500">1 offer applicable</span>
                                                                                            <div data-testid="callout" class="HZlTsP tLBeHy flex-center font-s-semibold JX8Ncv">
                                                                                                <span data-testid="help">Details</span>
                                                                                            </div>
                                                                                        </div>
                                                                                    </div>
                                                                                </div>
                                                                                <img src="https://static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/images/banks/ICICI.svg" class="_0MaLVA" data-testid="card-image"/>
                                                                            </div>
                                                                        </label>
                                                                    </div>
                                                                </section>
                                                                <section class="nKULwu" data-disabled="false">
                                                                    <div class="Radio-module_input-wrapper__dFjwL">
                                                                        <input type="radio" class="Radio-module_input-radio__NEcqz" aria-label="Kotak Bank_2" aria-checked="false" name="emiOption" id="Kotak Bank_2" readonly=""/>
                                                                        <label for="Kotak Bank_2" class="font-m Radio-module_input-label__CtCpv">
                                                                            <div class="WzE53e">
                                                                                <div class="Mu-Dgc">
                                                                                    <div class="font-m v+I8tr">Kotak Bank</div>
                                                                                    <div class="DnfM-J">
                                                                                        <span class="success-500 font-s">No Cost EMI </span>
                                                                                        <span class="font-s">₹16,334/m</span>
                                                                                    </div>
                                                                                    <div class="K96z6V font-s CDNOes" data-testid="inline-offer">
                                                                                        <img src="https://static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/images/offer-unselected.svg" class="wSZdlN" style="height:16px;width:16px;object-fit:contain"/>
                                                                                        <div>
                                                                                            <span class="qKkzrO success-500">1 offer applicable</span>
                                                                                            <div data-testid="callout" class="HZlTsP tLBeHy flex-center font-s-semibold JX8Ncv">
                                                                                                <span data-testid="help">Details</span>
                                                                                            </div>
                                                                                        </div>
                                                                                    </div>
                                                                                </div>
                                                                                <img src="https://static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/images/banks/KOTAK.svg" class="_0MaLVA" data-testid="card-image"/>
                                                                            </div>
                                                                        </label>
                                                                    </div>
                                                                </section>
                                                            </div>
                                                            <div class="mlBg7c">
                                                                <span class="KtyKcO font-m-semibold">All EMI Options</span>
                                                                <img src="//static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/p/img/UpArrow.svg" class="_59qN0L" style="height:24px;width:24px;object-fit:contain"/>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="AccordionItem-module_container__wzVrA XL1nQM">
                                                <div>
                                                    <div data-disabled="false" class="rwYWFp _3Awrcc">
                                                        <div class="aJW5Ph">
                                                            <img src="https://static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/images/net-banking-08092023.svg" class="_2U1j-B"/>
                                                            <div class="_2c+L1Y">
                                                                <span class="EtFGuU font-m-semibold">Net Banking</span>
                                                                <div></div>
                                                            </div>
                                                        </div>
                                                        <img src="//static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/p/img/DownArrow.svg" class="Zdjyxi mejl7R"/>
                                                    </div>
                                                </div>
                                                <div class="AccordionItem-module_content-wrapper__xPTg8" style="transition-duration:0.5s;transition-timing-function:ease-in-out">
                                                    <div class="AccordionItem-module_content__aMJ7P" aria-hidden="true">
                                                        <div class="KLs86I">
                                                            <div class="PqcQW2">
                                                                <section class="_9ubm5H" data-disabled="false">
                                                                    <div class="Radio-module_input-wrapper__dFjwL">
                                                                        <input type="radio" class="Radio-module_input-radio__NEcqz" aria-label="netbank_State Bank of India_0" aria-checked="false" name="netOption" id="netbank_State Bank of India_0" readonly=""/>
                                                                        <label for="netbank_State Bank of India_0" class="font-m Radio-module_input-label__CtCpv">
                                                                            <div class="WzE53e">
                                                                                <div class="Mu-Dgc">
                                                                                    <div class="font-m v+I8tr">State Bank of India</div>
                                                                                    <div class="K96z6V font-s CDNOes" data-testid="inline-offer">
                                                                                        <img src="https://static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/images/offer-unselected.svg" class="wSZdlN" style="height:16px;width:16px;object-fit:contain"/>
                                                                                        <div>
                                                                                            <span class="qKkzrO success-500 success-500">₹10,000 discount applicable.</span>
                                                                                            <div data-testid="callout" class="HZlTsP tLBeHy flex-center font-s-semibold JX8Ncv">
                                                                                                <span data-testid="help">Details</span>
                                                                                            </div>
                                                                                        </div>
                                                                                    </div>
                                                                                </div>
                                                                                <img src="https://static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/images/banks/SBI.svg" class="_0MaLVA" data-testid="card-image"/>
                                                                            </div>
                                                                        </label>
                                                                    </div>
                                                                </section>
                                                                <section class="_9ubm5H" data-disabled="false">
                                                                    <div class="Radio-module_input-wrapper__dFjwL">
                                                                        <input type="radio" class="Radio-module_input-radio__NEcqz" aria-label="netbank_HDFC Bank_1" aria-checked="false" name="netOption" id="netbank_HDFC Bank_1" readonly=""/>
                                                                        <label for="netbank_HDFC Bank_1" class="font-m Radio-module_input-label__CtCpv">
                                                                            <div class="WzE53e">
                                                                                <div class="Mu-Dgc">
                                                                                    <div class="font-m v+I8tr">HDFC Bank</div>
                                                                                </div>
                                                                                <img src="https://static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/images/banks/HDFC.svg" class="_0MaLVA" data-testid="card-image"/>
                                                                            </div>
                                                                        </label>
                                                                    </div>
                                                                </section>
                                                                <section class="_9ubm5H" data-disabled="false">
                                                                    <div class="Radio-module_input-wrapper__dFjwL">
                                                                        <input type="radio" class="Radio-module_input-radio__NEcqz" aria-label="netbank_ICICI Bank_2" aria-checked="false" name="netOption" id="netbank_ICICI Bank_2" readonly=""/>
                                                                        <label for="netbank_ICICI Bank_2" class="font-m Radio-module_input-label__CtCpv">
                                                                            <div class="WzE53e">
                                                                                <div class="Mu-Dgc">
                                                                                    <div class="font-m v+I8tr">ICICI Bank</div>
                                                                                </div>
                                                                                <img src="https://static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/images/banks/ICICI.svg" class="_0MaLVA" data-testid="card-image"/>
                                                                            </div>
                                                                        </label>
                                                                    </div>
                                                                </section>
                                                                <section class="_9ubm5H" data-disabled="false">
                                                                    <div class="Radio-module_input-wrapper__dFjwL">
                                                                        <input type="radio" class="Radio-module_input-radio__NEcqz" aria-label="netbank_Kotak Mahindra Bank_3" aria-checked="false" name="netOption" id="netbank_Kotak Mahindra Bank_3" readonly=""/>
                                                                        <label for="netbank_Kotak Mahindra Bank_3" class="font-m Radio-module_input-label__CtCpv">
                                                                            <div class="WzE53e">
                                                                                <div class="Mu-Dgc">
                                                                                    <div class="font-m v+I8tr">Kotak Mahindra Bank</div>
                                                                                </div>
                                                                                <img src="https://static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/images/banks/KOTAK.svg" class="_0MaLVA" data-testid="card-image"/>
                                                                            </div>
                                                                        </label>
                                                                    </div>
                                                                </section>
                                                                <section class="_9ubm5H" data-disabled="false">
                                                                    <div class="Radio-module_input-wrapper__dFjwL">
                                                                        <input type="radio" class="Radio-module_input-radio__NEcqz" aria-label="netbank_Axis Bank_4" aria-checked="false" name="netOption" id="netbank_Axis Bank_4" readonly=""/>
                                                                        <label for="netbank_Axis Bank_4" class="font-m Radio-module_input-label__CtCpv">
                                                                            <div class="WzE53e">
                                                                                <div class="Mu-Dgc">
                                                                                    <div class="font-m v+I8tr">Axis Bank</div>
                                                                                </div>
                                                                                <img src="https://static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/images/banks/AXIS.svg" class="_0MaLVA" data-testid="card-image"/>
                                                                            </div>
                                                                        </label>
                                                                    </div>
                                                                </section>
                                                                <section class="_9ubm5H" data-disabled="false">
                                                                    <div class="Radio-module_input-wrapper__dFjwL">
                                                                        <input type="radio" class="Radio-module_input-radio__NEcqz" aria-label="netbank_Federal Bank_5" aria-checked="false" name="netOption" id="netbank_Federal Bank_5" readonly=""/>
                                                                        <label for="netbank_Federal Bank_5" class="font-m Radio-module_input-label__CtCpv">
                                                                            <div class="WzE53e">
                                                                                <div class="Mu-Dgc">
                                                                                    <div class="font-m v+I8tr">Federal Bank</div>
                                                                                </div>
                                                                                <img src="https://static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/images/banks/FEDERAL.svg" class="_0MaLVA" data-testid="card-image"/>
                                                                            </div>
                                                                        </label>
                                                                    </div>
                                                                </section>
                                                                <section class="_9ubm5H" data-disabled="false">
                                                                    <div class="Radio-module_input-wrapper__dFjwL">
                                                                        <input type="radio" class="Radio-module_input-radio__NEcqz" aria-label="netbank_Indian Overseas Bank_6" aria-checked="false" name="netOption" id="netbank_Indian Overseas Bank_6" readonly=""/>
                                                                        <label for="netbank_Indian Overseas Bank_6" class="font-m Radio-module_input-label__CtCpv">
                                                                            <div class="WzE53e">
                                                                                <div class="Mu-Dgc">
                                                                                    <div class="font-m v+I8tr">Indian Overseas Bank</div>
                                                                                </div>
                                                                                <img src="https://static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/images/banks/IOB.svg" class="_0MaLVA" data-testid="card-image"/>
                                                                            </div>
                                                                        </label>
                                                                    </div>
                                                                </section>
                                                                <section class="_9ubm5H" data-disabled="false">
                                                                    <div class="Radio-module_input-wrapper__dFjwL">
                                                                        <input type="radio" class="Radio-module_input-radio__NEcqz" aria-label="netbank_Indian Bank_7" aria-checked="false" name="netOption" id="netbank_Indian Bank_7" readonly=""/>
                                                                        <label for="netbank_Indian Bank_7" class="font-m Radio-module_input-label__CtCpv">
                                                                            <div class="WzE53e">
                                                                                <div class="Mu-Dgc">
                                                                                    <div class="font-m v+I8tr">Indian Bank</div>
                                                                                </div>
                                                                                <img src="https://static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/images/banks/INB.svg" class="_0MaLVA" data-testid="card-image"/>
                                                                            </div>
                                                                        </label>
                                                                    </div>
                                                                </section>
                                                            </div>
                                                            <div class="mlBg7c">
                                                                <span class="KtyKcO font-m-semibold">All other banks</span>
                                                                <img src="//static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/p/img/UpArrow.svg" class="_59qN0L" style="height:24px;width:24px;object-fit:contain"/>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                            <div>
                                                <div class="FqfUx2">
                                                    <div class="wkTynO">
                                                        <img src="https://static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/images/gift-card-logo-09082023.svg" class="lidNe1"/>
                                                        <h3 class="LK9wcg font-m-semibold">Have a Flipkart Gift Card?</h3>
                                                    </div>
                                                    <span class="dmLJvC R0oF8M font-m-semibold">Add</span>
                                                </div>
                                            </div>
                                            <div class="AccordionItem-module_container__wzVrA XL1nQM">
                                                <div>
                                                    <div data-disabled="true" class="rwYWFp RaWEAG _3Awrcc">
                                                        <div class="aJW5Ph">
                                                            <img src="https://static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/images/cash-icon.svg" class="_2U1j-B"/>
                                                            <div class="_2c+L1Y">
                                                                <span class="EtFGuU RaWEAG font-m-semibold">Cash on Delivery</span>
                                                                <div></div>
                                                            </div>
                                                        </div>
                                                        <div data-testid="callout" class="HZlTsP tLBeHy flex-center font-s-semibold BOBUAY font-s">
                                                            <span data-testid="help">Unavailable</span>
                                                            <img src="https://static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/images/help-icon-grey.svg"/>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="AccordionItem-module_content-wrapper__xPTg8 AccordionItem-module_open-content__jtO8C" style="transition-duration:0.5s;transition-timing-function:ease-in-out">
                                                    <div class="AccordionItem-module_content__aMJ7P" aria-hidden="false"></div>
                                                </div>
                                            </div>
                                        </div>
                                    </section>
                                </div>
                            </div>
                        </div>
                    </section>
                    <section id="right-section-sticky" class="_7BvxCW">
                        <div class="PLPj2L">
                            <div data-testid="price-summary" class="-glKrM font-m">
                                <div class="DkSr+-">
                                    <div class="aG-fvC">
                                        <div class="_6Z01pv">
                                            <div class="aM0Q-J">
                                                <div class="n59FcR">
                                                    <span>Price (3 items)</span>
                                                </div>
                                                <span class="zy9AJ8">
                                                    <span data-testid="price" class="">₹97,963</span>
                                                    <span class="LiF7vo" data-testid="price">
                                                        <span class="LZqed-">+</span>
                                                        <img src="//static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/p/img/super-coin.svg" class="DXRz3J" style="height:14px;width:14px;object-fit:contain" data-testid="supercoin-icon" alt="super coin"/>
                                                        <span>209</span>
                                                    </span>
                                                </span>
                                            </div>
                                        </div>
                                        <div class="_6Z01pv">
                                            <div class="aM0Q-J">
                                                <div class="n59FcR">
                                                    <span>Protect Promise Fee</span>
                                                </div>
                                                <span class="zy9AJ8">
                                                    <span data-testid="price" class="">₹108</span>
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="nC8Q1W" data-testid="final-price">
                                    <div class="_6Z01pv">
                                        <div class="aM0Q-J">
                                            <div class="n59FcR">
                                                <span class="primary-500">Total Amount</span>
                                                <span>
                                                    <svg class="x+aL8E wmkOE9" width="7" height="14" viewBox="0 0 5 9" fill="none" data-testid="chevron">
                                                        <path class="" d="M1 8L4.5 4.5" stroke="#2A55E5" stroke-linecap="round"></path>
                                                        <path class="" d="M1 1L4.5 4.5" stroke="#2A55E5" stroke-linecap="round"></path>
                                                    </svg>
                                                </span>
                                            </div>
                                            <span class="zy9AJ8">
                                                <span data-testid="price" class="primary-500 font-l-semibold">₹98,071</span>
                                                <span class="LiF7vo" data-testid="price">
                                                    <span class="LZqed- primary-500 font-l-semibold">+</span>
                                                    <img src="//static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/p/img/super-coin.svg" class="DXRz3J" style="height:14px;width:14px;object-fit:contain" data-testid="supercoin-icon" alt="super coin"/>
                                                    <span class="primary-500 font-l-semibold">209</span>
                                                </span>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </section>
                    <section class="EnWBx9">
                        <div class="MvsVJI" data-testid="payment-options-list">
                            <div class="gT+azH">
                                <div class="Ot5TFk nJ73QU">
                                    <section class="RMFVQw">
                                        <div>
                                            <div>
                                                <div class="vX1ZMd">
                                                    <div class="_1wIaMQ">
                                                        <div class="BpBKpp">
                                                            <div>
                                                                <span id="text" class="RwF75u dbT2bJ" style="animation-duration:2s;animation-timing-function:ease;background-image:linear-gradient(to right, #0e772d 8px, #00ff4c 16px, #0e772d 24px)">
                                                                    <span class="_0RiCaT font-m-semibold">10% instant discount</span>
                                                                </span>
                                                            </div>
                                                            <span class="CShwxn font-s">Claim now with payment offers</span>
                                                        </div>
                                                        <div class="-qzbV0 flex-center">
                                                            <div class="roiZs1 left zIndex" style="left:16px;z-index:2">
                                                                <div class="_7AhCcx Vbf0Ec flex-center">
                                                                    <div class="yKVKYQ flex-center">
                                                                        <img src="https://static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/images/banks/ICICI.svg" class="XKDSAp" data-testid="card-image"/>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="roiZs1 left zIndex" style="left:8px;z-index:1">
                                                                <div class="_7AhCcx Vbf0Ec flex-center">
                                                                    <div class="yKVKYQ flex-center">
                                                                        <img src="https://static-assets-web.flixcart.com/fk-p-linchpin-web/fk-gringotts/images/banks/SBI.svg" class="XKDSAp" data-testid="card-image"/>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                            <div class="roiZs1" style="left:0;z-index:0">
                                                                <div class="_7AhCcx Vbf0Ec flex-center">
                                                                    <div class="yKVKYQ flex-center">
                                                                        <span class="font-s-semibold">+3</span>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </section>
                                </div>
                            </div>
                        </div>
                    </section>
                    <section class="ly1QWF">
                        <div class="MvsVJI" data-testid="payment-options-list">
                            <div class="gT+azH">
                                <div class="Ot5TFk nJ73QU">
                                    <section class="RMFVQw">
                                        <div>
                                            <div>
                                                <section class="font-l-semibold flex-center JpFbI2">
                                                    <div class="font-l-semibold">35 Crore happy customers and counting!</div>
                                                    <div class="ybR9AW flex-center OG2uvA y66IGj"></div>
                                                </section>
                                            </div>
                                        </div>
                                    </section>
                                </div>
                            </div>
                        </div>
                    </section>
                </div>
            </div>
            <footer>
                <footer class="JXUpR-">
                    <div class="J3jt6A font-m">
                        <div>
                            <span class="neutral-700">Policies: </span>
                            <a class="primary-500" href="/returnpolicy" target="_blank" rel="noopener noreferrer">Returns Policy</a>
                            <span class="neutral-700">| </span>
                            <a class="primary-500" href="/pages/terms" target="_blank" rel="noopener noreferrer">Terms of use</a>
                            <span class="neutral-700">| </span>
                            <a class="primary-500" href="/pages/paymentsecurity" target="_blank" rel="noopener noreferrer">Security</a>
                            <span class="neutral-700">| </span>
                            <a class="primary-500" href="/pages/privacypolicy" target="_blank" rel="noopener noreferrer">Privacy</a>
                        </div>
                        <div>
                            <span class="neutral-700">
                                © 2007-
                                <!-- -->
                                2025
                                <!-- -->
                                <span>Flipkart.com</span>
                            </span>
                        </div>
                        <div class="neutral-700">
                            <span>Need help?</span>
                            <span>
                                Visit the<a href="/helpcentre?catalog=55c9c8e2b0000023002c1702&amp;view=CATALOG?otracker=footer_navlinks" class="primary-500" target="_blank" rel="noopener noreferrer">
                                <!-- -->
                                Help Center</a>
                                <!-- -->
                                or<a href="/helpcentre?otracker=footer_navlinks" class="primary-500" target="_blank" rel="noopener noreferrer">
                                <!-- -->
                                Contact Us</a>
                            </span>
                        </div>
                    </div>
                </footer>
            </footer>
            <div class="BottomSheet-module_bottom-sheet__qWkyD">
                <div class="BottomSheet-module_bottom-sheet-overlay__bn4uH"></div>
                <main class="BottomSheet-module_bottom-sheet-main__e39dM" style="border-top-left-radius:16px;border-top-right-radius:16px">
                    <div>
                        <div></div>
                        <div class="BottomSheet-module_bottom-sheet-main-content__yI0FS"></div>
                    </div>
                </main>
            </div>
        </div>
        <script nonce="5080350460649940621" id="is_script">
            window.currentLocale = "en";
            window.__INITIAL_STATE__ = {
                "pageData": {
                    "asyncStatus": "SSR_LOADED",
                    "theme": "flipkart",
                    "pageTitle": {
                        "title": "Payments",
                        "superTitle": "Step 3 of 3",
                        "callout": {
                            "title": "100% Secure",
                            "image": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/lock-icon.svg",
                            "displayType": "BOTTOM_SHEET",
                            "content": {
                                "type": "SECURE_INFO_BOTTOMSHEET",
                                "header": {
                                    "title": "100% safe and secure payments"
                                },
                                "information": {
                                    "secureImage": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/secure-shield-icon-31082023.svg",
                                    "description": "Flipkart payment system is complaint with the Payment Card Industry Data Security Standards (PCI DSS) and uses SSL 256 bit encryption while saving your card information on our highly secure systems. Read our Privacy Policy to learn more.",
                                    "footerImages": ["/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/pci-complaint-logo-31082023.svg", "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/ssl-encryption-logo-31082023.svg"]
                                }
                            }
                        }
                    },
                    "viewTracking": {
                        "disabledPaymentOptions": [{
                            "paymentOption": "COD"
                        }],
                        "isPartPayment": false,
                        "offersAvailable": {
                            "offerCount": 27,
                            "offerSummary": [{
                                "id": "FPO250701194857KFHIY",
                                "type": "INSTANT_DISCOUNT",
                                "value": 1000000
                            }, {
                                "id": "FPO250701194515LLXO5",
                                "type": "INSTANT_DISCOUNT",
                                "value": 1000000
                            }, {
                                "id": "FPO250701194127SO194",
                                "type": "INSTANT_DISCOUNT",
                                "value": 1000000
                            }, {
                                "id": "FPO250626172916JI4VZ",
                                "type": "CASHBACK_ON_CARD",
                                "value": 1000
                            }, {
                                "id": "FPO250626182451RYQC7",
                                "type": "INSTANT_DISCOUNT",
                                "value": 75000
                            }, {
                                "id": "FPO250705190116Z9YX8",
                                "type": "INSTANT_DISCOUNT",
                                "value": 10000000
                            }, {
                                "id": "FPO250704202225I5HHC",
                                "type": "INSTANT_DISCOUNT",
                                "value": 250000
                            }, {
                                "id": "FPO250704204038MD3DZ",
                                "type": "INSTANT_DISCOUNT",
                                "value": 375000
                            }, {
                                "id": "FPO2507042045036N25F",
                                "type": "INSTANT_DISCOUNT",
                                "value": 400000
                            }, {
                                "id": "FPO25070420170018FK3",
                                "type": "INSTANT_DISCOUNT",
                                "value": 200000
                            }, {
                                "id": "FPO250704203653BLDZA",
                                "type": "INSTANT_DISCOUNT",
                                "value": 400000
                            }, {
                                "id": "FPO250619134128USHPF",
                                "type": "CASHBACK_ON_CARD",
                                "value": 400000
                            }, {
                                "id": "FPO250630202506KYC5F",
                                "type": "INSTANT_DISCOUNT",
                                "value": 50000
                            }, {
                                "id": "FPO250704192447CLSFR",
                                "type": "INSTANT_DISCOUNT",
                                "value": 75000
                            }, {
                                "id": "FPO2507042105097DZ77",
                                "type": "INSTANT_DISCOUNT",
                                "value": 50000
                            }, {
                                "id": "FPO2506301938399SY1F",
                                "type": "INSTANT_DISCOUNT",
                                "value": 150000
                            }, {
                                "id": "FPO250704194638XUV22",
                                "type": "INSTANT_DISCOUNT",
                                "value": 100000
                            }, {
                                "id": "FPO250705185902AISC5",
                                "type": "INSTANT_DISCOUNT",
                                "value": 10000000
                            }, {
                                "id": "FPO2507042008157YQZM",
                                "type": "INSTANT_DISCOUNT",
                                "value": 175000
                            }, {
                                "id": "FPO25070420315436CH6",
                                "type": "INSTANT_DISCOUNT",
                                "value": 350000
                            }, {
                                "id": "FPO250705190347GHR57",
                                "type": "INSTANT_DISCOUNT",
                                "value": 10000000
                            }, {
                                "id": "FPO250704204930KZYV3",
                                "type": "INSTANT_DISCOUNT",
                                "value": 450000
                            }, {
                                "id": "FPO250619135528ZQIZW",
                                "type": "CASHBACK_ON_CARD",
                                "value": 75000
                            }, {
                                "id": "FPO2507042000473JP81",
                                "type": "INSTANT_DISCOUNT",
                                "value": 150000
                            }, {
                                "id": "FPO2507042306179OKXZ",
                                "type": "INSTANT_DISCOUNT",
                                "value": 125000
                            }, {
                                "id": "FPO250704202703TYGA8",
                                "type": "INSTANT_DISCOUNT",
                                "value": 325000
                            }, {
                                "id": "FPO250704210925MIFUZ",
                                "type": "INSTANT_DISCOUNT",
                                "value": 75000
                            }]
                        },
                        "checkoutSuperCoins": 209,
                        "isCODApplicable": false,
                        "isRiskBasedFPLAvailable": false,
                        "isCODAdvance": false,
                        "isSplitPayment": false,
                        "isNCEMIAvailable": false,
                        "giftCardUsed": false,
                        "paymentOptionsSaved": [{
                            "isPaymentDefaultOption": true,
                            "paymentOptionProvider": "FLIPKART",
                            "isSuperCoinApplicable": true,
                            "paymentOptionType": "SAVED_CARD",
                            "isExtraDiscount": false,
                            "paymentOptionCount": 1
                        }],
                        "paymentOptionsRegular": {
                            "paymentOptions": [{
                                "paymentOption": "SAVED_INSTRUMENTS"
                            }, {
                                "paymentOption": "UPI"
                            }, {
                                "paymentOption": "CREDIT"
                            }, {
                                "paymentOption": "EMI_OPTIONS"
                            }, {
                                "paymentOption": "NET_OPTIONS"
                            }],
                            "count": 5
                        },
                        "EGVWalletUsed": false,
                        "checkouttype": "normalcheckout"
                    },
                    "responseType": "PAYMENT_OPTIONS",
                    "responseStatus": "SUCCESS",
                    "priceSummaryDetails": {
                        "expanded": false,
                        "clickTracking": {}
                    },
                    "basePriceSummary": {
                        "finalPrice": {
                            "label": "Total Amount",
                            "prices": [{
                                "priceType": "PRICE",
                                "currency": "INR",
                                "value": "9807100",
                                "dlsToken": "primary-500 font-l-semibold"
                            }, {
                                "priceType": "COIN",
                                "value": "209",
                                "dlsToken": "primary-500 font-l-semibold"
                            }],
                            "dlsToken": "primary-500"
                        },
                        "finalPriceBreakup": [{
                            "label": "Total Amount",
                            "prices": [{
                                "priceType": "PRICE",
                                "currency": "INR",
                                "value": "9807100",
                                "dlsToken": "primary-500 font-l-semibold"
                            }, {
                                "priceType": "COIN",
                                "value": "209",
                                "dlsToken": "primary-500 font-l-semibold"
                            }],
                            "dlsToken": "primary-500"
                        }],
                        "breakup": [{
                            "label": "Price (3 items)",
                            "prices": [{
                                "priceType": "PRICE",
                                "currency": "INR",
                                "value": "9796300"
                            }, {
                                "priceType": "COIN",
                                "value": "209"
                            }],
                            "breakupType": "BASE_PRICE_MULTIPLE_ITEMS",
                            "priceAttributeList": []
                        }, {
                            "label": "Protect Promise Fee",
                            "prices": [{
                                "priceType": "PRICE",
                                "currency": "INR",
                                "value": "10800"
                            }],
                            "breakupType": "PROTECT_PROMISE_FEE",
                            "priceAttributeList": []
                        }],
                        "messages": []
                    },
                    "finalPriceSummary": {
                        "finalPrice": {
                            "label": "Total Amount",
                            "prices": [{
                                "priceType": "PRICE",
                                "currency": "INR",
                                "value": "9807100",
                                "dlsToken": "primary-500 font-l-semibold"
                            }, {
                                "priceType": "COIN",
                                "value": "209",
                                "dlsToken": "primary-500 font-l-semibold"
                            }],
                            "dlsToken": "primary-500"
                        },
                        "finalPriceBreakup": [{
                            "label": "Total Amount",
                            "prices": [{
                                "priceType": "PRICE",
                                "currency": "INR",
                                "value": "9807100",
                                "dlsToken": "primary-500 font-l-semibold"
                            }, {
                                "priceType": "COIN",
                                "value": "209",
                                "dlsToken": "primary-500 font-l-semibold"
                            }],
                            "dlsToken": "primary-500"
                        }],
                        "breakup": [{
                            "label": "Price (3 items)",
                            "prices": [{
                                "priceType": "PRICE",
                                "currency": "INR",
                                "value": "9796300"
                            }, {
                                "priceType": "COIN",
                                "value": "209"
                            }],
                            "breakupType": "BASE_PRICE_MULTIPLE_ITEMS",
                            "priceAttributeList": []
                        }, {
                            "label": "Protect Promise Fee",
                            "prices": [{
                                "priceType": "PRICE",
                                "currency": "INR",
                                "value": "10800"
                            }],
                            "breakupType": "PROTECT_PROMISE_FEE",
                            "priceAttributeList": []
                        }],
                        "messages": []
                    },
                    "error": null,
                    "failureStatusDetail": null,
                    "errorToast": null,
                    "isDiffShownToUser": false,
                    "triggerDiffPopupPrimaryAction": false,
                    "pageType": "Home",
                    "fallbackBottomSheet": null,
                    "fallbackOption": null,
                    "trustCalloutDetails": {
                        "title": "100% Secure",
                        "image": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/lock-icon.svg",
                        "displayType": "BOTTOM_SHEET",
                        "content": {
                            "type": "SECURE_INFO_BOTTOMSHEET",
                            "header": {
                                "title": "100% safe and secure payments"
                            },
                            "information": {
                                "secureImage": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/secure-shield-icon-31082023.svg",
                                "description": "Flipkart payment system is complaint with the Payment Card Industry Data Security Standards (PCI DSS) and uses SSL 256 bit encryption while saving your card information on our highly secure systems. Read our Privacy Policy to learn more.",
                                "footerImages": ["/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/pci-complaint-logo-31082023.svg", "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/ssl-encryption-logo-31082023.svg"]
                            }
                        }
                    }
                },
                "paymentOptions": {
                    "items": [{
                        "type": "OFFER_LIST",
                        "data": {
                            "offerSummary": {
                                "title": "10% instant discount",
                                "subTitle": "Claim now with payment offers",
                                "iconsInfo": {
                                    "remainingOffersCount": 3,
                                    "icons": ["/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/banks/ICICI.svg", "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/banks/SBI.svg"]
                                }
                            },
                            "offers": {
                                "headerTitle": "Offers on online payment",
                                "offerList": [{
                                    "provider": ["ICICI"],
                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/banks/ICICI.svg",
                                    "offerText": {
                                        "text": "Save ₹10,000"
                                    },
                                    "offerDescription": {
                                        "type": "tenure.detail.offer.terms.conditions",
                                        "tncText": "Terms and conditions",
                                        "id": "FPO250701194857KFHIY",
                                        "text": "Extra ₹10000 Off On selected  Bank TRNX"
                                    }
                                }, {
                                    "provider": ["SBI"],
                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/banks/SBI.svg",
                                    "offerText": {
                                        "text": "Save ₹10,000"
                                    },
                                    "offerDescription": {
                                        "type": "tenure.detail.offer.terms.conditions",
                                        "tncText": "Terms and conditions",
                                        "id": "FPO250701194515LLXO5",
                                        "text": "Extra ₹10000 Off On selected  Bank TRNX"
                                    }
                                }, {
                                    "provider": ["KOTAK"],
                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/banks/KOTAK.svg",
                                    "offerText": {
                                        "text": "Save ₹10,000"
                                    },
                                    "offerDescription": {
                                        "type": "tenure.detail.offer.terms.conditions",
                                        "tncText": "Terms and conditions",
                                        "id": "FPO250701194127SO194",
                                        "text": "Extra ₹10000 Off On selected  Bank TRNX"
                                    }
                                }, {
                                    "provider": [],
                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/green-offer-tag.svg",
                                    "offerText": {
                                        "text": "Get ₹10 cashback"
                                    },
                                    "offerDescription": {
                                        "type": "tenure.detail.offer.terms.conditions",
                                        "tncText": "Terms and conditions",
                                        "id": "FPO250626172916JI4VZ",
                                        "text": "Flat ₹10 Cashback on Paytm UPI Trxns. Min Order Value ₹500. Valid once per Paytm account"
                                    }
                                }, {
                                    "provider": ["IDFC"],
                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/banks/IDFC.svg",
                                    "offerText": {
                                        "text": "Save ₹750"
                                    },
                                    "offerDescription": {
                                        "type": "tenure.detail.offer.terms.conditions",
                                        "tncText": "Terms and conditions",
                                        "id": "FPO250626182451RYQC7",
                                        "text": "5% off up to ₹750 on IDFC FIRST Power Women Platinum and Signature DebitCards. Min Txn Value: ₹5,000"
                                    }
                                }, {
                                    "provider": ["SBI"],
                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/banks/SBI.svg",
                                    "offerText": {
                                        "text": "No cost EMI offer"
                                    },
                                    "offerDescription": {
                                        "type": "tenure.detail.offer.terms.conditions",
                                        "tncText": "Terms and conditions",
                                        "id": "FPO250705190116Z9YX8",
                                        "text": "No Cost EMI Upto 6 Months"
                                    }
                                }, {
                                    "provider": ["HDFC"],
                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/banks/HDFC.svg",
                                    "offerText": {
                                        "text": "Save ₹2,500"
                                    },
                                    "offerDescription": {
                                        "type": "tenure.detail.offer.terms.conditions",
                                        "tncText": "Terms and conditions",
                                        "id": "FPO250704202225I5HHC",
                                        "text": "Flat ₹2500 on HDFC Bank Credit Card EMI on 12 months and above tenure. Min Txn Value: ₹30000"
                                    }
                                }, {
                                    "provider": ["HDFC"],
                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/banks/HDFC.svg",
                                    "offerText": {
                                        "text": "Save ₹3,750"
                                    },
                                    "offerDescription": {
                                        "type": "tenure.detail.offer.terms.conditions",
                                        "tncText": "Terms and conditions",
                                        "id": "FPO250704204038MD3DZ",
                                        "text": "Flat ₹3750 on HDFC Bank Credit Card EMI on 6 months tenure. Min Txn Value: ₹75000"
                                    }
                                }, {
                                    "provider": ["HDFC"],
                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/banks/HDFC.svg",
                                    "offerText": {
                                        "text": "Save ₹4,000"
                                    },
                                    "offerDescription": {
                                        "type": "tenure.detail.offer.terms.conditions",
                                        "tncText": "Terms and conditions",
                                        "id": "FPO2507042045036N25F",
                                        "text": "Flat ₹4000 on HDFC Bank Credit Card EMI on 9 months tenure. Min Txn Value: ₹75000"
                                    }
                                }, {
                                    "provider": ["HDFC"],
                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/banks/HDFC.svg",
                                    "offerText": {
                                        "text": "Save ₹2,000"
                                    },
                                    "offerDescription": {
                                        "type": "tenure.detail.offer.terms.conditions",
                                        "tncText": "Terms and conditions",
                                        "id": "FPO25070420170018FK3",
                                        "text": "Flat ₹2000 on HDFC Bank Credit Card EMI on 9 months tenure. Min Txn Value: ₹30000"
                                    }
                                }, {
                                    "provider": ["HDFC"],
                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/banks/HDFC.svg",
                                    "offerText": {
                                        "text": "Save ₹4,000"
                                    },
                                    "offerDescription": {
                                        "type": "tenure.detail.offer.terms.conditions",
                                        "tncText": "Terms and conditions",
                                        "id": "FPO250704203653BLDZA",
                                        "text": "Flat ₹4000 on HDFC Bank Credit Card EMI on 12 months and above tenure. Min Txn Value: ₹50000"
                                    }
                                }, {
                                    "provider": ["FLIPKARTAXISBANK"],
                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/banks/AXIS.svg",
                                    "offerText": {
                                        "text": "Get 5% cashback"
                                    },
                                    "offerDescription": {
                                        "type": "tenure.detail.offer.terms.conditions",
                                        "tncText": "Terms and conditions",
                                        "id": "FPO250619134128USHPF",
                                        "text": "5% cashback on Flipkart Axis Bank Credit Card upto ₹4,000 per statement quarter"
                                    }
                                }, {
                                    "provider": ["BOBARODA"],
                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/banks/BOB.svg",
                                    "offerText": {
                                        "text": "Save ₹500"
                                    },
                                    "offerDescription": {
                                        "type": "tenure.detail.offer.terms.conditions",
                                        "tncText": "Terms and conditions",
                                        "id": "FPO250630202506KYC5F",
                                        "text": "Extra ₹500 off on BOBCARD EMI Transactions on 9 months and above tenures. Min Product Value ₹25000"
                                    }
                                }, {
                                    "provider": ["HDFC"],
                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/banks/HDFC.svg",
                                    "offerText": {
                                        "text": "Save ₹750"
                                    },
                                    "offerDescription": {
                                        "type": "tenure.detail.offer.terms.conditions",
                                        "tncText": "Terms and conditions",
                                        "id": "FPO250704192447CLSFR",
                                        "text": "Flat ₹750 on HDFC Bank Credit Card EMI on 6 months tenure. Min Txn Value: ₹15000"
                                    }
                                }, {
                                    "provider": ["HDFC"],
                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/banks/HDFC.svg",
                                    "offerText": {
                                        "text": "Save ₹500"
                                    },
                                    "offerDescription": {
                                        "type": "tenure.detail.offer.terms.conditions",
                                        "tncText": "Terms and conditions",
                                        "id": "FPO2507042105097DZ77",
                                        "text": "Flat ₹500 on HDFC Bank Credit Card EMI on 6 months tenure. Min. Txn Value: ₹10000"
                                    }
                                }, {
                                    "provider": ["BOBARODA"],
                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/banks/BOB.svg",
                                    "offerText": {
                                        "text": "Save ₹1,500"
                                    },
                                    "offerDescription": {
                                        "type": "tenure.detail.offer.terms.conditions",
                                        "tncText": "Terms and conditions",
                                        "id": "FPO2506301938399SY1F",
                                        "text": "10% off up to ₹1,500 on BOBCARD EMI Transactions of 6 months and above tenures, Min TxnValue: ₹7,500"
                                    }
                                }, {
                                    "provider": ["HDFC"],
                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/banks/HDFC.svg",
                                    "offerText": {
                                        "text": "Save ₹1,000"
                                    },
                                    "offerDescription": {
                                        "type": "tenure.detail.offer.terms.conditions",
                                        "tncText": "Terms and conditions",
                                        "id": "FPO250704194638XUV22",
                                        "text": "Flat ₹1000 on HDFC Bank Credit Card EMI on 9 months and above tenure. Min Txn Value: ₹15000"
                                    }
                                }, {
                                    "provider": ["ICICI"],
                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/banks/ICICI.svg",
                                    "offerText": {
                                        "text": "No cost EMI offer"
                                    },
                                    "offerDescription": {
                                        "type": "tenure.detail.offer.terms.conditions",
                                        "tncText": "Terms and conditions",
                                        "id": "FPO250705185902AISC5",
                                        "text": "No Cost EMI Upto 6 Months"
                                    }
                                }, {
                                    "provider": ["HDFC"],
                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/banks/HDFC.svg",
                                    "offerText": {
                                        "text": "Save ₹1,750"
                                    },
                                    "offerDescription": {
                                        "type": "tenure.detail.offer.terms.conditions",
                                        "tncText": "Terms and conditions",
                                        "id": "FPO2507042008157YQZM",
                                        "text": "Flat ₹1750 on HDFC Bank Credit Card EMI on 6 months Tenure. Min Txn Value: ₹30000"
                                    }
                                }, {
                                    "provider": ["HDFC"],
                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/banks/HDFC.svg",
                                    "offerText": {
                                        "text": "Save ₹3,500"
                                    },
                                    "offerDescription": {
                                        "type": "tenure.detail.offer.terms.conditions",
                                        "tncText": "Terms and conditions",
                                        "id": "FPO25070420315436CH6",
                                        "text": "Flat ₹3500 on HDFC Bank Credit Card EMI on 9 months tenure. Min Txn Value: ₹50000"
                                    }
                                }, {
                                    "provider": ["KOTAK"],
                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/banks/KOTAK.svg",
                                    "offerText": {
                                        "text": "No cost EMI offer"
                                    },
                                    "offerDescription": {
                                        "type": "tenure.detail.offer.terms.conditions",
                                        "tncText": "Terms and conditions",
                                        "id": "FPO250705190347GHR57",
                                        "text": "No Cost EMI Upto 6 Months"
                                    }
                                }, {
                                    "provider": ["HDFC"],
                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/banks/HDFC.svg",
                                    "offerText": {
                                        "text": "Save ₹4,500"
                                    },
                                    "offerDescription": {
                                        "type": "tenure.detail.offer.terms.conditions",
                                        "tncText": "Terms and conditions",
                                        "id": "FPO250704204930KZYV3",
                                        "text": "Flat ₹4500 on HDFC Bank Credit Card EMI on 12 months and above tenure. Min Txn Value: ₹75000"
                                    }
                                }, {
                                    "provider": ["FLIPKARTAXISBANK"],
                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/banks/AXIS.svg",
                                    "offerText": {
                                        "text": "Get 5% cashback"
                                    },
                                    "offerDescription": {
                                        "type": "tenure.detail.offer.terms.conditions",
                                        "tncText": "Terms and conditions",
                                        "id": "FPO250619135528ZQIZW",
                                        "text": "5% cashback on Axis Bank Flipkart Debit Card up to ₹750"
                                    }
                                }, {
                                    "provider": ["HDFC"],
                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/banks/HDFC.svg",
                                    "offerText": {
                                        "text": "Save ₹1,500"
                                    },
                                    "offerDescription": {
                                        "type": "tenure.detail.offer.terms.conditions",
                                        "tncText": "Terms and conditions",
                                        "id": "FPO2507042000473JP81",
                                        "text": "Flat ₹1500 on HDFC Bank Credit Card EMI on 9 months and above tenure. Min Txn Value: ₹20000"
                                    }
                                }, {
                                    "provider": ["HDFC"],
                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/banks/HDFC.svg",
                                    "offerText": {
                                        "text": "Save ₹1,250"
                                    },
                                    "offerDescription": {
                                        "type": "tenure.detail.offer.terms.conditions",
                                        "tncText": "Terms and conditions",
                                        "id": "FPO2507042306179OKXZ",
                                        "text": "Flat ₹1250 on HDFC Bank Credit Card EMI on 6 months tenure. Min Txn Value: ₹20000"
                                    }
                                }, {
                                    "provider": ["HDFC"],
                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/banks/HDFC.svg",
                                    "offerText": {
                                        "text": "Save ₹3,250"
                                    },
                                    "offerDescription": {
                                        "type": "tenure.detail.offer.terms.conditions",
                                        "tncText": "Terms and conditions",
                                        "id": "FPO250704202703TYGA8",
                                        "text": "Flat ₹3250 on HDFC Bank Credit Card EMI on 6 months tenure. Min Txn Value: ₹50000"
                                    }
                                }, {
                                    "provider": ["HDFC"],
                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/banks/HDFC.svg",
                                    "offerText": {
                                        "text": "Save ₹750"
                                    },
                                    "offerDescription": {
                                        "type": "tenure.detail.offer.terms.conditions",
                                        "tncText": "Terms and conditions",
                                        "id": "FPO250704210925MIFUZ",
                                        "text": "Flat ₹750 on HDFC Bank Credit Card EMI on 9 months and above tenure. Min Txn Value: ₹10000"
                                    }
                                }],
                                "filterList": [{
                                    "title": "All Offers",
                                    "type": "provider",
                                    "value": "ALL"
                                }, {
                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/banks/ICICI.svg",
                                    "title": "ICICI Bank",
                                    "type": "provider",
                                    "value": "ICICI"
                                }, {
                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/banks/SBI.svg",
                                    "title": "State Bank of India",
                                    "type": "provider",
                                    "value": "SBI"
                                }, {
                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/banks/KOTAK.svg",
                                    "title": "Kotak Bank",
                                    "type": "provider",
                                    "value": "KOTAK"
                                }, {
                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/banks/IDFC.svg",
                                    "title": "IDFC FIRST Bank",
                                    "type": "provider",
                                    "value": "IDFC"
                                }, {
                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/banks/HDFC.svg",
                                    "title": "HDFC Bank",
                                    "type": "provider",
                                    "value": "HDFC"
                                }, {
                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/banks/AXIS.svg",
                                    "title": "Flipkart Axis Bank",
                                    "type": "provider",
                                    "value": "FLIPKARTAXISBANK"
                                }, {
                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/banks/BOB.svg",
                                    "title": "Bank of Baroda",
                                    "type": "provider",
                                    "value": "BOBARODA"
                                }]
                            }
                        },
                        "section": "RIGHT",
                        "subSection": null,
                        "stickOnlyOnDesktop": true
                    }, {
                        "type": "PAYMENT_OPTION",
                        "expanded": true,
                        "clickTracking": {
                            "isOfferApplied": true,
                            "feesInfo": [{
                                "feesType": "PBO_FEE",
                                "feesValue": 9900
                            }],
                            "offersAvailable": {
                                "offerCount": 1,
                                "offerSummary": [{
                                    "id": "FPO250701194857KFHIY",
                                    "type": "PBO",
                                    "value": 1000000
                                }]
                            },
                            "amountPayable": 8817000,
                            "discount": 1000000,
                            "isSuperCoinsApplied": false,
                            "section": "saved",
                            "checkouttype": "normalcheckout"
                        },
                        "data": {
                            "instrumentType": "SAVED_INSTRUMENTS",
                            "applicable": true,
                            "header": {
                                "title": "Saved Payment Options",
                                "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/clock-counter-clockwise.svg"
                            },
                            "content": {
                                "showLimit": 2,
                                "options": [{
                                    "title": "ICICI Bank Credit Card",
                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/banks/ICICI.svg",
                                    "applicable": true,
                                    "selected": true,
                                    "aggregatedOffer": {
                                        "selectedText": "₹10,000 discount applied.",
                                        "defaultText": "₹10,000 discount applicable.",
                                        "selectedImage": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/offer-selected.svg",
                                        "defaultImage": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/offer-unselected.svg",
                                        "dlsToken": "success-500",
                                        "callout": {
                                            "title": "Details",
                                            "displayType": "BOTTOM_SHEET",
                                            "content": {
                                                "type": "OFFER_LIST",
                                                "header": {
                                                    "title": "Offer Details"
                                                },
                                                "information": {
                                                    "offers": [{
                                                        "offerHeader": {
                                                            "title": "Extra ₹10000 Off On selected  Bank TRNX",
                                                            "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/green-offer-tag.svg"
                                                        },
                                                        "offerDescription": [{
                                                            "key": "Min. order value",
                                                            "value": "₹10,000",
                                                            "token": ""
                                                        }, {
                                                            "key": "Max Order Value",
                                                            "value": "₹10,00,000",
                                                            "token": ""
                                                        }, {
                                                            "key": "Max Discount per order",
                                                            "value": "₹10,000",
                                                            "token": ""
                                                        }, {
                                                            "key": "Max. number of orders",
                                                            "value": "1",
                                                            "token": ""
                                                        }, {
                                                            "key": "You get",
                                                            "value": "₹10,000",
                                                            "token": "success-500"
                                                        }],
                                                        "offerFooter": {
                                                            "tncInfo": {
                                                                "id": "FPO250701194857KFHIY",
                                                                "text": "Read offer T&C"
                                                            }
                                                        }
                                                    }]
                                                }
                                            }
                                        }
                                    },
                                    "conditionalOffer": [],
                                    "instrumentCheckRequired": false,
                                    "payButtonDetails": {
                                        "irisKey": "payAmount",
                                        "disablePayButton": false,
                                        "amount": 9807100
                                    },
                                    "provider": "FLIPKART",
                                    "instrumentDetails": {
                                        "responseStatus": "SUCCESS",
                                        "disablePayButton": false,
                                        "disablePayTimeout": 0,
                                        "viewTracking": {
                                            "isOfferApplied": true,
                                            "feesInfo": [{
                                                "feesType": "PBO_FEE",
                                                "feesValue": 9900
                                            }],
                                            "offersAvailable": {
                                                "offerCount": 1,
                                                "offerSummary": [{
                                                    "id": "FPO250701194857KFHIY",
                                                    "type": "PBO",
                                                    "value": 1000000
                                                }]
                                            },
                                            "amountPayable": 8817000,
                                            "discount": 1000000,
                                            "isSuperCoinsApplied": false,
                                            "section": "saved",
                                            "checkouttype": "normalcheckout"
                                        },
                                        "paymentInstrument": "SAVED_CARD",
                                        "aggregatedOffer": {
                                            "selectedText": "₹10,000 discount applied.",
                                            "defaultText": "₹10,000 discount applicable.",
                                            "selectedImage": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/offer-selected.svg",
                                            "defaultImage": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/offer-unselected.svg",
                                            "dlsToken": "success-500",
                                            "callout": {
                                                "title": "Details",
                                                "displayType": "BOTTOM_SHEET",
                                                "content": {
                                                    "type": "OFFER_LIST",
                                                    "header": {
                                                        "title": "Offer Details"
                                                    },
                                                    "information": {
                                                        "offers": [{
                                                            "offerHeader": {
                                                                "title": "Extra ₹10000 Off On selected  Bank TRNX",
                                                                "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/green-offer-tag.svg"
                                                            },
                                                            "offerDescription": [{
                                                                "key": "Min. order value",
                                                                "value": "₹10,000",
                                                                "token": ""
                                                            }, {
                                                                "key": "Max Order Value",
                                                                "value": "₹10,00,000",
                                                                "token": ""
                                                            }, {
                                                                "key": "Max Discount per order",
                                                                "value": "₹10,000",
                                                                "token": ""
                                                            }, {
                                                                "key": "Max. number of orders",
                                                                "value": "1",
                                                                "token": ""
                                                            }, {
                                                                "key": "You get",
                                                                "value": "₹10,000",
                                                                "token": "success-500"
                                                            }],
                                                            "offerFooter": {
                                                                "tncInfo": {
                                                                    "id": "FPO250701194857KFHIY",
                                                                    "text": "Read offer T&C"
                                                                }
                                                            }
                                                        }]
                                                    }
                                                }
                                            }
                                        },
                                        "conditionalOffer": [],
                                        "authMode": "IVR",
                                        "payButtonDetails": {
                                            "irisKey": "payAmount",
                                            "disablePayButton": false,
                                            "amount": 8817000
                                        },
                                        "pageDiff": {
                                            "priceSummary": {
                                                "breakupOrderingList": ["REMAINING_AMOUNT_SINGLE_ITEM", "REMAINING_AMOUNT_MULTIPLE_ITEM", "BASE_PRICE_SINGLE_ITEM", "BASE_PRICE_MULTIPLE_ITEMS", "TOTAL_LOAN_AMOUNT", "ADVANCE_BASE_PRICE", "DELIVERY_CHARGE", "PICKUP_CHARGE", "PACKAGING_CHARGE", "SALE_FEE", "PLATFORM_FEE", "CONVENIENCE_FEE", "PROTECT_PROMISE_FEE", "RAIN_FEE", "SELLER_HANDLING_FEE", "HANDLING_FEE", "EGV", "EGV_WALLET", "BANK_OFFER_DISCOUNT", "OFFER_HANDLING_FEE", "INTEREST_BY_BANK", "NC_EMI_DISCOUNT", "FK_PAYLATER_CREDIT", "FK_PAYLATER_EMI_CREDIT", "FK_PAYLATER_DISCOUNT", "PAY_AT_DELIVERY", "AMOUNT_PAYABLE", "APPROVED_EMI_AMOUNT"],
                                                "finalPriceBreakupOrderingList": ["AMOUNT_PAYABLE"],
                                                "finalPrice": {
                                                    "label": "Total Amount",
                                                    "prices": [{
                                                        "priceType": "PRICE",
                                                        "currency": "INR",
                                                        "value": "8817000",
                                                        "dlsToken": "primary-500 font-l-semibold"
                                                    }, {
                                                        "priceType": "COIN",
                                                        "currency": "COIN",
                                                        "value": "209",
                                                        "dlsToken": "primary-500 font-l-semibold"
                                                    }],
                                                    "dlsToken": "primary-500",
                                                    "breakupType": "AMOUNT_PAYABLE"
                                                },
                                                "finalPriceBreakup": [{
                                                    "label": "Total Amount",
                                                    "prices": [{
                                                        "priceType": "PRICE",
                                                        "currency": "INR",
                                                        "value": "8817000",
                                                        "dlsToken": "primary-500 font-l-semibold"
                                                    }, {
                                                        "priceType": "COIN",
                                                        "currency": "COIN",
                                                        "value": "209",
                                                        "dlsToken": "primary-500 font-l-semibold"
                                                    }],
                                                    "dlsToken": "primary-500",
                                                    "breakupType": "AMOUNT_PAYABLE"
                                                }],
                                                "breakup": [{
                                                    "label": "Offer Handling Fee",
                                                    "prices": [{
                                                        "priceType": "PRICE",
                                                        "currency": "INR",
                                                        "value": "9900"
                                                    }],
                                                    "breakupType": "OFFER_HANDLING_FEE",
                                                    "priceAttributeList": [{
                                                        "type": "CALLOUT",
                                                        "callout": {
                                                            "image": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/help-icon-grey.svg",
                                                            "displayType": "BOTTOM_SHEET",
                                                            "content": {
                                                                "type": "EDUCATIONAL_BOTTOMSHEET",
                                                                "information": [{
                                                                    "headerTitle": "Offer Handling Fee",
                                                                    "description": "Flipkart incurs cost in securing, managing & processing card offers on the Platform, so a fixed handling fee of ₹99 is charged to you on availing these offers on the Platform"
                                                                }]
                                                            }
                                                        }
                                                    }]
                                                }, {
                                                    "label": "Bank Offer Discount",
                                                    "prices": [{
                                                        "priceType": "DISCOUNT",
                                                        "currency": "INR",
                                                        "value": "1000000",
                                                        "dlsToken": "success-500"
                                                    }],
                                                    "breakupType": "BANK_OFFER_DISCOUNT"
                                                }]
                                            }
                                        },
                                        "infoMessages": [{
                                            "text": "₹99 Offer Handling fee",
                                            "callout": {
                                                "title": "Why ?",
                                                "displayType": "BOTTOM_SHEET",
                                                "content": {
                                                    "type": "INFO_BOTTOMSHEET",
                                                    "header": {
                                                        "title": "Offer Handling Fee"
                                                    },
                                                    "information": {
                                                        "message": "Flipkart incurs cost in securing, managing & processing card offers on the Platform, so a fixed handling fee of ₹99 is charged to you on availing these offers on the Platform"
                                                    }
                                                },
                                                "trackingInfo": {
                                                    "action": "Offer Handling Fee"
                                                }
                                            }
                                        }],
                                        "cardInstrumentDetails": {
                                            "instrumentType": "SAVED_CARD",
                                            "emiDetails": {
                                                "emiType": "credit-card",
                                                "aggregatedOffer": {
                                                    "selectedText": "₹10,000 discount applied.",
                                                    "defaultText": "₹10,000 discount applicable.",
                                                    "selectedImage": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/offer-selected.svg",
                                                    "defaultImage": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/offer-unselected.svg",
                                                    "dlsToken": "success-500",
                                                    "callout": {
                                                        "title": "Details",
                                                        "displayType": "BOTTOM_SHEET",
                                                        "content": {
                                                            "type": "OFFER_LIST",
                                                            "header": {
                                                                "title": "Offer Details"
                                                            },
                                                            "information": {
                                                                "offers": [{
                                                                    "offerHeader": {
                                                                        "title": "Extra ₹10000 Off On selected  Bank TRNX",
                                                                        "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/green-offer-tag.svg"
                                                                    },
                                                                    "offerDescription": [{
                                                                        "key": "Min. order value",
                                                                        "value": "₹10,000",
                                                                        "token": ""
                                                                    }, {
                                                                        "key": "Max Order Value",
                                                                        "value": "₹10,00,000",
                                                                        "token": ""
                                                                    }, {
                                                                        "key": "Max Discount per order",
                                                                        "value": "₹10,000",
                                                                        "token": ""
                                                                    }, {
                                                                        "key": "Max. number of orders",
                                                                        "value": "1",
                                                                        "token": ""
                                                                    }, {
                                                                        "key": "You get",
                                                                        "value": "₹10,000",
                                                                        "token": "success-500"
                                                                    }],
                                                                    "offerFooter": {
                                                                        "tncInfo": {
                                                                            "id": "FPO250701194857KFHIY",
                                                                            "text": "Read offer T&C"
                                                                        }
                                                                    }
                                                                }]
                                                            }
                                                        }
                                                    }
                                                },
                                                "conditionalOffer": [],
                                                "infoMessages": [{
                                                    "text": "₹99 Offer Handling fee",
                                                    "callout": {
                                                        "title": "Why ?",
                                                        "displayType": "BOTTOM_SHEET",
                                                        "content": {
                                                            "type": "INFO_BOTTOMSHEET",
                                                            "header": {
                                                                "title": "Offer Handling Fee"
                                                            },
                                                            "information": {
                                                                "message": "Flipkart incurs cost in securing, managing & processing card offers on the Platform, so a fixed handling fee of ₹99 is charged to you on availing these offers on the Platform"
                                                            }
                                                        },
                                                        "trackingInfo": {
                                                            "action": "Offer Handling Fee"
                                                        }
                                                    }
                                                }],
                                                "subText": "No Cost EMI starting from 14703/month",
                                                "buttonDetails": {
                                                    "irisKey": "payInEmi",
                                                    "disablePayButton": false,
                                                    "amount": 8817000
                                                }
                                            }
                                        }
                                    },
                                    "section": "PREFERRED",
                                    "type": "SAVED_CARD",
                                    "cvvCallout": {
                                        "image": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/help-icon-black.svg",
                                        "displayType": "BOTTOM_SHEET",
                                        "content": {
                                            "type": "EDUCATIONAL_BOTTOMSHEET",
                                            "information": [{
                                                "image": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/cvv_banner.svg",
                                                "headerTitle": "What is CVV?",
                                                "description": "The CVV number is the last three digits on the back of your card"
                                            }]
                                        }
                                    },
                                    "cardInformation": {
                                        "maskedCardNumber": "0003",
                                        "cardId": "TR2406132246141096F35D1E484D98D0",
                                        "cardNetwork": "MASTERCARD",
                                        "cardSource": "DEFAULT",
                                        "bankCode": "ICICI",
                                        "cvvLength": 3,
                                        "isCvvRequired": "REQUIRED",
                                        "isExpiryRequired": "REQUIRED"
                                    },
                                    "emiCategoryEnabled": false,
                                    "emiDisplayText": "No Cost EMI at ₹14703/month"
                                }]
                            }
                        },
                        "section": "LEFT",
                        "subSection": "CENTER"
                    }, {
                        "type": "PAYMENT_OPTION",
                        "expanded": false,
                        "clickTracking": {
                            "amountPayable": 9807100,
                            "section": "generic",
                            "checkouttype": "normalcheckout"
                        },
                        "data": {
                            "instrumentType": "UPI",
                            "applicable": true,
                            "header": {
                                "title": "UPI",
                                "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/upi.svg",
                                "messages": [{
                                    "text": "Pay by any UPI app"
                                }]
                            },
                            "content": {
                                "options": [],
                                "newUpi": {
                                    "title": "Add new UPI ID",
                                    "applicable": true,
                                    "selected": true,
                                    "instrumentCheckRequired": true,
                                    "payButtonDetails": {
                                        "irisKey": "payAmount",
                                        "disablePayButton": true,
                                        "amount": 9807100
                                    },
                                    "provider": "FLIPKART",
                                    "paymentInstrument": "UPI_COLLECT",
                                    "callout": {
                                        "title": "How to find?",
                                        "image": "",
                                        "displayType": "BOTTOM_SHEET",
                                        "content": {
                                            "type": "PROVIDER_INFO_BOTTOMSHEET",
                                            "header": {
                                                "title": "Steps to find your UPI ID",
                                                "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/upi.svg"
                                            },
                                            "information": {
                                                "providers": [{
                                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/phonepe.svg",
                                                    "title": "Phonepe",
                                                    "description": ["Open PhonePe App", "Tap on your Profile Picture on top left corner of the screen", "Tap on UPI ID settings to find your UPI ID"]
                                                }, {
                                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/gpay.svg",
                                                    "title": "Google Pay",
                                                    "description": ["Open Google Pay App", "Tap on your Profile Picture on top right corner of the screen", "You will find your UPI ID below your name and phone number"]
                                                }, {
                                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/paytm-logo.svg",
                                                    "title": "Paytm",
                                                    "description": ["Open Paytm App", "Tap on your Profile Picture on top left corner of the screen", "You will find your UPI ID below your name"]
                                                }, {
                                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/bhim.svg",
                                                    "title": "Bhim",
                                                    "description": ["Open BHIM App", "Tap on your Profile Picture on top left corner of the screen"]
                                                }],
                                                "buttonText": "Okay"
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "section": "LEFT",
                        "subSection": "CENTER"
                    }, {
                        "type": "PAYMENT_OPTION",
                        "expanded": false,
                        "clickTracking": {
                            "amountPayable": 9807100,
                            "section": "generic",
                            "checkouttype": "normalcheckout"
                        },
                        "data": {
                            "instrumentType": "CREDIT",
                            "applicable": true,
                            "header": {
                                "title": "Credit / Debit / ATM Card",
                                "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/card.svg",
                                "messages": [{
                                    "text": "Add and secure cards as per RBI guidelines"
                                }],
                                "subtext": [{
                                    "text": "Save upto ₹10,000",
                                    "dlsToken": "success-500"
                                }, {
                                    "text": "5 offers available",
                                    "dlsToken": "success-500"
                                }]
                            },
                            "content": {
                                "options": [{
                                    "applicable": false,
                                    "selected": false,
                                    "instrumentCheckRequired": false,
                                    "payButtonDetails": {
                                        "irisKey": "payAmount",
                                        "disablePayButton": false,
                                        "amount": 9807100
                                    },
                                    "type": "NEW_CARD",
                                    "networkLogo": {
                                        "AMEX": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/network-logos/AMEX.svg",
                                        "DINERS": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/network-logos/DINERS.svg",
                                        "MASTERCARD": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/network-logos/MASTERCARD.svg",
                                        "VISA": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/network-logos/VISA-080823.svg",
                                        "MAESTRO": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/network-logos/MAESTRO.svg",
                                        "JCB": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/network-logos/JCB.svg",
                                        "RUPAY": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/network-logos/RUPAY.svg",
                                        "DISCOVER": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/network-logos/DISCOVER.svg"
                                    },
                                    "headerInformation": {
                                        "formatText": "**Note:** Please ensure your card can be used for online transactions. [Learn More](loadMoreLink)",
                                        "actionMap": {
                                            "loadMoreLink": {
                                                "displayType": "BOTTOM_SHEET",
                                                "action": {
                                                    "url": "/fkpay/v5/payments/faq/emi/FLIPKARTAXISBANK",
                                                    "type": "AJAX",
                                                    "method": "GET"
                                                }
                                            }
                                        }
                                    },
                                    "cvvCallout": {
                                        "image": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/help-icon-black.svg",
                                        "displayType": "BOTTOM_SHEET",
                                        "content": {
                                            "type": "EDUCATIONAL_BOTTOMSHEET",
                                            "information": [{
                                                "image": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/cvv_banner.svg",
                                                "headerTitle": "What is CVV?",
                                                "description": "The CVV number is the last three digits on the back of your card"
                                            }]
                                        }
                                    }
                                }]
                            }
                        },
                        "section": "LEFT",
                        "subSection": "CENTER"
                    }, {
                        "type": "PAYMENT_OPTION",
                        "expanded": false,
                        "clickTracking": {
                            "checkouttype": "normalcheckout"
                        },
                        "data": {
                            "instrumentType": "EMI_OPTIONS",
                            "applicable": true,
                            "header": {
                                "title": "EMI",
                                "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/emi-header-08092023.svg",
                                "messages": [{
                                    "text": "Get Debit and Cardless EMIs on HDFC Bank"
                                }]
                            },
                            "content": {
                                "guidingSteps": {
                                    "title": "Get EMI in 3 easy steps",
                                    "steps": [{
                                        "image": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/card.svg",
                                        "text": "Choose bank"
                                    }, {
                                        "image": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/calender-blank.svg",
                                        "text": "Choose Plan"
                                    }, {
                                        "image": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/black-tick.svg",
                                        "text": "Confirm & Pay"
                                    }]
                                },
                                "options": [{
                                    "title": "SBI Credit Card",
                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/banks/SBI.svg",
                                    "applicable": true,
                                    "selected": true,
                                    "aggregatedOffer": {
                                        "selectedText": "1 offer applicable",
                                        "defaultText": "1 offer applicable",
                                        "selectedImage": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/offer-unselected.svg",
                                        "defaultImage": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/offer-unselected.svg",
                                        "dlsToken": "",
                                        "callout": {
                                            "title": "Details",
                                            "displayType": "BOTTOM_SHEET",
                                            "content": {
                                                "type": "OFFER_LIST",
                                                "header": {
                                                    "title": "Offer Details"
                                                },
                                                "information": {
                                                    "offers": [{
                                                        "offerHeader": {
                                                            "title": "Extra ₹10000 Off On selected  Bank TRNX",
                                                            "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/green-offer-tag.svg"
                                                        },
                                                        "offerDescription": [{
                                                            "key": "Min. order value",
                                                            "value": "₹10,000",
                                                            "token": ""
                                                        }, {
                                                            "key": "Max Order Value",
                                                            "value": "₹10,00,000",
                                                            "token": ""
                                                        }, {
                                                            "key": "Max. discount",
                                                            "value": "₹10,000",
                                                            "token": ""
                                                        }, {
                                                            "key": "You get",
                                                            "value": "₹10,000",
                                                            "token": "success-500"
                                                        }],
                                                        "offerFooter": {
                                                            "tncInfo": {
                                                                "id": "FPO250701194515LLXO5",
                                                                "text": "Read offer T&C"
                                                            }
                                                        }
                                                    }]
                                                }
                                            }
                                        }
                                    },
                                    "instrumentCheckRequired": false,
                                    "emiType": "credit-card",
                                    "bankCode": "SBI",
                                    "buttonText": "See Plans",
                                    "inlineOfferMessage": [[{
                                        "text": "No Cost EMI ",
                                        "dlsToken": "success-500",
                                        "type": "TEXT"
                                    }, {
                                        "text": "₹16,335/m",
                                        "type": "TEXT"
                                    }]],
                                    "messages": [],
                                    "clickTracking": {
                                        "amountPayable": 9807100
                                    }
                                }, {
                                    "title": "ICICI Bank",
                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/banks/ICICI.svg",
                                    "applicable": true,
                                    "selected": false,
                                    "aggregatedOffer": {
                                        "selectedText": "1 offer applicable",
                                        "defaultText": "1 offer applicable",
                                        "selectedImage": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/offer-unselected.svg",
                                        "defaultImage": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/offer-unselected.svg",
                                        "dlsToken": "",
                                        "callout": {
                                            "title": "Details",
                                            "displayType": "BOTTOM_SHEET",
                                            "content": {
                                                "type": "OFFER_LIST",
                                                "header": {
                                                    "title": "Offer Details"
                                                },
                                                "information": {
                                                    "offers": [{
                                                        "offerHeader": {
                                                            "title": "Extra ₹10000 Off On selected  Bank TRNX",
                                                            "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/green-offer-tag.svg"
                                                        },
                                                        "offerDescription": [{
                                                            "key": "Min. order value",
                                                            "value": "₹10,000",
                                                            "token": ""
                                                        }, {
                                                            "key": "Max Order Value",
                                                            "value": "₹10,00,000",
                                                            "token": ""
                                                        }, {
                                                            "key": "Max. discount",
                                                            "value": "₹10,000",
                                                            "token": ""
                                                        }, {
                                                            "key": "You get",
                                                            "value": "₹10,000",
                                                            "token": "success-500"
                                                        }],
                                                        "offerFooter": {
                                                            "tncInfo": {
                                                                "id": "FPO250701194857KFHIY",
                                                                "text": "Read offer T&C"
                                                            }
                                                        }
                                                    }]
                                                }
                                            }
                                        }
                                    },
                                    "instrumentCheckRequired": false,
                                    "emiType": "credit-card",
                                    "bankCode": "ICICI",
                                    "buttonText": "See Plans",
                                    "inlineOfferMessage": [[{
                                        "text": "No Cost EMI ",
                                        "dlsToken": "success-500",
                                        "type": "TEXT"
                                    }, {
                                        "text": "₹16,334/m",
                                        "type": "TEXT"
                                    }]],
                                    "messages": [],
                                    "clickTracking": {
                                        "amountPayable": 9807100
                                    }
                                }, {
                                    "title": "Kotak Bank",
                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/banks/KOTAK.svg",
                                    "applicable": true,
                                    "selected": false,
                                    "aggregatedOffer": {
                                        "selectedText": "1 offer applicable",
                                        "defaultText": "1 offer applicable",
                                        "selectedImage": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/offer-unselected.svg",
                                        "defaultImage": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/offer-unselected.svg",
                                        "dlsToken": "",
                                        "callout": {
                                            "title": "Details",
                                            "displayType": "BOTTOM_SHEET",
                                            "content": {
                                                "type": "OFFER_LIST",
                                                "header": {
                                                    "title": "Offer Details"
                                                },
                                                "information": {
                                                    "offers": [{
                                                        "offerHeader": {
                                                            "title": "Extra ₹10000 Off On selected  Bank TRNX",
                                                            "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/green-offer-tag.svg"
                                                        },
                                                        "offerDescription": [{
                                                            "key": "Min. order value",
                                                            "value": "₹10,000",
                                                            "token": ""
                                                        }, {
                                                            "key": "Max Order Value",
                                                            "value": "₹10,00,000",
                                                            "token": ""
                                                        }, {
                                                            "key": "Max. discount",
                                                            "value": "₹10,000",
                                                            "token": ""
                                                        }, {
                                                            "key": "You get",
                                                            "value": "₹10,000",
                                                            "token": "success-500"
                                                        }],
                                                        "offerFooter": {
                                                            "tncInfo": {
                                                                "id": "FPO250701194127SO194",
                                                                "text": "Read offer T&C"
                                                            }
                                                        }
                                                    }]
                                                }
                                            }
                                        }
                                    },
                                    "instrumentCheckRequired": false,
                                    "emiType": "credit-card",
                                    "bankCode": "KOTAK",
                                    "buttonText": "See Plans",
                                    "inlineOfferMessage": [[{
                                        "text": "No Cost EMI ",
                                        "dlsToken": "success-500",
                                        "type": "TEXT"
                                    }, {
                                        "text": "₹16,334/m",
                                        "type": "TEXT"
                                    }]],
                                    "messages": [],
                                    "clickTracking": {
                                        "amountPayable": 9807100
                                    }
                                }]
                            }
                        },
                        "section": "LEFT",
                        "subSection": "CENTER"
                    }, {
                        "type": "PAYMENT_OPTION",
                        "expanded": false,
                        "clickTracking": {
                            "instrumentType": "Top Banks",
                            "section": "generic",
                            "checkouttype": "normalcheckout"
                        },
                        "data": {
                            "instrumentType": "NET_OPTIONS",
                            "applicable": true,
                            "header": {
                                "title": "Net Banking",
                                "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/net-banking-08092023.svg"
                            },
                            "content": {
                                "options": [{
                                    "title": "State Bank of India",
                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/banks/SBI.svg",
                                    "applicable": true,
                                    "selected": true,
                                    "instrumentCheckRequired": false,
                                    "payButtonDetails": {
                                        "irisKey": "payAmount",
                                        "disablePayButton": false,
                                        "amount": 8817000
                                    },
                                    "instrumentDetails": {
                                        "responseStatus": "SUCCESS",
                                        "disablePayButton": false,
                                        "disablePayTimeout": 0,
                                        "viewTracking": {
                                            "isOfferApplied": true,
                                            "offersAvailable": {
                                                "offerCount": 1,
                                                "offerSummary": [{
                                                    "id": "FPO250701194515LLXO5",
                                                    "type": "PBO",
                                                    "value": 1000000
                                                }]
                                            },
                                            "amountPayable": 8817000,
                                            "discount": 1000000,
                                            "isSuperCoinsApplied": false,
                                            "section": "generic"
                                        },
                                        "paymentInstrument": "NET_OPTIONS",
                                        "aggregatedOffer": {
                                            "selectedText": "₹10,000 discount applied.",
                                            "defaultText": "₹10,000 discount applicable.",
                                            "selectedImage": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/offer-selected.svg",
                                            "defaultImage": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/offer-unselected.svg",
                                            "dlsToken": "success-500",
                                            "callout": {
                                                "title": "Details",
                                                "displayType": "BOTTOM_SHEET",
                                                "content": {
                                                    "type": "OFFER_LIST",
                                                    "header": {
                                                        "title": "Offer Details"
                                                    },
                                                    "information": {
                                                        "offers": [{
                                                            "offerHeader": {
                                                                "title": "Extra ₹10000 Off On selected  Bank TRNX",
                                                                "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/green-offer-tag.svg"
                                                            },
                                                            "offerDescription": [{
                                                                "key": "Min. order value",
                                                                "value": "₹10,000",
                                                                "token": ""
                                                            }, {
                                                                "key": "Max Order Value",
                                                                "value": "₹10,00,000",
                                                                "token": ""
                                                            }, {
                                                                "key": "Max Discount per order",
                                                                "value": "₹10,000",
                                                                "token": ""
                                                            }, {
                                                                "key": "Max. number of orders",
                                                                "value": "1",
                                                                "token": ""
                                                            }, {
                                                                "key": "You get",
                                                                "value": "₹10,000",
                                                                "token": "success-500"
                                                            }],
                                                            "offerFooter": {
                                                                "tncInfo": {
                                                                    "id": "FPO250701194515LLXO5",
                                                                    "text": "Read offer T&C"
                                                                }
                                                            }
                                                        }]
                                                    }
                                                }
                                            }
                                        },
                                        "conditionalOffer": [],
                                        "authMode": "_3DS",
                                        "payButtonDetails": {
                                            "irisKey": "payAmount",
                                            "disablePayButton": false,
                                            "amount": 8817000
                                        },
                                        "pageDiff": {
                                            "priceSummary": {
                                                "breakupOrderingList": ["REMAINING_AMOUNT_SINGLE_ITEM", "REMAINING_AMOUNT_MULTIPLE_ITEM", "BASE_PRICE_SINGLE_ITEM", "BASE_PRICE_MULTIPLE_ITEMS", "TOTAL_LOAN_AMOUNT", "ADVANCE_BASE_PRICE", "DELIVERY_CHARGE", "PICKUP_CHARGE", "PACKAGING_CHARGE", "SALE_FEE", "PLATFORM_FEE", "CONVENIENCE_FEE", "PROTECT_PROMISE_FEE", "RAIN_FEE", "SELLER_HANDLING_FEE", "HANDLING_FEE", "EGV", "EGV_WALLET", "BANK_OFFER_DISCOUNT", "OFFER_HANDLING_FEE", "INTEREST_BY_BANK", "NC_EMI_DISCOUNT", "FK_PAYLATER_CREDIT", "FK_PAYLATER_EMI_CREDIT", "FK_PAYLATER_DISCOUNT", "PAY_AT_DELIVERY", "AMOUNT_PAYABLE", "APPROVED_EMI_AMOUNT"],
                                                "finalPriceBreakupOrderingList": ["AMOUNT_PAYABLE"],
                                                "finalPrice": {
                                                    "label": "Total Amount",
                                                    "prices": [{
                                                        "priceType": "PRICE",
                                                        "currency": "INR",
                                                        "value": "8817000",
                                                        "dlsToken": "primary-500 font-l-semibold"
                                                    }, {
                                                        "priceType": "COIN",
                                                        "currency": "COIN",
                                                        "value": "209",
                                                        "dlsToken": "primary-500 font-l-semibold"
                                                    }],
                                                    "dlsToken": "primary-500",
                                                    "breakupType": "AMOUNT_PAYABLE"
                                                },
                                                "finalPriceBreakup": [{
                                                    "label": "Total Amount",
                                                    "prices": [{
                                                        "priceType": "PRICE",
                                                        "currency": "INR",
                                                        "value": "8817000",
                                                        "dlsToken": "primary-500 font-l-semibold"
                                                    }, {
                                                        "priceType": "COIN",
                                                        "currency": "COIN",
                                                        "value": "209",
                                                        "dlsToken": "primary-500 font-l-semibold"
                                                    }],
                                                    "dlsToken": "primary-500",
                                                    "breakupType": "AMOUNT_PAYABLE"
                                                }],
                                                "breakup": [{
                                                    "label": "Offer Handling Fee",
                                                    "prices": [{
                                                        "priceType": "PRICE",
                                                        "currency": "INR",
                                                        "value": "9900"
                                                    }],
                                                    "breakupType": "OFFER_HANDLING_FEE",
                                                    "priceAttributeList": [{
                                                        "type": "CALLOUT",
                                                        "callout": {
                                                            "image": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/help-icon-grey.svg",
                                                            "displayType": "BOTTOM_SHEET",
                                                            "content": {
                                                                "type": "EDUCATIONAL_BOTTOMSHEET",
                                                                "information": [{
                                                                    "headerTitle": "Offer Handling Fee",
                                                                    "description": "Flipkart incurs cost in securing, managing & processing card offers on the Platform, so a fixed handling fee of ₹99 is charged to you on availing these offers on the Platform"
                                                                }]
                                                            }
                                                        }
                                                    }]
                                                }, {
                                                    "label": "Bank Offer Discount",
                                                    "prices": [{
                                                        "priceType": "DISCOUNT",
                                                        "currency": "INR",
                                                        "value": "1000000",
                                                        "dlsToken": "success-500"
                                                    }],
                                                    "breakupType": "BANK_OFFER_DISCOUNT"
                                                }]
                                            }
                                        },
                                        "infoMessages": [{
                                            "text": "₹99 Offer Handling fee",
                                            "callout": {
                                                "title": "Why ?",
                                                "displayType": "BOTTOM_SHEET",
                                                "content": {
                                                    "type": "INFO_BOTTOMSHEET",
                                                    "header": {
                                                        "title": "Offer Handling Fee"
                                                    },
                                                    "information": {
                                                        "message": "Flipkart incurs cost in securing, managing & processing card offers on the Platform, so a fixed handling fee of ₹99 is charged to you on availing these offers on the Platform"
                                                    }
                                                },
                                                "trackingInfo": {
                                                    "action": "Offer Handling Fee"
                                                }
                                            }
                                        }]
                                    },
                                    "bankCode": "SBI",
                                    "paymentInstrument": "NET_OPTIONS",
                                    "messages": []
                                }, {
                                    "title": "HDFC Bank",
                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/banks/HDFC.svg",
                                    "applicable": true,
                                    "selected": false,
                                    "instrumentCheckRequired": true,
                                    "payButtonDetails": {
                                        "irisKey": "payAmount",
                                        "disablePayButton": false,
                                        "amount": 9807100
                                    },
                                    "bankCode": "HDFC",
                                    "paymentInstrument": "NET_OPTIONS",
                                    "messages": []
                                }, {
                                    "title": "ICICI Bank",
                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/banks/ICICI.svg",
                                    "applicable": true,
                                    "selected": false,
                                    "instrumentCheckRequired": true,
                                    "payButtonDetails": {
                                        "irisKey": "payAmount",
                                        "disablePayButton": false,
                                        "amount": 9807100
                                    },
                                    "bankCode": "ICICI",
                                    "paymentInstrument": "NET_OPTIONS",
                                    "messages": []
                                }, {
                                    "title": "Kotak Mahindra Bank",
                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/banks/KOTAK.svg",
                                    "applicable": true,
                                    "selected": false,
                                    "instrumentCheckRequired": true,
                                    "payButtonDetails": {
                                        "irisKey": "payAmount",
                                        "disablePayButton": false,
                                        "amount": 9807100
                                    },
                                    "bankCode": "KOTAK",
                                    "paymentInstrument": "NET_OPTIONS",
                                    "messages": []
                                }, {
                                    "title": "Axis Bank",
                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/banks/AXIS.svg",
                                    "applicable": true,
                                    "selected": false,
                                    "instrumentCheckRequired": true,
                                    "payButtonDetails": {
                                        "irisKey": "payAmount",
                                        "disablePayButton": false,
                                        "amount": 9807100
                                    },
                                    "bankCode": "AXIS",
                                    "paymentInstrument": "NET_OPTIONS",
                                    "messages": []
                                }, {
                                    "title": "Federal Bank",
                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/banks/FEDERAL.svg",
                                    "applicable": true,
                                    "selected": false,
                                    "instrumentCheckRequired": true,
                                    "payButtonDetails": {
                                        "irisKey": "payAmount",
                                        "disablePayButton": false,
                                        "amount": 9807100
                                    },
                                    "bankCode": "FEDERALBANK",
                                    "paymentInstrument": "NET_OPTIONS",
                                    "messages": []
                                }, {
                                    "title": "Indian Overseas Bank",
                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/banks/IOB.svg",
                                    "applicable": true,
                                    "selected": false,
                                    "instrumentCheckRequired": true,
                                    "payButtonDetails": {
                                        "irisKey": "payAmount",
                                        "disablePayButton": false,
                                        "amount": 9807100
                                    },
                                    "bankCode": "IOB",
                                    "paymentInstrument": "NET_OPTIONS",
                                    "messages": []
                                }, {
                                    "title": "Indian Bank",
                                    "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/banks/INB.svg",
                                    "applicable": true,
                                    "selected": false,
                                    "instrumentCheckRequired": true,
                                    "payButtonDetails": {
                                        "irisKey": "payAmount",
                                        "disablePayButton": false,
                                        "amount": 9807100
                                    },
                                    "bankCode": "INDIANBANK",
                                    "paymentInstrument": "NET_OPTIONS",
                                    "messages": []
                                }]
                            }
                        },
                        "section": "LEFT",
                        "subSection": "CENTER"
                    }, {
                        "type": "EGV",
                        "expanded": false,
                        "clickTracking": {
                            "amountPayable": 9807100,
                            "discount": 1000000,
                            "section": "generic",
                            "checkouttype": "normalcheckout"
                        },
                        "data": {
                            "instrumentType": "EGV",
                            "applicable": true,
                            "header": {
                                "title": "Have a Flipkart Gift Card?",
                                "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/gift-card-logo-09082023.svg",
                                "disableAddBtn": false
                            }
                        },
                        "section": "LEFT",
                        "subSection": "CENTER"
                    }, {
                        "type": "PAYMENT_OPTION",
                        "expanded": false,
                        "clickTracking": {
                            "isOfferApplied": false,
                            "amountPayable": 9807100,
                            "discount": 0,
                            "section": "generic",
                            "checkouttype": "normalcheckout"
                        },
                        "data": {
                            "instrumentType": "COD",
                            "applicable": false,
                            "header": {
                                "title": "Cash on Delivery",
                                "logo": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/cash-icon.svg",
                                "callout": {
                                    "title": "Unavailable",
                                    "image": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/help-icon-grey.svg",
                                    "displayType": "BOTTOM_SHEET",
                                    "content": {
                                        "type": "DISABLE_INFO",
                                        "information": {
                                            "title": "Cash on Delivery Unavailable",
                                            "description": "Cash on Delivery(CoD) is not available for this order. It may not be supported for the product or selected area, or because of recent account activity."
                                        }
                                    }
                                }
                            }
                        },
                        "section": "LEFT",
                        "subSection": "CENTER"
                    }, {
                        "type": "DYNAMIC_BANNER",
                        "data": {
                            "text": "35 Crore happy customers and counting!",
                            "icon": "/FK_STATIC_ASSET/fk-p-linchpin-web/fk-gringotts/images/smiley.svg"
                        },
                        "section": "FOOTER",
                        "subSection": null
                    }],
                    "isRedirectedFromInternalRoutes": false,
                    "selectedPaymentInstrument": "SAVED_INSTRUMENTS",
                    "selectedPaymentOption": null,
                    "defaultSelections": {
                        "primaryPaymentInstrument": "SAVED_INSTRUMENTS",
                        "totalAmountPayableZero": false
                    },
                    "isFPLEMIError": false,
                    "isFPLEMISelected": false,
                    "isEgvExpanded": false,
                    "codOptionData": {
                        "isCodOptionAvailable": true,
                        "instrumentTrackingData": {
                            "isOfferApplied": false,
                            "amountPayable": 9807100,
                            "discount": 0,
                            "section": "generic",
                            "checkouttype": "normalcheckout"
                        },
                        "pageTrackingData": {
                            "disabledPaymentOptions": [{
                                "paymentOption": "COD"
                            }],
                            "isPartPayment": false,
                            "offersAvailable": {
                                "offerCount": 27,
                                "offerSummary": [{
                                    "id": "FPO250701194857KFHIY",
                                    "type": "INSTANT_DISCOUNT",
                                    "value": 1000000
                                }, {
                                    "id": "FPO250701194515LLXO5",
                                    "type": "INSTANT_DISCOUNT",
                                    "value": 1000000
                                }, {
                                    "id": "FPO250701194127SO194",
                                    "type": "INSTANT_DISCOUNT",
                                    "value": 1000000
                                }, {
                                    "id": "FPO250626172916JI4VZ",
                                    "type": "CASHBACK_ON_CARD",
                                    "value": 1000
                                }, {
                                    "id": "FPO250626182451RYQC7",
                                    "type": "INSTANT_DISCOUNT",
                                    "value": 75000
                                }, {
                                    "id": "FPO250705190116Z9YX8",
                                    "type": "INSTANT_DISCOUNT",
                                    "value": 10000000
                                }, {
                                    "id": "FPO250704202225I5HHC",
                                    "type": "INSTANT_DISCOUNT",
                                    "value": 250000
                                }, {
                                    "id": "FPO250704204038MD3DZ",
                                    "type": "INSTANT_DISCOUNT",
                                    "value": 375000
                                }, {
                                    "id": "FPO2507042045036N25F",
                                    "type": "INSTANT_DISCOUNT",
                                    "value": 400000
                                }, {
                                    "id": "FPO25070420170018FK3",
                                    "type": "INSTANT_DISCOUNT",
                                    "value": 200000
                                }, {
                                    "id": "FPO250704203653BLDZA",
                                    "type": "INSTANT_DISCOUNT",
                                    "value": 400000
                                }, {
                                    "id": "FPO250619134128USHPF",
                                    "type": "CASHBACK_ON_CARD",
                                    "value": 400000
                                }, {
                                    "id": "FPO250630202506KYC5F",
                                    "type": "INSTANT_DISCOUNT",
                                    "value": 50000
                                }, {
                                    "id": "FPO250704192447CLSFR",
                                    "type": "INSTANT_DISCOUNT",
                                    "value": 75000
                                }, {
                                    "id": "FPO2507042105097DZ77",
                                    "type": "INSTANT_DISCOUNT",
                                    "value": 50000
                                }, {
                                    "id": "FPO2506301938399SY1F",
                                    "type": "INSTANT_DISCOUNT",
                                    "value": 150000
                                }, {
                                    "id": "FPO250704194638XUV22",
                                    "type": "INSTANT_DISCOUNT",
                                    "value": 100000
                                }, {
                                    "id": "FPO250705185902AISC5",
                                    "type": "INSTANT_DISCOUNT",
                                    "value": 10000000
                                }, {
                                    "id": "FPO2507042008157YQZM",
                                    "type": "INSTANT_DISCOUNT",
                                    "value": 175000
                                }, {
                                    "id": "FPO25070420315436CH6",
                                    "type": "INSTANT_DISCOUNT",
                                    "value": 350000
                                }, {
                                    "id": "FPO250705190347GHR57",
                                    "type": "INSTANT_DISCOUNT",
                                    "value": 10000000
                                }, {
                                    "id": "FPO250704204930KZYV3",
                                    "type": "INSTANT_DISCOUNT",
                                    "value": 450000
                                }, {
                                    "id": "FPO250619135528ZQIZW",
                                    "type": "CASHBACK_ON_CARD",
                                    "value": 75000
                                }, {
                                    "id": "FPO2507042000473JP81",
                                    "type": "INSTANT_DISCOUNT",
                                    "value": 150000
                                }, {
                                    "id": "FPO2507042306179OKXZ",
                                    "type": "INSTANT_DISCOUNT",
                                    "value": 125000
                                }, {
                                    "id": "FPO250704202703TYGA8",
                                    "type": "INSTANT_DISCOUNT",
                                    "value": 325000
                                }, {
                                    "id": "FPO250704210925MIFUZ",
                                    "type": "INSTANT_DISCOUNT",
                                    "value": 75000
                                }]
                            },
                            "checkoutSuperCoins": 209,
                            "isCODApplicable": false,
                            "isRiskBasedFPLAvailable": false,
                            "isCODAdvance": false,
                            "isSplitPayment": false,
                            "isNCEMIAvailable": false,
                            "giftCardUsed": false,
                            "paymentOptionsSaved": [{
                                "isPaymentDefaultOption": true,
                                "paymentOptionProvider": "FLIPKART",
                                "isSuperCoinApplicable": true,
                                "paymentOptionType": "SAVED_CARD",
                                "isExtraDiscount": false,
                                "paymentOptionCount": 1
                            }],
                            "paymentOptionsRegular": {
                                "paymentOptions": [{
                                    "paymentOption": "SAVED_INSTRUMENTS"
                                }, {
                                    "paymentOption": "UPI"
                                }, {
                                    "paymentOption": "CREDIT"
                                }, {
                                    "paymentOption": "EMI_OPTIONS"
                                }, {
                                    "paymentOption": "NET_OPTIONS"
                                }],
                                "count": 5
                            },
                            "EGVWalletUsed": false,
                            "checkouttype": "normalcheckout"
                        }
                    }
                },
                "emiOptions": {
                    "items": [],
                    "searchInfo": null,
                    "filteredBanks": [],
                    "emiBanksPageDetails": null
                },
                "emiPlans": {
                    "tenureSections": null,
                    "submitPayload": null,
                    "breakup": [],
                    "tenureDetails": null,
                    "redirectionPageType": null
                },
                "emiSummary": {
                    "baseEmiInfo": null,
                    "updatedEmiInfo": null,
                    "baseAdditionalInfo": null,
                    "additionalInfo": null,
                    "inputDetails": null,
                    "tncInfo": null,
                    "buttonInfo": null,
                    "emiSummaryPageDetails": null
                },
                "emiItemLevel": {
                    "items": null,
                    "error": null,
                    "asyncStatus": "INIT"
                },
                "otp": {
                    "ivrData": null,
                    "asyncStatus": "INIT",
                    "error": "",
                    "otp": "",
                    "autoCaptureTimerState": "DISABLED",
                    "otpSubmitAction": null,
                    "otpAuthenticationErrorString": "",
                    "autoSubmitTimerState": "DISABLED",
                    "resendTimerState": "DISABLED"
                },
                "wallet": {
                    "walletDetails": null
                },
                "submit": {
                    "payData": null,
                    "pwdData": null,
                    "error": null,
                    "asyncStatus": "INIT"
                },
                "instrumentCheckData": {
                    "asyncStatus": "INIT",
                    "authMode": "",
                    "updatedPayButtonDetails": null,
                    "shouldFocusOnExpiry": false
                },
                "upiPoll": {
                    "pollInfo": null,
                    "upiPollInfoStatus": "",
                    "pollData": null,
                    "pollDataStatus": "INIT",
                    "upiSuffix": "",
                    "retryAttempts": 0,
                    "pollingAttemptLogsForDebugging": {
                        "pollingSuccessUsingRetryAttempts": false,
                        "retryAttemptsCount": 0,
                        "totalPollCallsHit": 0
                    }
                },
                "toast": {
                    "showToast": false,
                    "message": "",
                    "timeOut": 3000
                },
                "appConfig": {
                    "locale": "en",
                    "platformDetails": {
                        "isShopsyClient": false,
                        "platform": "web",
                        "version": 0,
                        "hostname": "www.flipkart.com",
                        "fkUA": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/137.0.0.0 Safari/537.36 FKUA/website/42/website/Desktop"
                    },
                    "jsFlags": {
                        "disableFDPIngestionToNative": false,
                        "isMessageHandlersEnabled": true,
                        "disable3ds2": false,
                        "disableKevlar": false,
                        "enableSSRFallback": false,
                        "npciTokenExpiryStatusOverridden": true,
                        "disableUserstateCall": false,
                        "shouldPassTokenForFkUpiCredBlock": true
                    },
                    "ssrConfig": {
                        "Emiplans": false,
                        "Emibanks": false,
                        "Home": true
                    },
                    "sdkConfig": {
                        "disablePhonePeSdk": false,
                        "disableJuspaySdk": false,
                        "disbalePaytmWalletSdk": false,
                        "disableJuspaySdkForIos": true
                    },
                    "timeoutConfig": {
                        "appConfigTtl": 600000,
                        "getCredBlockForFkUpiBridgeRequestTimeout": 45000
                    },
                    "versionConfig": {
                        "minIosVersionForIntent": "10.23.1",
                        "minAndroidVersionForFKUPIPermissionRevamp": "2171000",
                        "jusPayMinimumIosVersion": "10.37.3"
                    },
                    "commonConfig": {
                        "maxUpiPollRetryAttempts": 10
                    }
                },
                "abConfig": {
                    "asyncStatus": "SUCCESS",
                    "abData": {
                        "sonic_gcp_migration_msite": {
                            "abVariables": {
                                "sonicGcpMigration": true
                            },
                            "isABEventTracked": true,
                            "abId": "STG|launchedGroup|b1cfdbd0|h"
                        }
                    },
                    "abEventsToBeTracked": [{
                        "expId": "sonic_gcp_migration_msite",
                        "abId": "STG|launchedGroup|b1cfdbd0|h"
                    }, {
                        "abId": "STG|launchedGroup|6084aee1|h",
                        "expId": "cvv_less_txn"
                    }, {
                        "abId": "",
                        "expId": ""
                    }]
                },
                "pgResponse": {
                    "pgData": null,
                    "pgResponseStatus": "INIT"
                },
                "egv": {
                    "errorMessage": null,
                    "egvPaymentSuccessData": null,
                    "asyncStatus": "INIT"
                },
                "netBankingOptions": {
                    "searchInfo": null,
                    "items": null
                },
                "kfs": {
                    "kfsHeader": null,
                    "kfsDetails": null,
                    "repaymentSchedule": null
                },
                "fkUpiPoll": {
                    "pageInfo": null,
                    "pollDataStatus": "INIT",
                    "pageStatus": "",
                    "pollData": null,
                    "animationDataAsyncStatus": "INIT",
                    "txnInitAnimationObj": null,
                    "txnInProgressAnimationObj": null,
                    "txnCompleteAnimationObj": null
                },
                "tooltipReducer": {
                    "id": null
                },
                "fkupiData": {
                    "fkUpiAccountDetails": null,
                    "fkUpiVerifyInfo": null,
                    "asyncStatus": "INIT"
                },
                "superPayLaterInfo": {
                    "superpayActivationCallout": null,
                    "footer": "",
                    "superPayStatus": "INIT",
                    "animationData": null,
                    "superPayAnimationStatus": "INIT",
                    "pollData": null,
                    "pollingInfo": null
                },
                "superPayLater": {
                    "accountDetails": [],
                    "fetchAccountsStatus": null,
                    "error": null
                },
                "categoryEMIBanks": {
                    "items": [],
                    "searchInfo": null,
                    "filteredBanks": [],
                    "categoryEMIBanksPageDetails": null,
                    "categoryItems": [],
                    "categoryTabs": []
                },
                "categoryEMIPlans": {
                    "tenureSections": null,
                    "submitPayload": null,
                    "tenureDetails": null,
                    "redirectionPageType": null,
                    "showSplitPriceSummary": false,
                    "breakup": [],
                    "planSelectionButtonDetails": null,
                    "bankHeaderInfo": null
                },
                "rtgsPollPage": {
                    "pageInfo": null,
                    "pageStatus": "",
                    "pollData": null,
                    "pollDataStatus": "INIT",
                    "retryAttempts": 0,
                    "pollingAttemptLogsForDebugging": {
                        "pollingSuccessUsingRetryAttempts": false,
                        "retryAttemptsCount": 0,
                        "totalPollCallsHit": 0
                    }
                }
            };
            // setting of sessionId to track api call from client
            window.sessionId = "PUIC-d45a76d9905bffc5ca0e93b02ee45411";
            // setting desktop platform variable to be used in base ajax config headers
            window.isDesktopPlatform = true;
        </script>
        <script nonce="5080350460649940621">
            // Communicate to native bridges

            if (window.Android !== undefined) {
                if (window.Android.setRichView && window.Android.getAuthParams) {
                    window.Android.setRichView(true);
                }
                if (window.Android.changeToolBarVisibility && typeof window.Android.changeToolBarVisibility === "function") {
                    window.Android.changeToolBarVisibility(true);
                }

                if (window.Android.dismissDialog && typeof window.Android.dismissDialog === "function") {
                    window.Android.dismissDialog();
                }
            }
        </script>
        <script nonce="5080350460649940621">
            document.addEventListener('DOMContentLoaded', function() {
                var loader = document.getElementById("initialLoader");
                loader && loader.parentElement && loader.parentElement.removeChild(loader);
            })
        </script>
        <script crossorigin="anonymous" nonce="5080350460649940621">
            var newrelicInfo = {
                "applicationID": "1588897882",
                "agentID": "1588897882"
            };
            ;window.NREUM || (NREUM = {});
            NREUM.init = {
                distributed_tracing: {
                    enabled: true
                },
                privacy: {
                    cookies_enabled: true
                },
                ajax: {
                    deny_list: ["bam.nr-data.net"]
                }
            };
            ;NREUM.loader_config = {
                accountID: "3700282",
                trustKey: "3679896",
                agentID: newrelicInfo.agentID,
                licenseKey: "NRJS-dd5f16cdf95712c6cba",
                applicationID: newrelicInfo.applicationID
            };
            ;NREUM.info = {
                beacon: "bam.nr-data.net",
                errorBeacon: "bam.nr-data.net",
                licenseKey: "NRJS-dd5f16cdf95712c6cba",
                applicationID: newrelicInfo.applicationID,
                sa: 1
            };
            ;/*! For license information please see nr-loader-spa-1.251.1.min.js.LICENSE.txt */
            ( () => {
                var e, t, r = {
                    234: (e, t, r) => {
                        "use strict";
                        r.d(t, {
                            P_: () => m,
                            Mt: () => b,
                            C5: () => s,
                            DL: () => w,
                            OP: () => D,
                            lF: () => O,
                            Yu: () => E,
                            Dg: () => v,
                            CX: () => c,
                            GE: () => x,
                            sU: () => N
                        });
                        var n = r(8632)
                          , i = r(9567);
                        const o = {
                            beacon: n.ce.beacon,
                            errorBeacon: n.ce.errorBeacon,
                            licenseKey: void 0,
                            applicationID: void 0,
                            sa: void 0,
                            queueTime: void 0,
                            applicationTime: void 0,
                            ttGuid: void 0,
                            user: void 0,
                            account: void 0,
                            product: void 0,
                            extra: void 0,
                            jsAttributes: {},
                            userAttributes: void 0,
                            atts: void 0,
                            transactionName: void 0,
                            tNamePlain: void 0
                        }
                          , a = {};
                        function s(e) {
                            if (!e)
                                throw new Error("All info objects require an agent identifier!");
                            if (!a[e])
                                throw new Error("Info for ".concat(e, " was never set"));
                            return a[e]
                        }
                        function c(e, t) {
                            if (!e)
                                throw new Error("All info objects require an agent identifier!");
                            a[e] = (0,
                            i.D)(t, o);
                            const r = (0,
                            n.ek)(e);
                            r && (r.info = a[e])
                        }
                        const u = e => {
                            if (!e || "string" != typeof e)
                                return !1;
                            try {
                                document.createDocumentFragment().querySelector(e)
                            } catch {
                                return !1
                            }
                            return !0
                        }
                        ;
                        var d = r(7056)
                          , l = r(50);
                        const f = "[data-nr-mask]"
                          , h = () => {
                            const e = {
                                mask_selector: "*",
                                block_selector: "[data-nr-block]",
                                mask_input_options: {
                                    color: !1,
                                    date: !1,
                                    "datetime-local": !1,
                                    email: !1,
                                    month: !1,
                                    number: !1,
                                    range: !1,
                                    search: !1,
                                    tel: !1,
                                    text: !1,
                                    time: !1,
                                    url: !1,
                                    week: !1,
                                    textarea: !1,
                                    select: !1,
                                    password: !0
                                }
                            };
                            return {
                                feature_flags: [],
                                proxy: {
                                    assets: void 0,
                                    beacon: void 0
                                },
                                privacy: {
                                    cookies_enabled: !0
                                },
                                ajax: {
                                    deny_list: void 0,
                                    block_internal: !0,
                                    enabled: !0,
                                    harvestTimeSeconds: 10,
                                    autoStart: !0
                                },
                                distributed_tracing: {
                                    enabled: void 0,
                                    exclude_newrelic_header: void 0,
                                    cors_use_newrelic_header: void 0,
                                    cors_use_tracecontext_headers: void 0,
                                    allowed_origins: void 0
                                },
                                session: {
                                    domain: void 0,
                                    expiresMs: d.oD,
                                    inactiveMs: d.Hb
                                },
                                ssl: void 0,
                                obfuscate: void 0,
                                jserrors: {
                                    enabled: !0,
                                    harvestTimeSeconds: 10,
                                    autoStart: !0
                                },
                                metrics: {
                                    enabled: !0,
                                    autoStart: !0
                                },
                                page_action: {
                                    enabled: !0,
                                    harvestTimeSeconds: 30,
                                    autoStart: !0
                                },
                                page_view_event: {
                                    enabled: !0,
                                    autoStart: !0
                                },
                                page_view_timing: {
                                    enabled: !0,
                                    harvestTimeSeconds: 30,
                                    long_task: !1,
                                    autoStart: !0
                                },
                                session_trace: {
                                    enabled: !0,
                                    harvestTimeSeconds: 10,
                                    autoStart: !0
                                },
                                harvest: {
                                    tooManyRequestsDelay: 60
                                },
                                session_replay: {
                                    autoStart: !0,
                                    enabled: !1,
                                    harvestTimeSeconds: 60,
                                    sampling_rate: 50,
                                    error_sampling_rate: 50,
                                    collect_fonts: !1,
                                    inline_images: !1,
                                    inline_stylesheet: !0,
                                    mask_all_inputs: !0,
                                    get mask_text_selector() {
                                        return e.mask_selector
                                    },
                                    set mask_text_selector(t) {
                                        u(t) ? e.mask_selector = "".concat(t, ",").concat(f) : "" === t || null === t ? e.mask_selector = f : (0,
                                        l.Z)("An invalid session_replay.mask_selector was provided. '*' will be used.", t)
                                    },
                                    get block_class() {
                                        return "nr-block"
                                    },
                                    get ignore_class() {
                                        return "nr-ignore"
                                    },
                                    get mask_text_class() {
                                        return "nr-mask"
                                    },
                                    get block_selector() {
                                        return e.block_selector
                                    },
                                    set block_selector(t) {
                                        u(t) ? e.block_selector += ",".concat(t) : "" !== t && (0,
                                        l.Z)("An invalid session_replay.block_selector was provided and will not be used", t)
                                    },
                                    get mask_input_options() {
                                        return e.mask_input_options
                                    },
                                    set mask_input_options(t) {
                                        t && "object" == typeof t ? e.mask_input_options = {
                                            ...t,
                                            password: !0
                                        } : (0,
                                        l.Z)("An invalid session_replay.mask_input_option was provided and will not be used", t)
                                    }
                                },
                                spa: {
                                    enabled: !0,
                                    harvestTimeSeconds: 10,
                                    autoStart: !0
                                }
                            }
                        }
                          , p = {}
                          , g = "All configuration objects require an agent identifier!";
                        function m(e) {
                            if (!e)
                                throw new Error(g);
                            if (!p[e])
                                throw new Error("Configuration for ".concat(e, " was never set"));
                            return p[e]
                        }
                        function v(e, t) {
                            if (!e)
                                throw new Error(g);
                            p[e] = (0,
                            i.D)(t, h());
                            const r = (0,
                            n.ek)(e);
                            r && (r.init = p[e])
                        }
                        function b(e, t) {
                            if (!e)
                                throw new Error(g);
                            var r = m(e);
                            if (r) {
                                for (var n = t.split("."), i = 0; i < n.length - 1; i++)
                                    if ("object" != typeof (r = r[n[i]]))
                                        return;
                                r = r[n[n.length - 1]]
                            }
                            return r
                        }
                        const y = {
                            accountID: void 0,
                            trustKey: void 0,
                            agentID: void 0,
                            licenseKey: void 0,
                            applicationID: void 0,
                            xpid: void 0
                        }
                          , A = {};
                        function w(e) {
                            if (!e)
                                throw new Error("All loader-config objects require an agent identifier!");
                            if (!A[e])
                                throw new Error("LoaderConfig for ".concat(e, " was never set"));
                            return A[e]
                        }
                        function x(e, t) {
                            if (!e)
                                throw new Error("All loader-config objects require an agent identifier!");
                            A[e] = (0,
                            i.D)(t, y);
                            const r = (0,
                            n.ek)(e);
                            r && (r.loader_config = A[e])
                        }
                        const E = (0,
                        n.mF)().o;
                        var _ = r(385)
                          , T = r(6818);
                        const S = {
                            buildEnv: T.Re,
                            customTransaction: void 0,
                            disabled: !1,
                            distMethod: T.gF,
                            isolatedBacklog: !1,
                            loaderType: void 0,
                            maxBytes: 3e4,
                            offset: Math.floor(_._A?.performance?.timeOrigin || _._A?.performance?.timing?.navigationStart || Date.now()),
                            onerror: void 0,
                            origin: "" + _._A.location,
                            ptid: void 0,
                            releaseIds: {},
                            session: void 0,
                            xhrWrappable: "function" == typeof _._A.XMLHttpRequest?.prototype?.addEventListener,
                            version: T.q4,
                            denyList: void 0
                        }
                          , R = {};
                        function D(e) {
                            if (!e)
                                throw new Error("All runtime objects require an agent identifier!");
                            if (!R[e])
                                throw new Error("Runtime for ".concat(e, " was never set"));
                            return R[e]
                        }
                        function N(e, t) {
                            if (!e)
                                throw new Error("All runtime objects require an agent identifier!");
                            R[e] = (0,
                            i.D)(t, S);
                            const r = (0,
                            n.ek)(e);
                            r && (r.runtime = R[e])
                        }
                        function O(e) {
                            return function(e) {
                                try {
                                    const t = s(e);
                                    return !!t.licenseKey && !!t.errorBeacon && !!t.applicationID
                                } catch (e) {
                                    return !1
                                }
                            }(e)
                        }
                    }
                    ,
                    9567: (e, t, r) => {
                        "use strict";
                        r.d(t, {
                            D: () => i
                        });
                        var n = r(50);
                        function i(e, t) {
                            try {
                                if (!e || "object" != typeof e)
                                    return (0,
                                    n.Z)("Setting a Configurable requires an object as input");
                                if (!t || "object" != typeof t)
                                    return (0,
                                    n.Z)("Setting a Configurable requires a model to set its initial properties");
                                const r = Object.create(Object.getPrototypeOf(t), Object.getOwnPropertyDescriptors(t))
                                  , o = 0 === Object.keys(r).length ? e : r;
                                for (let a in o)
                                    if (void 0 !== e[a])
                                        try {
                                            Array.isArray(e[a]) && Array.isArray(t[a]) ? r[a] = Array.from(new Set([...e[a], ...t[a]])) : "object" == typeof e[a] && "object" == typeof t[a] ? r[a] = i(e[a], t[a]) : r[a] = e[a]
                                        } catch (e) {
                                            (0,
                                            n.Z)("An error occurred while setting a property of a Configurable", e)
                                        }
                                return r
                            } catch (e) {
                                (0,
                                n.Z)("An error occured while setting a Configurable", e)
                            }
                        }
                    }
                    ,
                    6818: (e, t, r) => {
                        "use strict";
                        r.d(t, {
                            Re: () => i,
                            gF: () => o,
                            lF: () => a,
                            q4: () => n
                        });
                        const n = "1.251.1"
                          , i = "PROD"
                          , o = "CDN"
                          , a = "2.0.0-alpha.11"
                    }
                    ,
                    385: (e, t, r) => {
                        "use strict";
                        r.d(t, {
                            FN: () => c,
                            IF: () => l,
                            LW: () => a,
                            Nk: () => h,
                            Tt: () => u,
                            _A: () => o,
                            cv: () => p,
                            iS: () => s,
                            il: () => n,
                            ux: () => d,
                            v6: () => i,
                            w1: () => f
                        });
                        const n = "undefined" != typeof window && !!window.document
                          , i = "undefined" != typeof WorkerGlobalScope && ("undefined" != typeof self && self instanceof WorkerGlobalScope && self.navigator instanceof WorkerNavigator || "undefined" != typeof globalThis && globalThis instanceof WorkerGlobalScope && globalThis.navigator instanceof WorkerNavigator)
                          , o = n ? window : "undefined" != typeof WorkerGlobalScope && ("undefined" != typeof self && self instanceof WorkerGlobalScope && self || "undefined" != typeof globalThis && globalThis instanceof WorkerGlobalScope && globalThis)
                          , a = "complete" === o?.document?.readyState
                          , s = Boolean("hidden" === o?.document?.visibilityState)
                          , c = "" + o?.location
                          , u = /iPad|iPhone|iPod/.test(o.navigator?.userAgent)
                          , d = u && "undefined" == typeof SharedWorker
                          , l = ( () => {
                            const e = o.navigator?.userAgent?.match(/Firefox[/\s](\d+\.\d+)/);
                            return Array.isArray(e) && e.length >= 2 ? +e[1] : 0
                        }
                        )()
                          , f = Boolean(n && window.document.documentMode)
                          , h = !!o.navigator?.sendBeacon
                          , p = Math.floor(o?.performance?.timeOrigin || o?.performance?.timing?.navigationStart || Date.now())
                    }
                    ,
                    1117: (e, t, r) => {
                        "use strict";
                        r.d(t, {
                            w: () => o
                        });
                        var n = r(50);
                        const i = {
                            agentIdentifier: "",
                            ee: void 0
                        };
                        class o {
                            constructor(e) {
                                try {
                                    if ("object" != typeof e)
                                        return (0,
                                        n.Z)("shared context requires an object as input");
                                    this.sharedContext = {},
                                    Object.assign(this.sharedContext, i),
                                    Object.entries(e).forEach((e => {
                                        let[t,r] = e;
                                        Object.keys(i).includes(t) && (this.sharedContext[t] = r)
                                    }
                                    ))
                                } catch (e) {
                                    (0,
                                    n.Z)("An error occured while setting SharedContext", e)
                                }
                            }
                        }
                    }
                    ,
                    8e3: (e, t, r) => {
                        "use strict";
                        r.d(t, {
                            L: () => d,
                            R: () => c
                        });
                        var n = r(8325)
                          , i = r(1284)
                          , o = r(4322)
                          , a = r(3325);
                        const s = {};
                        function c(e, t) {
                            const r = {
                                staged: !1,
                                priority: a.p[t] || 0
                            };
                            u(e),
                            s[e].get(t) || s[e].set(t, r)
                        }
                        function u(e) {
                            e && (s[e] || (s[e] = new Map))
                        }
                        function d() {
                            let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : ""
                              , t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "feature";
                            if (u(e),
                            !e || !s[e].get(t))
                                return a(t);
                            s[e].get(t).staged = !0;
                            const r = [...s[e]];
                            function a(t) {
                                const r = e ? n.ee.get(e) : n.ee
                                  , a = o.X.handlers;
                                if (r.backlog && a) {
                                    var s = r.backlog[t]
                                      , c = a[t];
                                    if (c) {
                                        for (var u = 0; s && u < s.length; ++u)
                                            l(s[u], c);
                                        (0,
                                        i.D)(c, (function(e, t) {
                                            (0,
                                            i.D)(t, (function(t, r) {
                                                r[0].on(e, r[1])
                                            }
                                            ))
                                        }
                                        ))
                                    }
                                    delete a[t],
                                    r.backlog[t] = null,
                                    r.emit("drain-" + t, [])
                                }
                            }
                            r.every((e => {
                                let[t,r] = e;
                                return r.staged
                            }
                            )) && (r.sort(( (e, t) => e[1].priority - t[1].priority)),
                            r.forEach((t => {
                                let[r] = t;
                                s[e].delete(r),
                                a(r)
                            }
                            )))
                        }
                        function l(e, t) {
                            var r = e[1];
                            (0,
                            i.D)(t[r], (function(t, r) {
                                var n = e[0];
                                if (r[0] === n) {
                                    var i = r[1]
                                      , o = e[3]
                                      , a = e[2];
                                    i.apply(o, a)
                                }
                            }
                            ))
                        }
                    }
                    ,
                    8325: (e, t, r) => {
                        "use strict";
                        r.d(t, {
                            A: () => c,
                            ee: () => u
                        });
                        var n = r(8632)
                          , i = r(2210)
                          , o = r(234);
                        class a {
                            constructor(e) {
                                this.contextId = e
                            }
                        }
                        var s = r(3117);
                        const c = "nr@context:".concat(s.a)
                          , u = function e(t, r) {
                            var n = {}
                              , s = {}
                              , d = {}
                              , f = !1;
                            try {
                                f = 16 === r.length && (0,
                                o.OP)(r).isolatedBacklog
                            } catch (e) {}
                            var h = {
                                on: g,
                                addEventListener: g,
                                removeEventListener: function(e, t) {
                                    var r = n[e];
                                    if (!r)
                                        return;
                                    for (var i = 0; i < r.length; i++)
                                        r[i] === t && r.splice(i, 1)
                                },
                                emit: function(e, r, n, i, o) {
                                    !1 !== o && (o = !0);
                                    if (u.aborted && !i)
                                        return;
                                    t && o && t.emit(e, r, n);
                                    for (var a = p(n), c = m(e), d = c.length, l = 0; l < d; l++)
                                        c[l].apply(a, r);
                                    var f = b()[s[e]];
                                    f && f.push([h, e, r, a]);
                                    return a
                                },
                                get: v,
                                listeners: m,
                                context: p,
                                buffer: function(e, t) {
                                    const r = b();
                                    if (t = t || "feature",
                                    h.aborted)
                                        return;
                                    Object.entries(e || {}).forEach((e => {
                                        let[n,i] = e;
                                        s[i] = t,
                                        t in r || (r[t] = [])
                                    }
                                    ))
                                },
                                abort: l,
                                aborted: !1,
                                isBuffering: function(e) {
                                    return !!b()[s[e]]
                                },
                                debugId: r,
                                backlog: f ? {} : t && "object" == typeof t.backlog ? t.backlog : {}
                            };
                            return h;
                            function p(e) {
                                return e && e instanceof a ? e : e ? (0,
                                i.X)(e, c, ( () => new a(c))) : new a(c)
                            }
                            function g(e, t) {
                                n[e] = m(e).concat(t)
                            }
                            function m(e) {
                                return n[e] || []
                            }
                            function v(t) {
                                return d[t] = d[t] || e(h, t)
                            }
                            function b() {
                                return h.backlog
                            }
                        }(void 0, "globalEE")
                          , d = (0,
                        n.fP)();
                        function l() {
                            u.aborted = !0,
                            u.backlog = {}
                        }
                        d.ee || (d.ee = u)
                    }
                    ,
                    5546: (e, t, r) => {
                        "use strict";
                        r.d(t, {
                            E: () => n,
                            p: () => i
                        });
                        var n = r(8325).ee.get("handle");
                        function i(e, t, r, i, o) {
                            o ? (o.buffer([e], i),
                            o.emit(e, t, r)) : (n.buffer([e], i),
                            n.emit(e, t, r))
                        }
                    }
                    ,
                    4322: (e, t, r) => {
                        "use strict";
                        r.d(t, {
                            X: () => o
                        });
                        var n = r(5546);
                        o.on = a;
                        var i = o.handlers = {};
                        function o(e, t, r, o) {
                            a(o || n.E, i, e, t, r)
                        }
                        function a(e, t, r, i, o) {
                            o || (o = "feature"),
                            e || (e = n.E);
                            var a = t[o] = t[o] || {};
                            (a[r] = a[r] || []).push([e, i])
                        }
                    }
                    ,
                    3239: (e, t, r) => {
                        "use strict";
                        r.d(t, {
                            bP: () => s,
                            iz: () => c,
                            m$: () => a
                        });
                        var n = r(385);
                        let i = !1
                          , o = !1;
                        try {
                            const e = {
                                get passive() {
                                    return i = !0,
                                    !1
                                },
                                get signal() {
                                    return o = !0,
                                    !1
                                }
                            };
                            n._A.addEventListener("test", null, e),
                            n._A.removeEventListener("test", null, e)
                        } catch (e) {}
                        function a(e, t) {
                            return i || o ? {
                                capture: !!e,
                                passive: i,
                                signal: t
                            } : !!e
                        }
                        function s(e, t) {
                            let r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2]
                              , n = arguments.length > 3 ? arguments[3] : void 0;
                            window.addEventListener(e, t, a(r, n))
                        }
                        function c(e, t) {
                            let r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2]
                              , n = arguments.length > 3 ? arguments[3] : void 0;
                            document.addEventListener(e, t, a(r, n))
                        }
                    }
                    ,
                    3117: (e, t, r) => {
                        "use strict";
                        r.d(t, {
                            a: () => n
                        });
                        const n = (0,
                        r(4402).Rl)()
                    }
                    ,
                    4402: (e, t, r) => {
                        "use strict";
                        r.d(t, {
                            Ht: () => u,
                            M: () => c,
                            Rl: () => a,
                            ky: () => s
                        });
                        var n = r(385);
                        const i = "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx";
                        function o(e, t) {
                            return e ? 15 & e[t] : 16 * Math.random() | 0
                        }
                        function a() {
                            const e = n._A?.crypto || n._A?.msCrypto;
                            let t, r = 0;
                            return e && e.getRandomValues && (t = e.getRandomValues(new Uint8Array(30))),
                            i.split("").map((e => "x" === e ? o(t, r++).toString(16) : "y" === e ? (3 & o() | 8).toString(16) : e)).join("")
                        }
                        function s(e) {
                            const t = n._A?.crypto || n._A?.msCrypto;
                            let r, i = 0;
                            t && t.getRandomValues && (r = t.getRandomValues(new Uint8Array(e)));
                            const a = [];
                            for (var s = 0; s < e; s++)
                                a.push(o(r, i++).toString(16));
                            return a.join("")
                        }
                        function c() {
                            return s(16)
                        }
                        function u() {
                            return s(32)
                        }
                    }
                    ,
                    7056: (e, t, r) => {
                        "use strict";
                        r.d(t, {
                            Bq: () => n,
                            Hb: () => o,
                            IK: () => c,
                            oD: () => i,
                            uT: () => s,
                            wO: () => a
                        });
                        const n = "NRBA"
                          , i = 144e5
                          , o = 18e5
                          , a = {
                            PAUSE: "session-pause",
                            RESET: "session-reset",
                            RESUME: "session-resume",
                            UPDATE: "session-update"
                        }
                          , s = {
                            SAME_TAB: "same-tab",
                            CROSS_TAB: "cross-tab"
                        }
                          , c = {
                            OFF: 0,
                            FULL: 1,
                            ERROR: 2
                        }
                    }
                    ,
                    7894: (e, t, r) => {
                        "use strict";
                        function n() {
                            return Math.round(performance.now())
                        }
                        r.d(t, {
                            z: () => n
                        })
                    }
                    ,
                    7243: (e, t, r) => {
                        "use strict";
                        r.d(t, {
                            e: () => i
                        });
                        var n = r(385);
                        function i(e) {
                            if (0 === (e || "").indexOf("data:"))
                                return {
                                    protocol: "data"
                                };
                            try {
                                const t = new URL(e,location.href)
                                  , r = {
                                    port: t.port,
                                    hostname: t.hostname,
                                    pathname: t.pathname,
                                    search: t.search,
                                    protocol: t.protocol.slice(0, t.protocol.indexOf(":")),
                                    sameOrigin: t.protocol === n._A?.location?.protocol && t.host === n._A?.location?.host
                                };
                                return r.port && "" !== r.port || ("http:" === t.protocol && (r.port = "80"),
                                "https:" === t.protocol && (r.port = "443")),
                                r.pathname && "" !== r.pathname ? r.pathname.startsWith("/") || (r.pathname = "/".concat(r.pathname)) : r.pathname = "/",
                                r
                            } catch (e) {
                                return {}
                            }
                        }
                    }
                    ,
                    50: (e, t, r) => {
                        "use strict";
                        function n(e, t) {
                            "function" == typeof console.warn && (console.warn("New Relic: ".concat(e)),
                            t && console.warn(t))
                        }
                        r.d(t, {
                            Z: () => n
                        })
                    }
                    ,
                    2825: (e, t, r) => {
                        "use strict";
                        r.d(t, {
                            N: () => d,
                            T: () => l
                        });
                        var n = r(8325)
                          , i = r(5546)
                          , o = r(3325)
                          , a = r(385);
                        const s = "newrelic";
                        const c = {
                            stn: [o.D.sessionTrace],
                            err: [o.D.jserrors, o.D.metrics],
                            ins: [o.D.pageAction],
                            spa: [o.D.spa],
                            sr: [o.D.sessionReplay, o.D.sessionTrace]
                        }
                          , u = new Set;
                        function d(e, t) {
                            const r = n.ee.get(t);
                            e && "object" == typeof e && (u.has(t) || (Object.entries(e).forEach((e => {
                                let[t,n] = e;
                                c[t] ? c[t].forEach((e => {
                                    n ? (0,
                                    i.p)("feat-" + t, [], void 0, e, r) : (0,
                                    i.p)("block-" + t, [], void 0, e, r),
                                    (0,
                                    i.p)("rumresp-" + t, [Boolean(n)], void 0, e, r)
                                }
                                )) : n && (0,
                                i.p)("feat-" + t, [], void 0, void 0, r),
                                l[t] = Boolean(n)
                            }
                            )),
                            Object.keys(c).forEach((e => {
                                void 0 === l[e] && (c[e]?.forEach((t => (0,
                                i.p)("rumresp-" + e, [!1], void 0, t, r))),
                                l[e] = !1)
                            }
                            )),
                            u.add(t),
                            function() {
                                let e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                                try {
                                    a._A.dispatchEvent(new CustomEvent(s,{
                                        detail: e
                                    }))
                                } catch (e) {}
                            }({
                                loaded: !0
                            })))
                        }
                        const l = {}
                    }
                    ,
                    2210: (e, t, r) => {
                        "use strict";
                        r.d(t, {
                            X: () => i
                        });
                        var n = Object.prototype.hasOwnProperty;
                        function i(e, t, r) {
                            if (n.call(e, t))
                                return e[t];
                            var i = r();
                            if (Object.defineProperty && Object.keys)
                                try {
                                    return Object.defineProperty(e, t, {
                                        value: i,
                                        writable: !0,
                                        enumerable: !1
                                    }),
                                    i
                                } catch (e) {}
                            return e[t] = i,
                            i
                        }
                    }
                    ,
                    1284: (e, t, r) => {
                        "use strict";
                        r.d(t, {
                            D: () => n
                        });
                        const n = (e, t) => Object.entries(e || {}).map((e => {
                            let[r,n] = e;
                            return t(r, n)
                        }
                        ))
                    }
                    ,
                    4351: (e, t, r) => {
                        "use strict";
                        r.d(t, {
                            P: () => o
                        });
                        var n = r(8325);
                        const i = () => {
                            const e = new WeakSet;
                            return (t, r) => {
                                if ("object" == typeof r && null !== r) {
                                    if (e.has(r))
                                        return;
                                    e.add(r)
                                }
                                return r
                            }
                        }
                        ;
                        function o(e) {
                            try {
                                return JSON.stringify(e, i())
                            } catch (e) {
                                try {
                                    n.ee.emit("internal-error", [e])
                                } catch (e) {}
                            }
                        }
                    }
                    ,
                    3960: (e, t, r) => {
                        "use strict";
                        r.d(t, {
                            KB: () => a,
                            b2: () => o
                        });
                        var n = r(3239);
                        function i() {
                            return "undefined" == typeof document || "complete" === document.readyState
                        }
                        function o(e, t) {
                            if (i())
                                return e();
                            (0,
                            n.bP)("load", e, t)
                        }
                        function a(e) {
                            if (i())
                                return e();
                            (0,
                            n.iz)("DOMContentLoaded", e)
                        }
                    }
                    ,
                    8632: (e, t, r) => {
                        "use strict";
                        r.d(t, {
                            EZ: () => d,
                            ce: () => o,
                            ek: () => u,
                            fP: () => a,
                            gG: () => l,
                            h5: () => c,
                            mF: () => s
                        });
                        var n = r(7894)
                          , i = r(385);
                        const o = {
                            beacon: "bam.nr-data.net",
                            errorBeacon: "bam.nr-data.net"
                        };
                        function a() {
                            return i._A.NREUM || (i._A.NREUM = {}),
                            void 0 === i._A.newrelic && (i._A.newrelic = i._A.NREUM),
                            i._A.NREUM
                        }
                        function s() {
                            let e = a();
                            return e.o || (e.o = {
                                ST: i._A.setTimeout,
                                SI: i._A.setImmediate,
                                CT: i._A.clearTimeout,
                                XHR: i._A.XMLHttpRequest,
                                REQ: i._A.Request,
                                EV: i._A.Event,
                                PR: i._A.Promise,
                                MO: i._A.MutationObserver,
                                FETCH: i._A.fetch
                            }),
                            e
                        }
                        function c(e, t) {
                            let r = a();
                            r.initializedAgents ??= {},
                            t.initializedAt = {
                                ms: (0,
                                n.z)(),
                                date: new Date
                            },
                            r.initializedAgents[e] = t
                        }
                        function u(e) {
                            let t = a();
                            return t.initializedAgents?.[e]
                        }
                        function d(e, t) {
                            a()[e] = t
                        }
                        function l() {
                            return function() {
                                let e = a();
                                const t = e.info || {};
                                e.info = {
                                    beacon: o.beacon,
                                    errorBeacon: o.errorBeacon,
                                    ...t
                                }
                            }(),
                            function() {
                                let e = a();
                                const t = e.init || {};
                                e.init = {
                                    ...t
                                }
                            }(),
                            s(),
                            function() {
                                let e = a();
                                const t = e.loader_config || {};
                                e.loader_config = {
                                    ...t
                                }
                            }(),
                            a()
                        }
                    }
                    ,
                    7956: (e, t, r) => {
                        "use strict";
                        r.d(t, {
                            N: () => i
                        });
                        var n = r(3239);
                        function i(e) {
                            let t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1]
                              , r = arguments.length > 2 ? arguments[2] : void 0
                              , i = arguments.length > 3 ? arguments[3] : void 0;
                            (0,
                            n.iz)("visibilitychange", (function() {
                                if (t)
                                    return void ("hidden" === document.visibilityState && e());
                                e(document.visibilityState)
                            }
                            ), r, i)
                        }
                    }
                    ,
                    1214: (e, t, r) => {
                        "use strict";
                        r.d(t, {
                            em: () => b,
                            u5: () => R,
                            QU: () => O,
                            _L: () => C,
                            Gm: () => M,
                            Lg: () => L,
                            BV: () => Z,
                            Kf: () => Y
                        });
                        var n = r(8325)
                          , i = r(3117);
                        const o = "nr@original:".concat(i.a);
                        var a = Object.prototype.hasOwnProperty
                          , s = !1;
                        function c(e, t) {
                            return e || (e = n.ee),
                            r.inPlace = function(e, t, n, i, o) {
                                n || (n = "");
                                const a = "-" === n.charAt(0);
                                for (let s = 0; s < t.length; s++) {
                                    const c = t[s]
                                      , u = e[c];
                                    d(u) || (e[c] = r(u, a ? c + n : n, i, c, o))
                                }
                            }
                            ,
                            r.flag = o,
                            r;
                            function r(t, r, n, s, c) {
                                return d(t) ? t : (r || (r = ""),
                                nrWrapper[o] = t,
                                function(e, t, r) {
                                    if (Object.defineProperty && Object.keys)
                                        try {
                                            return Object.keys(e).forEach((function(r) {
                                                Object.defineProperty(t, r, {
                                                    get: function() {
                                                        return e[r]
                                                    },
                                                    set: function(t) {
                                                        return e[r] = t,
                                                        t
                                                    }
                                                })
                                            }
                                            )),
                                            t
                                        } catch (e) {
                                            u([e], r)
                                        }
                                    for (var n in e)
                                        a.call(e, n) && (t[n] = e[n])
                                }(t, nrWrapper, e),
                                nrWrapper);
                                function nrWrapper() {
                                    var o, a, d, l;
                                    try {
                                        a = this,
                                        o = [...arguments],
                                        d = "function" == typeof n ? n(o, a) : n || {}
                                    } catch (t) {
                                        u([t, "", [o, a, s], d], e)
                                    }
                                    i(r + "start", [o, a, s], d, c);
                                    try {
                                        return l = t.apply(a, o)
                                    } catch (e) {
                                        throw i(r + "err", [o, a, e], d, c),
                                        e
                                    } finally {
                                        i(r + "end", [o, a, l], d, c)
                                    }
                                }
                            }
                            function i(r, n, i, o) {
                                if (!s || t) {
                                    var a = s;
                                    s = !0;
                                    try {
                                        e.emit(r, n, i, t, o)
                                    } catch (t) {
                                        u([t, r, n, i], e)
                                    }
                                    s = a
                                }
                            }
                        }
                        function u(e, t) {
                            t || (t = n.ee);
                            try {
                                t.emit("internal-error", e)
                            } catch (e) {}
                        }
                        function d(e) {
                            return !(e && "function" == typeof e && e.apply && !e[o])
                        }
                        var l = r(2210)
                          , f = r(385);
                        const h = {}
                          , p = f._A.XMLHttpRequest
                          , g = "addEventListener"
                          , m = "removeEventListener"
                          , v = "nr@wrapped:".concat(n.A);
                        function b(e) {
                            var t = function(e) {
                                return (e || n.ee).get("events")
                            }(e);
                            if (h[t.debugId]++)
                                return t;
                            h[t.debugId] = 1;
                            var r = c(t, !0);
                            function i(e) {
                                r.inPlace(e, [g, m], "-", o)
                            }
                            function o(e, t) {
                                return e[1]
                            }
                            return "getPrototypeOf"in Object && (f.il && y(document, i),
                            y(f._A, i),
                            y(p.prototype, i)),
                            t.on(g + "-start", (function(e, t) {
                                var n = e[1];
                                if (null !== n && ("function" == typeof n || "object" == typeof n)) {
                                    var i = (0,
                                    l.X)(n, v, (function() {
                                        var e = {
                                            object: function() {
                                                if ("function" != typeof n.handleEvent)
                                                    return;
                                                return n.handleEvent.apply(n, arguments)
                                            },
                                            function: n
                                        }[typeof n];
                                        return e ? r(e, "fn-", null, e.name || "anonymous") : n
                                    }
                                    ));
                                    this.wrapped = e[1] = i
                                }
                            }
                            )),
                            t.on(m + "-start", (function(e) {
                                e[1] = this.wrapped || e[1]
                            }
                            )),
                            t
                        }
                        function y(e, t) {
                            let r = e;
                            for (; "object" == typeof r && !Object.prototype.hasOwnProperty.call(r, g); )
                                r = Object.getPrototypeOf(r);
                            for (var n = arguments.length, i = new Array(n > 2 ? n - 2 : 0), o = 2; o < n; o++)
                                i[o - 2] = arguments[o];
                            r && t(r, ...i)
                        }
                        var A = "fetch-"
                          , w = A + "body-"
                          , x = ["arrayBuffer", "blob", "json", "text", "formData"]
                          , E = f._A.Request
                          , _ = f._A.Response
                          , T = "prototype";
                        const S = {};
                        function R(e) {
                            const t = function(e) {
                                return (e || n.ee).get("fetch")
                            }(e);
                            if (!(E && _ && f._A.fetch))
                                return t;
                            if (S[t.debugId]++)
                                return t;
                            function r(e, r, i) {
                                var o = e[r];
                                "function" == typeof o && (e[r] = function() {
                                    var e, r = [...arguments], a = {};
                                    t.emit(i + "before-start", [r], a),
                                    a[n.A] && a[n.A].dt && (e = a[n.A].dt);
                                    var s = o.apply(this, r);
                                    return t.emit(i + "start", [r, e], s),
                                    s.then((function(e) {
                                        return t.emit(i + "end", [null, e], s),
                                        e
                                    }
                                    ), (function(e) {
                                        throw t.emit(i + "end", [e], s),
                                        e
                                    }
                                    ))
                                }
                                )
                            }
                            return S[t.debugId] = 1,
                            x.forEach((e => {
                                r(E[T], e, w),
                                r(_[T], e, w)
                            }
                            )),
                            r(f._A, "fetch", A),
                            t.on(A + "end", (function(e, r) {
                                var n = this;
                                if (r) {
                                    var i = r.headers.get("content-length");
                                    null !== i && (n.rxSize = i),
                                    t.emit(A + "done", [null, r], n)
                                } else
                                    t.emit(A + "done", [e], n)
                            }
                            )),
                            t
                        }
                        const D = {}
                          , N = ["pushState", "replaceState"];
                        function O(e) {
                            const t = function(e) {
                                return (e || n.ee).get("history")
                            }(e);
                            return !f.il || D[t.debugId]++ || (D[t.debugId] = 1,
                            c(t).inPlace(window.history, N, "-")),
                            t
                        }
                        var I = r(3239);
                        const j = {}
                          , P = ["appendChild", "insertBefore", "replaceChild"];
                        function C(e) {
                            const t = function(e) {
                                return (e || n.ee).get("jsonp")
                            }(e);
                            if (!f.il || j[t.debugId])
                                return t;
                            j[t.debugId] = !0;
                            var r = c(t)
                              , i = /[?&](?:callback|cb)=([^&#]+)/
                              , o = /(.*)\.([^.]+)/
                              , a = /^(\w+)(\.|$)(.*)$/;
                            function s(e, t) {
                                if (!e)
                                    return t;
                                const r = e.match(a)
                                  , n = r[1];
                                return s(r[3], t[n])
                            }
                            return r.inPlace(Node.prototype, P, "dom-"),
                            t.on("dom-start", (function(e) {
                                !function(e) {
                                    if (!e || "string" != typeof e.nodeName || "script" !== e.nodeName.toLowerCase())
                                        return;
                                    if ("function" != typeof e.addEventListener)
                                        return;
                                    var n = (a = e.src,
                                    c = a.match(i),
                                    c ? c[1] : null);
                                    var a, c;
                                    if (!n)
                                        return;
                                    var u = function(e) {
                                        var t = e.match(o);
                                        if (t && t.length >= 3)
                                            return {
                                                key: t[2],
                                                parent: s(t[1], window)
                                            };
                                        return {
                                            key: e,
                                            parent: window
                                        }
                                    }(n);
                                    if ("function" != typeof u.parent[u.key])
                                        return;
                                    var d = {};
                                    function l() {
                                        t.emit("jsonp-end", [], d),
                                        e.removeEventListener("load", l, (0,
                                        I.m$)(!1)),
                                        e.removeEventListener("error", f, (0,
                                        I.m$)(!1))
                                    }
                                    function f() {
                                        t.emit("jsonp-error", [], d),
                                        t.emit("jsonp-end", [], d),
                                        e.removeEventListener("load", l, (0,
                                        I.m$)(!1)),
                                        e.removeEventListener("error", f, (0,
                                        I.m$)(!1))
                                    }
                                    r.inPlace(u.parent, [u.key], "cb-", d),
                                    e.addEventListener("load", l, (0,
                                    I.m$)(!1)),
                                    e.addEventListener("error", f, (0,
                                    I.m$)(!1)),
                                    t.emit("new-jsonp", [e.src], d)
                                }(e[0])
                            }
                            )),
                            t
                        }
                        const k = {};
                        function M(e) {
                            const t = function(e) {
                                return (e || n.ee).get("mutation")
                            }(e);
                            if (!f.il || k[t.debugId])
                                return t;
                            k[t.debugId] = !0;
                            var r = c(t)
                              , i = f._A.MutationObserver;
                            return i && (window.MutationObserver = function(e) {
                                return this instanceof i ? new i(r(e, "fn-")) : i.apply(this, arguments)
                            }
                            ,
                            MutationObserver.prototype = i.prototype),
                            t
                        }
                        const H = {};
                        function L(e) {
                            const t = function(e) {
                                return (e || n.ee).get("promise")
                            }(e);
                            if (H[t.debugId])
                                return t;
                            H[t.debugId] = !0;
                            var r = t.context
                              , i = c(t)
                              , a = f._A.Promise;
                            return a && function() {
                                function e(r) {
                                    var n = t.context()
                                      , o = i(r, "executor-", n, null, !1);
                                    const s = Reflect.construct(a, [o], e);
                                    return t.context(s).getCtx = function() {
                                        return n
                                    }
                                    ,
                                    s
                                }
                                f._A.Promise = e,
                                Object.defineProperty(e, "name", {
                                    value: "Promise"
                                }),
                                e.toString = function() {
                                    return a.toString()
                                }
                                ,
                                Object.setPrototypeOf(e, a),
                                ["all", "race"].forEach((function(r) {
                                    const n = a[r];
                                    e[r] = function(e) {
                                        let i = !1;
                                        [...e || []].forEach((e => {
                                            this.resolve(e).then(a("all" === r), a(!1))
                                        }
                                        ));
                                        const o = n.apply(this, arguments);
                                        return o;
                                        function a(e) {
                                            return function() {
                                                t.emit("propagate", [null, !i], o, !1, !1),
                                                i = i || !e
                                            }
                                        }
                                    }
                                }
                                )),
                                ["resolve", "reject"].forEach((function(r) {
                                    const n = a[r];
                                    e[r] = function(e) {
                                        const r = n.apply(this, arguments);
                                        return e !== r && t.emit("propagate", [e, !0], r, !1, !1),
                                        r
                                    }
                                }
                                )),
                                e.prototype = a.prototype;
                                const n = a.prototype.then;
                                a.prototype.then = function() {
                                    var e = this
                                      , o = r(e);
                                    o.promise = e;
                                    for (var a = arguments.length, s = new Array(a), c = 0; c < a; c++)
                                        s[c] = arguments[c];
                                    s[0] = i(s[0], "cb-", o, null, !1),
                                    s[1] = i(s[1], "cb-", o, null, !1);
                                    const u = n.apply(this, s);
                                    return o.nextPromise = u,
                                    t.emit("propagate", [e, !0], u, !1, !1),
                                    u
                                }
                                ,
                                a.prototype.then[o] = n,
                                t.on("executor-start", (function(e) {
                                    e[0] = i(e[0], "resolve-", this, null, !1),
                                    e[1] = i(e[1], "resolve-", this, null, !1)
                                }
                                )),
                                t.on("executor-err", (function(e, t, r) {
                                    e[1](r)
                                }
                                )),
                                t.on("cb-end", (function(e, r, n) {
                                    t.emit("propagate", [n, !0], this.nextPromise, !1, !1)
                                }
                                )),
                                t.on("propagate", (function(e, r, n) {
                                    this.getCtx && !r || (this.getCtx = function() {
                                        if (e instanceof Promise)
                                            var r = t.context(e);
                                        return r && r.getCtx ? r.getCtx() : this
                                    }
                                    )
                                }
                                ))
                            }(),
                            t
                        }
                        const z = {}
                          , F = "setTimeout"
                          , B = "setInterval"
                          , U = "clearTimeout"
                          , V = "-start"
                          , q = "-"
                          , G = [F, "setImmediate", B, U, "clearImmediate"];
                        function Z(e) {
                            const t = function(e) {
                                return (e || n.ee).get("timer")
                            }(e);
                            if (z[t.debugId]++)
                                return t;
                            z[t.debugId] = 1;
                            var r = c(t);
                            return r.inPlace(f._A, G.slice(0, 2), F + q),
                            r.inPlace(f._A, G.slice(2, 3), B + q),
                            r.inPlace(f._A, G.slice(3), U + q),
                            t.on(B + V, (function(e, t, n) {
                                e[0] = r(e[0], "fn-", null, n)
                            }
                            )),
                            t.on(F + V, (function(e, t, n) {
                                this.method = n,
                                this.timerDuration = isNaN(e[1]) ? 0 : +e[1],
                                e[0] = r(e[0], "fn-", this, n)
                            }
                            )),
                            t
                        }
                        var W = r(50);
                        const X = {}
                          , K = ["open", "send"];
                        function Y(e) {
                            var t = e || n.ee;
                            const r = function(e) {
                                return (e || n.ee).get("xhr")
                            }(t);
                            if (X[r.debugId]++)
                                return r;
                            X[r.debugId] = 1,
                            b(t);
                            var i = c(r)
                              , o = f._A.XMLHttpRequest
                              , a = f._A.MutationObserver
                              , s = f._A.Promise
                              , u = f._A.setInterval
                              , d = "readystatechange"
                              , l = ["onload", "onerror", "onabort", "onloadstart", "onloadend", "onprogress", "ontimeout"]
                              , h = []
                              , p = f._A.XMLHttpRequest = function(e) {
                                const t = new o(e)
                                  , n = r.context(t);
                                try {
                                    r.emit("new-xhr", [t], n),
                                    t.addEventListener(d, (a = n,
                                    function() {
                                        var e = this;
                                        e.readyState > 3 && !a.resolved && (a.resolved = !0,
                                        r.emit("xhr-resolved", [], e)),
                                        i.inPlace(e, l, "fn-", w)
                                    }
                                    ), (0,
                                    I.m$)(!1))
                                } catch (e) {
                                    (0,
                                    W.Z)("An error occurred while intercepting XHR", e);
                                    try {
                                        r.emit("internal-error", [e])
                                    } catch (e) {}
                                }
                                var a;
                                return t
                            }
                            ;
                            function g(e, t) {
                                i.inPlace(t, ["onreadystatechange"], "fn-", w)
                            }
                            if (function(e, t) {
                                for (var r in e)
                                    t[r] = e[r]
                            }(o, p),
                            p.prototype = o.prototype,
                            i.inPlace(p.prototype, K, "-xhr-", w),
                            r.on("send-xhr-start", (function(e, t) {
                                g(e, t),
                                function(e) {
                                    h.push(e),
                                    a && (m ? m.then(A) : u ? u(A) : (v = -v,
                                    y.data = v))
                                }(t)
                            }
                            )),
                            r.on("open-xhr-start", g),
                            a) {
                                var m = s && s.resolve();
                                if (!u && !s) {
                                    var v = 1
                                      , y = document.createTextNode(v);
                                    new a(A).observe(y, {
                                        characterData: !0
                                    })
                                }
                            } else
                                t.on("fn-end", (function(e) {
                                    e[0] && e[0].type === d || A()
                                }
                                ));
                            function A() {
                                for (var e = 0; e < h.length; e++)
                                    g(0, h[e]);
                                h.length && (h = [])
                            }
                            function w(e, t) {
                                return t
                            }
                            return r
                        }
                    }
                    ,
                    7825: (e, t, r) => {
                        "use strict";
                        r.d(t, {
                            t: () => n
                        });
                        const n = r(3325).D.ajax
                    }
                    ,
                    6660: (e, t, r) => {
                        "use strict";
                        r.d(t, {
                            t: () => n
                        });
                        const n = r(3325).D.jserrors
                    }
                    ,
                    3081: (e, t, r) => {
                        "use strict";
                        r.d(t, {
                            gF: () => o,
                            mY: () => i,
                            t9: () => n,
                            vz: () => s,
                            xS: () => a
                        });
                        const n = r(3325).D.metrics
                          , i = "sm"
                          , o = "cm"
                          , a = "storeSupportabilityMetrics"
                          , s = "storeEventMetrics"
                    }
                    ,
                    4649: (e, t, r) => {
                        "use strict";
                        r.d(t, {
                            t: () => n
                        });
                        const n = r(3325).D.pageAction
                    }
                    ,
                    7633: (e, t, r) => {
                        "use strict";
                        r.d(t, {
                            t: () => n
                        });
                        const n = r(3325).D.pageViewEvent
                    }
                    ,
                    9251: (e, t, r) => {
                        "use strict";
                        r.d(t, {
                            t: () => n
                        });
                        const n = r(3325).D.pageViewTiming
                    }
                    ,
                    7144: (e, t, r) => {
                        "use strict";
                        r.d(t, {
                            J0: () => l,
                            Mi: () => d,
                            Vb: () => o,
                            Ye: () => s,
                            fm: () => c,
                            i9: () => a,
                            t9: () => i,
                            u0: () => u
                        });
                        var n = r(7056);
                        const i = r(3325).D.sessionReplay
                          , o = .12
                          , a = {
                            DomContentLoaded: 0,
                            Load: 1,
                            FullSnapshot: 2,
                            IncrementalSnapshot: 3,
                            Meta: 4,
                            Custom: 5
                        }
                          , s = 1e6
                          , c = 64e3
                          , u = {
                            [n.IK.ERROR]: 15e3,
                            [n.IK.FULL]: 3e5,
                            [n.IK.OFF]: 0
                        }
                          , d = {
                            RESET: {
                                message: "Session was reset",
                                sm: "Reset"
                            },
                            IMPORT: {
                                message: "Recorder failed to import",
                                sm: "Import"
                            },
                            TOO_MANY: {
                                message: "429: Too Many Requests",
                                sm: "Too-Many"
                            },
                            TOO_BIG: {
                                message: "Payload was too large",
                                sm: "Too-Big"
                            },
                            CROSS_TAB: {
                                message: "Session Entity was set to OFF on another tab",
                                sm: "Cross-Tab"
                            },
                            ENTITLEMENTS: {
                                message: "Session Replay is not allowed and will not be started",
                                sm: "Entitlement"
                            }
                        }
                          , l = 5e3
                    }
                    ,
                    3614: (e, t, r) => {
                        "use strict";
                        r.d(t, {
                            BST_RESOURCE: () => i,
                            END: () => s,
                            FEATURE_NAME: () => n,
                            FN_END: () => u,
                            FN_START: () => c,
                            PUSH_STATE: () => d,
                            RESOURCE: () => o,
                            START: () => a
                        });
                        const n = r(3325).D.sessionTrace
                          , i = "bstResource"
                          , o = "resource"
                          , a = "-start"
                          , s = "-end"
                          , c = "fn" + a
                          , u = "fn" + s
                          , d = "pushState"
                    }
                    ,
                    7836: (e, t, r) => {
                        "use strict";
                        r.d(t, {
                            BODY: () => x,
                            CB_END: () => E,
                            CB_START: () => u,
                            END: () => w,
                            FEATURE_NAME: () => i,
                            FETCH: () => T,
                            FETCH_BODY: () => v,
                            FETCH_DONE: () => m,
                            FETCH_START: () => g,
                            FN_END: () => c,
                            FN_START: () => s,
                            INTERACTION: () => f,
                            INTERACTION_API: () => d,
                            INTERACTION_EVENTS: () => o,
                            JSONP_END: () => b,
                            JSONP_NODE: () => p,
                            JS_TIME: () => _,
                            MAX_TIMER_BUDGET: () => a,
                            REMAINING: () => l,
                            SPA_NODE: () => h,
                            START: () => A,
                            originalSetTimeout: () => y
                        });
                        var n = r(234);
                        const i = r(3325).D.spa
                          , o = ["click", "submit", "keypress", "keydown", "keyup", "change"]
                          , a = 999
                          , s = "fn-start"
                          , c = "fn-end"
                          , u = "cb-start"
                          , d = "api-ixn-"
                          , l = "remaining"
                          , f = "interaction"
                          , h = "spaNode"
                          , p = "jsonpNode"
                          , g = "fetch-start"
                          , m = "fetch-done"
                          , v = "fetch-body-"
                          , b = "jsonp-end"
                          , y = n.Yu.ST
                          , A = "-start"
                          , w = "-end"
                          , x = "-body"
                          , E = "cb" + w
                          , _ = "jsTime"
                          , T = "fetch"
                    }
                    ,
                    5938: (e, t, r) => {
                        "use strict";
                        r.d(t, {
                            W: () => i
                        });
                        var n = r(8325);
                        class i {
                            constructor(e, t, r) {
                                this.agentIdentifier = e,
                                this.aggregator = t,
                                this.ee = n.ee.get(e),
                                this.featureName = r,
                                this.blocked = !1
                            }
                        }
                    }
                    ,
                    7530: (e, t, r) => {
                        "use strict";
                        r.d(t, {
                            j: () => b
                        });
                        var n = r(3325)
                          , i = r(234)
                          , o = r(5546)
                          , a = r(8325)
                          , s = r(7894)
                          , c = r(8e3)
                          , u = r(3960)
                          , d = r(385)
                          , l = r(50)
                          , f = r(3081)
                          , h = r(8632);
                        function p() {
                            const e = (0,
                            h.gG)();
                            ["setErrorHandler", "finished", "addToTrace", "addRelease", "addPageAction", "setCurrentRouteName", "setPageViewName", "setCustomAttribute", "interaction", "noticeError", "setUserId", "setApplicationVersion", "start", "recordReplay", "pauseReplay"].forEach((t => {
                                e[t] = function() {
                                    for (var r = arguments.length, n = new Array(r), i = 0; i < r; i++)
                                        n[i] = arguments[i];
                                    return function(t) {
                                        for (var r = arguments.length, n = new Array(r > 1 ? r - 1 : 0), i = 1; i < r; i++)
                                            n[i - 1] = arguments[i];
                                        let o = [];
                                        return Object.values(e.initializedAgents).forEach((e => {
                                            e.exposed && e.api[t] && o.push(e.api[t](...n))
                                        }
                                        )),
                                        o.length > 1 ? o : o[0]
                                    }(t, ...n)
                                }
                            }
                            ))
                        }
                        var g = r(2825);
                        const m = e => {
                            const t = e.startsWith("http");
                            e += "/",
                            r.p = t ? e : "https://" + e
                        }
                        ;
                        let v = !1;
                        function b(e) {
                            let t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}
                              , b = arguments.length > 2 ? arguments[2] : void 0
                              , y = arguments.length > 3 ? arguments[3] : void 0
                              , {init: A, info: w, loader_config: x, runtime: E={
                                loaderType: b
                            }, exposed: _=!0} = t;
                            const T = (0,
                            h.gG)();
                            w || (A = T.init,
                            w = T.info,
                            x = T.loader_config),
                            (0,
                            i.Dg)(e.agentIdentifier, A || {}),
                            (0,
                            i.GE)(e.agentIdentifier, x || {}),
                            w.jsAttributes ??= {},
                            d.v6 && (w.jsAttributes.isWorker = !0),
                            (0,
                            i.CX)(e.agentIdentifier, w);
                            const S = (0,
                            i.P_)(e.agentIdentifier)
                              , R = [w.beacon, w.errorBeacon];
                            v || (S.proxy.assets && (m(S.proxy.assets),
                            R.push(S.proxy.assets)),
                            S.proxy.beacon && R.push(S.proxy.beacon),
                            p(),
                            (0,
                            h.EZ)("activatedFeatures", g.T)),
                            E.denyList = [...S.ajax.deny_list || [], ...S.ajax.block_internal ? R : []],
                            (0,
                            i.sU)(e.agentIdentifier, E),
                            void 0 === e.api && (e.api = function(e, t) {
                                t || (0,
                                c.R)(e, "api");
                                const h = {};
                                var p = a.ee.get(e)
                                  , g = p.get("tracer")
                                  , m = "api-"
                                  , v = m + "ixn-";
                                function b(t, r, n, o) {
                                    const a = (0,
                                    i.C5)(e);
                                    return null === r ? delete a.jsAttributes[t] : (0,
                                    i.CX)(e, {
                                        ...a,
                                        jsAttributes: {
                                            ...a.jsAttributes,
                                            [t]: r
                                        }
                                    }),
                                    w(m, n, !0, o || null === r ? "session" : void 0)(t, r)
                                }
                                function y() {}
                                ["setErrorHandler", "finished", "addToTrace", "addRelease"].forEach((e => {
                                    h[e] = w(m, e, !0, "api")
                                }
                                )),
                                h.addPageAction = w(m, "addPageAction", !0, n.D.pageAction),
                                h.setCurrentRouteName = w(m, "routeName", !0, n.D.spa),
                                h.setPageViewName = function(t, r) {
                                    if ("string" == typeof t)
                                        return "/" !== t.charAt(0) && (t = "/" + t),
                                        (0,
                                        i.OP)(e).customTransaction = (r || "http://custom.transaction") + t,
                                        w(m, "setPageViewName", !0)()
                                }
                                ,
                                h.setCustomAttribute = function(e, t) {
                                    let r = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                                    if ("string" == typeof e) {
                                        if (["string", "number", "boolean"].includes(typeof t) || null === t)
                                            return b(e, t, "setCustomAttribute", r);
                                        (0,
                                        l.Z)("Failed to execute setCustomAttribute.\nNon-null value must be a string, number or boolean type, but a type of <".concat(typeof t, "> was provided."))
                                    } else
                                        (0,
                                        l.Z)("Failed to execute setCustomAttribute.\nName must be a string type, but a type of <".concat(typeof e, "> was provided."))
                                }
                                ,
                                h.setUserId = function(e) {
                                    if ("string" == typeof e || null === e)
                                        return b("enduser.id", e, "setUserId", !0);
                                    (0,
                                    l.Z)("Failed to execute setUserId.\nNon-null value must be a string type, but a type of <".concat(typeof e, "> was provided."))
                                }
                                ,
                                h.setApplicationVersion = function(e) {
                                    if ("string" == typeof e || null === e)
                                        return b("application.version", e, "setApplicationVersion", !1);
                                    (0,
                                    l.Z)("Failed to execute setApplicationVersion. Expected <String | null>, but got <".concat(typeof e, ">."))
                                }
                                ,
                                h.start = e => {
                                    try {
                                        const t = e ? "defined" : "undefined";
                                        (0,
                                        o.p)(f.xS, ["API/start/".concat(t, "/called")], void 0, n.D.metrics, p);
                                        const r = Object.values(n.D);
                                        if (void 0 === e)
                                            e = r;
                                        else {
                                            if ((e = Array.isArray(e) && e.length ? e : [e]).some((e => !r.includes(e))))
                                                return (0,
                                                l.Z)("Invalid feature name supplied. Acceptable feature names are: ".concat(r));
                                            e.includes(n.D.pageViewEvent) || e.push(n.D.pageViewEvent)
                                        }
                                        e.forEach((e => {
                                            p.emit("".concat(e, "-opt-in"))
                                        }
                                        ))
                                    } catch (e) {
                                        (0,
                                        l.Z)("An unexpected issue occurred", e)
                                    }
                                }
                                ,
                                h.recordReplay = function() {
                                    (0,
                                    o.p)(f.xS, ["API/recordReplay/called"], void 0, n.D.metrics, p),
                                    (0,
                                    o.p)("recordReplay", [], void 0, n.D.sessionReplay, p)
                                }
                                ,
                                h.pauseReplay = function() {
                                    (0,
                                    o.p)(f.xS, ["API/pauseReplay/called"], void 0, n.D.metrics, p),
                                    (0,
                                    o.p)("pauseReplay", [], void 0, n.D.sessionReplay, p)
                                }
                                ,
                                h.interaction = function() {
                                    return (new y).get()
                                }
                                ;
                                var A = y.prototype = {
                                    createTracer: function(e, t) {
                                        var r = {}
                                          , i = this
                                          , a = "function" == typeof t;
                                        return (0,
                                        o.p)(f.xS, ["API/createTracer/called"], void 0, n.D.metrics, p),
                                        (0,
                                        o.p)(v + "tracer", [(0,
                                        s.z)(), e, r], i, n.D.spa, p),
                                        function() {
                                            if (g.emit((a ? "" : "no-") + "fn-start", [(0,
                                            s.z)(), i, a], r),
                                            a)
                                                try {
                                                    return t.apply(this, arguments)
                                                } catch (e) {
                                                    throw g.emit("fn-err", [arguments, this, e], r),
                                                    e
                                                } finally {
                                                    g.emit("fn-end", [(0,
                                                    s.z)()], r)
                                                }
                                        }
                                    }
                                };
                                function w(e, t, r, i) {
                                    return function() {
                                        return (0,
                                        o.p)(f.xS, ["API/" + t + "/called"], void 0, n.D.metrics, p),
                                        i && (0,
                                        o.p)(e + t, [(0,
                                        s.z)(), ...arguments], r ? null : this, i, p),
                                        r ? void 0 : this
                                    }
                                }
                                function x() {
                                    r.e(111).then(r.bind(r, 7438)).then((t => {
                                        let {setAPI: r} = t;
                                        r(e),
                                        (0,
                                        c.L)(e, "api")
                                    }
                                    )).catch(( () => (0,
                                    l.Z)("Downloading runtime APIs failed...")))
                                }
                                return ["actionText", "setName", "setAttribute", "save", "ignore", "onEnd", "getContext", "end", "get"].forEach((e => {
                                    A[e] = w(v, e, void 0, n.D.spa)
                                }
                                )),
                                h.noticeError = function(e, t) {
                                    "string" == typeof e && (e = new Error(e)),
                                    (0,
                                    o.p)(f.xS, ["API/noticeError/called"], void 0, n.D.metrics, p),
                                    (0,
                                    o.p)("err", [e, (0,
                                    s.z)(), !1, t], void 0, n.D.jserrors, p)
                                }
                                ,
                                d.il ? (0,
                                u.b2)(( () => x()), !0) : x(),
                                h
                            }(e.agentIdentifier, y)),
                            void 0 === e.exposed && (e.exposed = _),
                            v = !0
                        }
                    }
                    ,
                    1926: (e, t, r) => {
                        r.nc = ( () => {
                            try {
                                return document?.currentScript?.nonce
                            } catch (e) {}
                            return ""
                        }
                        )()
                    }
                    ,
                    3325: (e, t, r) => {
                        "use strict";
                        r.d(t, {
                            D: () => n,
                            p: () => i
                        });
                        const n = {
                            ajax: "ajax",
                            jserrors: "jserrors",
                            metrics: "metrics",
                            pageAction: "page_action",
                            pageViewEvent: "page_view_event",
                            pageViewTiming: "page_view_timing",
                            sessionReplay: "session_replay",
                            sessionTrace: "session_trace",
                            spa: "spa"
                        }
                          , i = {
                            [n.pageViewEvent]: 1,
                            [n.pageViewTiming]: 2,
                            [n.metrics]: 3,
                            [n.jserrors]: 4,
                            [n.ajax]: 5,
                            [n.sessionTrace]: 6,
                            [n.pageAction]: 7,
                            [n.spa]: 8,
                            [n.sessionReplay]: 9
                        }
                    }
                }, n = {};
                function i(e) {
                    var t = n[e];
                    if (void 0 !== t)
                        return t.exports;
                    var o = n[e] = {
                        exports: {}
                    };
                    return r[e](o, o.exports, i),
                    o.exports
                }
                i.m = r,
                i.d = (e, t) => {
                    for (var r in t)
                        i.o(t, r) && !i.o(e, r) && Object.defineProperty(e, r, {
                            enumerable: !0,
                            get: t[r]
                        })
                }
                ,
                i.f = {},
                i.e = e => Promise.all(Object.keys(i.f).reduce(( (t, r) => (i.f[r](e, t),
                t)), [])),
                i.u = e => ({
                    111: "nr-spa",
                    164: "nr-spa-compressor",
                    433: "nr-spa-recorder"
                }[e] + "-1.251.1.min.js"),
                i.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t),
                e = {},
                t = "NRBA-1.251.1.PROD:",
                i.l = (r, n, o, a) => {
                    if (e[r])
                        e[r].push(n);
                    else {
                        var s, c;
                        if (void 0 !== o)
                            for (var u = document.getElementsByTagName("script"), d = 0; d < u.length; d++) {
                                var l = u[d];
                                if (l.getAttribute("src") == r || l.getAttribute("data-webpack") == t + o) {
                                    s = l;
                                    break
                                }
                            }
                        if (!s) {
                            c = !0;
                            var f = {
                                111: "sha512-lCY4+B0gOT0jVtMbaDU0ri7coukTGr4YSIrFnYCbNcvlKoBWZ5lEMC3pnQbfFRHmqU9ClOHO1zeM7zl3Bpi8lg==",
                                433: "sha512-uSk6ex6Q5btbEC3Fd9ucXsXT/MfYs9nSwrApEySzfsKG5WHfu74lzjBZOw2ou+AfTHUFLXX7zUhG8T18KvZDQQ==",
                                164: "sha512-69slZTW/5YZ/pY5zE0I3TCiV/tXwxGlT/pOzl7BgweR1maJ+C+doWoTbPHgKP1SrTS/0sZHb5fgMScLDwVDkqw=="
                            };
                            (s = document.createElement("script")).charset = "utf-8",
                            s.timeout = 120,
                            i.nc && s.setAttribute("nonce", i.nc),
                            s.setAttribute("data-webpack", t + o),
                            s.src = r,
                            0 !== s.src.indexOf(window.location.origin + "/") && (s.crossOrigin = "anonymous"),
                            f[a] && (s.integrity = f[a])
                        }
                        e[r] = [n];
                        var h = (t, n) => {
                            s.onerror = s.onload = null,
                            clearTimeout(p);
                            var i = e[r];
                            if (delete e[r],
                            s.parentNode && s.parentNode.removeChild(s),
                            i && i.forEach((e => e(n))),
                            t)
                                return t(n)
                        }
                          , p = setTimeout(h.bind(null, void 0, {
                            type: "timeout",
                            target: s
                        }), 12e4);
                        s.onerror = h.bind(null, s.onerror),
                        s.onload = h.bind(null, s.onload),
                        c && document.head.appendChild(s)
                    }
                }
                ,
                i.r = e => {
                    "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
                        value: "Module"
                    }),
                    Object.defineProperty(e, "__esModule", {
                        value: !0
                    })
                }
                ,
                i.p = "https://js-agent.newrelic.com/",
                ( () => {
                    var e = {
                        801: 0,
                        92: 0
                    };
                    i.f.j = (t, r) => {
                        var n = i.o(e, t) ? e[t] : void 0;
                        if (0 !== n)
                            if (n)
                                r.push(n[2]);
                            else {
                                var o = new Promise(( (r, i) => n = e[t] = [r, i]));
                                r.push(n[2] = o);
                                var a = i.p + i.u(t)
                                  , s = new Error;
                                i.l(a, (r => {
                                    if (i.o(e, t) && (0 !== (n = e[t]) && (e[t] = void 0),
                                    n)) {
                                        var o = r && ("load" === r.type ? "missing" : r.type)
                                          , a = r && r.target && r.target.src;
                                        s.message = "Loading chunk " + t + " failed.\n(" + o + ": " + a + ")",
                                        s.name = "ChunkLoadError",
                                        s.type = o,
                                        s.request = a,
                                        n[1](s)
                                    }
                                }
                                ), "chunk-" + t, t)
                            }
                    }
                    ;
                    var t = (t, r) => {
                        var n, o, [a,s,c] = r, u = 0;
                        if (a.some((t => 0 !== e[t]))) {
                            for (n in s)
                                i.o(s, n) && (i.m[n] = s[n]);
                            if (c)
                                c(i)
                        }
                        for (t && t(r); u < a.length; u++)
                            o = a[u],
                            i.o(e, o) && e[o] && e[o][0](),
                            e[o] = 0
                    }
                      , r = self["webpackChunk:NRBA-1.251.1.PROD"] = self["webpackChunk:NRBA-1.251.1.PROD"] || [];
                    r.forEach(t.bind(null, 0)),
                    r.push = t.bind(null, r.push.bind(r))
                }
                )(),
                ( () => {
                    "use strict";
                    i(1926);
                    var e = i(50);
                    class t {
                        #e(t) {
                            for (var r = arguments.length, n = new Array(r > 1 ? r - 1 : 0), i = 1; i < r; i++)
                                n[i - 1] = arguments[i];
                            if ("function" == typeof this.api?.[t])
                                return this.api[t](...n);
                            (0,
                            e.Z)("Call to agent api ".concat(t, " failed. The API is not currently initialized."))
                        }
                        addPageAction(e, t) {
                            return this.#e("addPageAction", e, t)
                        }
                        setPageViewName(e, t) {
                            return this.#e("setPageViewName", e, t)
                        }
                        setCustomAttribute(e, t, r) {
                            return this.#e("setCustomAttribute", e, t, r)
                        }
                        noticeError(e, t) {
                            return this.#e("noticeError", e, t)
                        }
                        setUserId(e) {
                            return this.#e("setUserId", e)
                        }
                        setApplicationVersion(e) {
                            return this.#e("setApplicationVersion", e)
                        }
                        setErrorHandler(e) {
                            return this.#e("setErrorHandler", e)
                        }
                        finished(e) {
                            return this.#e("finished", e)
                        }
                        addRelease(e, t) {
                            return this.#e("addRelease", e, t)
                        }
                        start(e) {
                            return this.#e("start", e)
                        }
                        recordReplay() {
                            return this.#e("recordReplay")
                        }
                        pauseReplay() {
                            return this.#e("pauseReplay")
                        }
                        addToTrace(e) {
                            return this.#e("addToTrace", e)
                        }
                        setCurrentRouteName(e) {
                            return this.#e("setCurrentRouteName", e)
                        }
                        interaction() {
                            return this.#e("interaction")
                        }
                    }
                    var r = i(3325)
                      , n = i(234);
                    const o = Object.values(r.D);
                    function a(e) {
                        const t = {};
                        return o.forEach((r => {
                            t[r] = function(e, t) {
                                return !1 !== (0,
                                n.Mt)(t, "".concat(e, ".enabled"))
                            }(r, e)
                        }
                        )),
                        t
                    }
                    var s = i(7530);
                    var c = i(8e3)
                      , u = i(5938)
                      , d = i(3960)
                      , l = i(385);
                    class f extends u.W {
                        constructor(e, t, r) {
                            let i = !(arguments.length > 3 && void 0 !== arguments[3]) || arguments[3];
                            super(e, t, r),
                            this.auto = i,
                            this.abortHandler = void 0,
                            this.featAggregate = void 0,
                            this.onAggregateImported = void 0,
                            !1 === (0,
                            n.Mt)(this.agentIdentifier, "".concat(this.featureName, ".autoStart")) && (this.auto = !1),
                            this.auto && (0,
                            c.R)(e, r)
                        }
                        importAggregator() {
                            let t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                            if (this.featAggregate)
                                return;
                            if (!this.auto)
                                return void this.ee.on("".concat(this.featureName, "-opt-in"), ( () => {
                                    (0,
                                    c.R)(this.agentIdentifier, this.featureName),
                                    this.auto = !0,
                                    this.importAggregator()
                                }
                                ));
                            const r = l.il && !0 === (0,
                            n.Mt)(this.agentIdentifier, "privacy.cookies_enabled");
                            let o;
                            this.onAggregateImported = new Promise((e => {
                                o = e
                            }
                            ));
                            const a = async () => {
                                let n;
                                try {
                                    if (r) {
                                        const {setupAgentSession: e} = await i.e(111).then(i.bind(i, 1656));
                                        n = e(this.agentIdentifier)
                                    }
                                } catch (t) {
                                    (0,
                                    e.Z)("A problem occurred when starting up session manager. This page will not start or extend any session.", t)
                                }
                                try {
                                    if (!this.shouldImportAgg(this.featureName, n))
                                        return (0,
                                        c.L)(this.agentIdentifier, this.featureName),
                                        void o(!1);
                                    const {lazyFeatureLoader: e} = await i.e(111).then(i.bind(i, 8582))
                                      , {Aggregate: r} = await e(this.featureName, "aggregate");
                                    this.featAggregate = new r(this.agentIdentifier,this.aggregator,t),
                                    o(!0)
                                } catch (t) {
                                    (0,
                                    e.Z)("Downloading and initializing ".concat(this.featureName, " failed..."), t),
                                    this.abortHandler?.(),
                                    (0,
                                    c.L)(this.agentIdentifier, this.featureName),
                                    o(!1)
                                }
                            }
                            ;
                            l.il ? (0,
                            d.b2)(( () => a()), !0) : a()
                        }
                        shouldImportAgg(e, t) {
                            return e !== r.D.sessionReplay || !!n.Yu.MO && (!1 !== (0,
                            n.Mt)(this.agentIdentifier, "session_trace.enabled") && (!!t?.isNew || !!t?.state.sessionReplayMode))
                        }
                    }
                    var h = i(7633);
                    class p extends f {
                        static featureName = h.t;
                        constructor(e, t) {
                            let r = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
                            super(e, t, h.t, r),
                            this.importAggregator()
                        }
                    }
                    var g = i(1117)
                      , m = i(1284);
                    class v extends g.w {
                        constructor(e) {
                            super(e),
                            this.aggregatedData = {}
                        }
                        store(e, t, r, n, i) {
                            var o = this.getBucket(e, t, r, i);
                            return o.metrics = function(e, t) {
                                t || (t = {
                                    count: 0
                                });
                                return t.count += 1,
                                (0,
                                m.D)(e, (function(e, r) {
                                    t[e] = b(r, t[e])
                                }
                                )),
                                t
                            }(n, o.metrics),
                            o
                        }
                        merge(e, t, r, n, i) {
                            var o = this.getBucket(e, t, n, i);
                            if (o.metrics) {
                                var a = o.metrics;
                                a.count += r.count,
                                (0,
                                m.D)(r, (function(e, t) {
                                    if ("count" !== e) {
                                        var n = a[e]
                                          , i = r[e];
                                        i && !i.c ? a[e] = b(i.t, n) : a[e] = function(e, t) {
                                            if (!t)
                                                return e;
                                            t.c || (t = y(t.t));
                                            return t.min = Math.min(e.min, t.min),
                                            t.max = Math.max(e.max, t.max),
                                            t.t += e.t,
                                            t.sos += e.sos,
                                            t.c += e.c,
                                            t
                                        }(i, a[e])
                                    }
                                }
                                ))
                            } else
                                o.metrics = r
                        }
                        storeMetric(e, t, r, n) {
                            var i = this.getBucket(e, t, r);
                            return i.stats = b(n, i.stats),
                            i
                        }
                        getBucket(e, t, r, n) {
                            this.aggregatedData[e] || (this.aggregatedData[e] = {});
                            var i = this.aggregatedData[e][t];
                            return i || (i = this.aggregatedData[e][t] = {
                                params: r || {}
                            },
                            n && (i.custom = n)),
                            i
                        }
                        get(e, t) {
                            return t ? this.aggregatedData[e] && this.aggregatedData[e][t] : this.aggregatedData[e]
                        }
                        take(e) {
                            for (var t = {}, r = "", n = !1, i = 0; i < e.length; i++)
                                t[r = e[i]] = A(this.aggregatedData[r]),
                                t[r].length && (n = !0),
                                delete this.aggregatedData[r];
                            return n ? t : null
                        }
                    }
                    function b(e, t) {
                        return null == e ? function(e) {
                            e ? e.c++ : e = {
                                c: 1
                            };
                            return e
                        }(t) : t ? (t.c || (t = y(t.t)),
                        t.c += 1,
                        t.t += e,
                        t.sos += e * e,
                        e > t.max && (t.max = e),
                        e < t.min && (t.min = e),
                        t) : {
                            t: e
                        }
                    }
                    function y(e) {
                        return {
                            t: e,
                            min: e,
                            max: e,
                            sos: e * e,
                            c: 1
                        }
                    }
                    function A(e) {
                        return "object" != typeof e ? [] : (0,
                        m.D)(e, w)
                    }
                    function w(e, t) {
                        return t
                    }
                    var x = i(8632)
                      , E = i(4402)
                      , _ = i(4351);
                    var T = i(5546)
                      , S = i(7956)
                      , R = i(3239)
                      , D = i(7894)
                      , N = i(9251);
                    class O extends f {
                        static featureName = N.t;
                        constructor(e, t) {
                            let r = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
                            super(e, t, N.t, r),
                            l.il && ((0,
                            S.N)(( () => (0,
                            T.p)("docHidden", [(0,
                            D.z)()], void 0, N.t, this.ee)), !0),
                            (0,
                            R.bP)("pagehide", ( () => (0,
                            T.p)("winPagehide", [(0,
                            D.z)()], void 0, N.t, this.ee))),
                            this.importAggregator())
                        }
                    }
                    var I = i(3081);
                    class j extends f {
                        static featureName = I.t9;
                        constructor(e, t) {
                            let r = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
                            super(e, t, I.t9, r),
                            this.importAggregator()
                        }
                    }
                    var P = i(6660);
                    class C {
                        constructor(e, t, r, n) {
                            this.name = "UncaughtError",
                            this.message = e,
                            this.sourceURL = t,
                            this.line = r,
                            this.column = n
                        }
                    }
                    class k extends f {
                        static featureName = P.t;
                        #t = new Set;
                        constructor(e, t) {
                            let n = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
                            super(e, t, P.t, n);
                            try {
                                this.removeOnAbort = new AbortController
                            } catch (e) {}
                            this.ee.on("fn-err", ( (e, t, n) => {
                                this.abortHandler && !this.#t.has(n) && (this.#t.add(n),
                                (0,
                                T.p)("err", [this.#r(n), (0,
                                D.z)()], void 0, r.D.jserrors, this.ee))
                            }
                            )),
                            this.ee.on("internal-error", (e => {
                                this.abortHandler && (0,
                                T.p)("ierr", [this.#r(e), (0,
                                D.z)(), !0], void 0, r.D.jserrors, this.ee)
                            }
                            )),
                            l._A.addEventListener("unhandledrejection", (e => {
                                this.abortHandler && (0,
                                T.p)("err", [this.#n(e), (0,
                                D.z)(), !1, {
                                    unhandledPromiseRejection: 1
                                }], void 0, r.D.jserrors, this.ee)
                            }
                            ), (0,
                            R.m$)(!1, this.removeOnAbort?.signal)),
                            l._A.addEventListener("error", (e => {
                                this.abortHandler && (this.#t.has(e.error) ? this.#t.delete(e.error) : (0,
                                T.p)("err", [this.#i(e), (0,
                                D.z)()], void 0, r.D.jserrors, this.ee))
                            }
                            ), (0,
                            R.m$)(!1, this.removeOnAbort?.signal)),
                            this.abortHandler = this.#o,
                            this.importAggregator()
                        }
                        #o() {
                            this.removeOnAbort?.abort(),
                            this.#t.clear(),
                            this.abortHandler = void 0
                        }
                        #r(e) {
                            return e instanceof Error ? e : void 0 !== e?.message ? new C(e.message,e.filename || e.sourceURL,e.lineno || e.line,e.colno || e.col) : new C("string" == typeof e ? e : (0,
                            _.P)(e))
                        }
                        #n(e) {
                            let t = "Unhandled Promise Rejection: ";
                            if (e?.reason instanceof Error)
                                try {
                                    return e.reason.message = t + e.reason.message,
                                    e.reason
                                } catch (t) {
                                    return e.reason
                                }
                            if (void 0 === e.reason)
                                return new C(t);
                            const r = this.#r(e.reason);
                            return r.message = t + r.message,
                            r
                        }
                        #i(e) {
                            return e.error instanceof Error ? e.error : new C(e.message,e.filename,e.lineno,e.colno)
                        }
                    }
                    var M = i(2210);
                    let H = 1;
                    const L = "nr@id";
                    function z(e) {
                        const t = typeof e;
                        return !e || "object" !== t && "function" !== t ? -1 : e === l._A ? 0 : (0,
                        M.X)(e, L, (function() {
                            return H++
                        }
                        ))
                    }
                    function F(e) {
                        if ("string" == typeof e && e.length)
                            return e.length;
                        if ("object" == typeof e) {
                            if ("undefined" != typeof ArrayBuffer && e instanceof ArrayBuffer && e.byteLength)
                                return e.byteLength;
                            if ("undefined" != typeof Blob && e instanceof Blob && e.size)
                                return e.size;
                            if (!("undefined" != typeof FormData && e instanceof FormData))
                                try {
                                    return (0,
                                    _.P)(e).length
                                } catch (e) {
                                    return
                                }
                        }
                    }
                    var B = i(1214)
                      , U = i(7243);
                    class V {
                        constructor(e) {
                            this.agentIdentifier = e
                        }
                        generateTracePayload(e) {
                            if (!this.shouldGenerateTrace(e))
                                return null;
                            var t = (0,
                            n.DL)(this.agentIdentifier);
                            if (!t)
                                return null;
                            var r = (t.accountID || "").toString() || null
                              , i = (t.agentID || "").toString() || null
                              , o = (t.trustKey || "").toString() || null;
                            if (!r || !i)
                                return null;
                            var a = (0,
                            E.M)()
                              , s = (0,
                            E.Ht)()
                              , c = Date.now()
                              , u = {
                                spanId: a,
                                traceId: s,
                                timestamp: c
                            };
                            return (e.sameOrigin || this.isAllowedOrigin(e) && this.useTraceContextHeadersForCors()) && (u.traceContextParentHeader = this.generateTraceContextParentHeader(a, s),
                            u.traceContextStateHeader = this.generateTraceContextStateHeader(a, c, r, i, o)),
                            (e.sameOrigin && !this.excludeNewrelicHeader() || !e.sameOrigin && this.isAllowedOrigin(e) && this.useNewrelicHeaderForCors()) && (u.newrelicHeader = this.generateTraceHeader(a, s, c, r, i, o)),
                            u
                        }
                        generateTraceContextParentHeader(e, t) {
                            return "00-" + t + "-" + e + "-01"
                        }
                        generateTraceContextStateHeader(e, t, r, n, i) {
                            return i + "@nr=0-1-" + r + "-" + n + "-" + e + "----" + t
                        }
                        generateTraceHeader(e, t, r, n, i, o) {
                            if (!("function" == typeof l._A?.btoa))
                                return null;
                            var a = {
                                v: [0, 1],
                                d: {
                                    ty: "Browser",
                                    ac: n,
                                    ap: i,
                                    id: e,
                                    tr: t,
                                    ti: r
                                }
                            };
                            return o && n !== o && (a.d.tk = o),
                            btoa((0,
                            _.P)(a))
                        }
                        shouldGenerateTrace(e) {
                            return this.isDtEnabled() && this.isAllowedOrigin(e)
                        }
                        isAllowedOrigin(e) {
                            var t = !1
                              , r = {};
                            if ((0,
                            n.Mt)(this.agentIdentifier, "distributed_tracing") && (r = (0,
                            n.P_)(this.agentIdentifier).distributed_tracing),
                            e.sameOrigin)
                                t = !0;
                            else if (r.allowed_origins instanceof Array)
                                for (var i = 0; i < r.allowed_origins.length; i++) {
                                    var o = (0,
                                    U.e)(r.allowed_origins[i]);
                                    if (e.hostname === o.hostname && e.protocol === o.protocol && e.port === o.port) {
                                        t = !0;
                                        break
                                    }
                                }
                            return t
                        }
                        isDtEnabled() {
                            var e = (0,
                            n.Mt)(this.agentIdentifier, "distributed_tracing");
                            return !!e && !!e.enabled
                        }
                        excludeNewrelicHeader() {
                            var e = (0,
                            n.Mt)(this.agentIdentifier, "distributed_tracing");
                            return !!e && !!e.exclude_newrelic_header
                        }
                        useNewrelicHeaderForCors() {
                            var e = (0,
                            n.Mt)(this.agentIdentifier, "distributed_tracing");
                            return !!e && !1 !== e.cors_use_newrelic_header
                        }
                        useTraceContextHeadersForCors() {
                            var e = (0,
                            n.Mt)(this.agentIdentifier, "distributed_tracing");
                            return !!e && !!e.cors_use_tracecontext_headers
                        }
                    }
                    var q = i(7825)
                      , G = ["load", "error", "abort", "timeout"]
                      , Z = G.length
                      , W = n.Yu.REQ
                      , X = n.Yu.XHR;
                    class K extends f {
                        static featureName = q.t;
                        constructor(e, t) {
                            let i = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
                            if (super(e, t, q.t, i),
                            (0,
                            n.OP)(e).xhrWrappable) {
                                this.dt = new V(e),
                                this.handler = (e, t, r, n) => (0,
                                T.p)(e, t, r, n, this.ee);
                                try {
                                    const e = {
                                        xmlhttprequest: "xhr",
                                        fetch: "fetch",
                                        beacon: "beacon"
                                    };
                                    l._A?.performance?.getEntriesByType("resource").forEach((t => {
                                        if (t.initiatorType in e && 0 !== t.responseStatus) {
                                            const n = {
                                                status: t.responseStatus
                                            }
                                              , i = {
                                                rxSize: t.transferSize,
                                                duration: Math.floor(t.duration),
                                                cbTime: 0
                                            };
                                            Y(n, t.name),
                                            this.handler("xhr", [n, i, t.startTime, t.responseEnd, e[t.initiatorType]], void 0, r.D.ajax)
                                        }
                                    }
                                    ))
                                } catch (e) {}
                                (0,
                                B.u5)(this.ee),
                                (0,
                                B.Kf)(this.ee),
                                function(e, t, i, o) {
                                    function a(e) {
                                        var t = this;
                                        t.totalCbs = 0,
                                        t.called = 0,
                                        t.cbTime = 0,
                                        t.end = x,
                                        t.ended = !1,
                                        t.xhrGuids = {},
                                        t.lastSize = null,
                                        t.loadCaptureCalled = !1,
                                        t.params = this.params || {},
                                        t.metrics = this.metrics || {},
                                        e.addEventListener("load", (function(r) {
                                            E(t, e)
                                        }
                                        ), (0,
                                        R.m$)(!1)),
                                        l.IF || e.addEventListener("progress", (function(e) {
                                            t.lastSize = e.loaded
                                        }
                                        ), (0,
                                        R.m$)(!1))
                                    }
                                    function s(e) {
                                        this.params = {
                                            method: e[0]
                                        },
                                        Y(this, e[1]),
                                        this.metrics = {}
                                    }
                                    function c(t, r) {
                                        var i = (0,
                                        n.DL)(e);
                                        i.xpid && this.sameOrigin && r.setRequestHeader("X-NewRelic-ID", i.xpid);
                                        var a = o.generateTracePayload(this.parsedOrigin);
                                        if (a) {
                                            var s = !1;
                                            a.newrelicHeader && (r.setRequestHeader("newrelic", a.newrelicHeader),
                                            s = !0),
                                            a.traceContextParentHeader && (r.setRequestHeader("traceparent", a.traceContextParentHeader),
                                            a.traceContextStateHeader && r.setRequestHeader("tracestate", a.traceContextStateHeader),
                                            s = !0),
                                            s && (this.dt = a)
                                        }
                                    }
                                    function u(e, r) {
                                        var n = this.metrics
                                          , i = e[0]
                                          , o = this;
                                        if (n && i) {
                                            var a = F(i);
                                            a && (n.txSize = a)
                                        }
                                        this.startTime = (0,
                                        D.z)(),
                                        this.body = i,
                                        this.listener = function(e) {
                                            try {
                                                "abort" !== e.type || o.loadCaptureCalled || (o.params.aborted = !0),
                                                ("load" !== e.type || o.called === o.totalCbs && (o.onloadCalled || "function" != typeof r.onload) && "function" == typeof o.end) && o.end(r)
                                            } catch (e) {
                                                try {
                                                    t.emit("internal-error", [e])
                                                } catch (e) {}
                                            }
                                        }
                                        ;
                                        for (var s = 0; s < Z; s++)
                                            r.addEventListener(G[s], this.listener, (0,
                                            R.m$)(!1))
                                    }
                                    function d(e, t, r) {
                                        this.cbTime += e,
                                        t ? this.onloadCalled = !0 : this.called += 1,
                                        this.called !== this.totalCbs || !this.onloadCalled && "function" == typeof r.onload || "function" != typeof this.end || this.end(r)
                                    }
                                    function f(e, t) {
                                        var r = "" + z(e) + !!t;
                                        this.xhrGuids && !this.xhrGuids[r] && (this.xhrGuids[r] = !0,
                                        this.totalCbs += 1)
                                    }
                                    function h(e, t) {
                                        var r = "" + z(e) + !!t;
                                        this.xhrGuids && this.xhrGuids[r] && (delete this.xhrGuids[r],
                                        this.totalCbs -= 1)
                                    }
                                    function p() {
                                        this.endTime = (0,
                                        D.z)()
                                    }
                                    function g(e, r) {
                                        r instanceof X && "load" === e[0] && t.emit("xhr-load-added", [e[1], e[2]], r)
                                    }
                                    function m(e, r) {
                                        r instanceof X && "load" === e[0] && t.emit("xhr-load-removed", [e[1], e[2]], r)
                                    }
                                    function v(e, t, r) {
                                        t instanceof X && ("onload" === r && (this.onload = !0),
                                        ("load" === (e[0] && e[0].type) || this.onload) && (this.xhrCbStart = (0,
                                        D.z)()))
                                    }
                                    function b(e, r) {
                                        this.xhrCbStart && t.emit("xhr-cb-time", [(0,
                                        D.z)() - this.xhrCbStart, this.onload, r], r)
                                    }
                                    function y(e) {
                                        var t, r = e[1] || {};
                                        if ("string" == typeof e[0] ? 0 === (t = e[0]).length && l.il && (t = "" + l._A.location.href) : e[0] && e[0].url ? t = e[0].url : l._A?.URL && e[0] && e[0]instanceof URL ? t = e[0].href : "function" == typeof e[0].toString && (t = e[0].toString()),
                                        "string" == typeof t && 0 !== t.length) {
                                            t && (this.parsedOrigin = (0,
                                            U.e)(t),
                                            this.sameOrigin = this.parsedOrigin.sameOrigin);
                                            var n = o.generateTracePayload(this.parsedOrigin);
                                            if (n && (n.newrelicHeader || n.traceContextParentHeader))
                                                if (e[0] && e[0].headers)
                                                    s(e[0].headers, n) && (this.dt = n);
                                                else {
                                                    var i = {};
                                                    for (var a in r)
                                                        i[a] = r[a];
                                                    i.headers = new Headers(r.headers || {}),
                                                    s(i.headers, n) && (this.dt = n),
                                                    e.length > 1 ? e[1] = i : e.push(i)
                                                }
                                        }
                                        function s(e, t) {
                                            var r = !1;
                                            return t.newrelicHeader && (e.set("newrelic", t.newrelicHeader),
                                            r = !0),
                                            t.traceContextParentHeader && (e.set("traceparent", t.traceContextParentHeader),
                                            t.traceContextStateHeader && e.set("tracestate", t.traceContextStateHeader),
                                            r = !0),
                                            r
                                        }
                                    }
                                    function A(e, t) {
                                        this.params = {},
                                        this.metrics = {},
                                        this.startTime = (0,
                                        D.z)(),
                                        this.dt = t,
                                        e.length >= 1 && (this.target = e[0]),
                                        e.length >= 2 && (this.opts = e[1]);
                                        var r, n = this.opts || {}, i = this.target;
                                        "string" == typeof i ? r = i : "object" == typeof i && i instanceof W ? r = i.url : l._A?.URL && "object" == typeof i && i instanceof URL && (r = i.href),
                                        Y(this, r);
                                        var o = ("" + (i && i instanceof W && i.method || n.method || "GET")).toUpperCase();
                                        this.params.method = o,
                                        this.body = n.body,
                                        this.txSize = F(n.body) || 0
                                    }
                                    function w(e, t) {
                                        var n;
                                        this.endTime = (0,
                                        D.z)(),
                                        this.params || (this.params = {}),
                                        this.params.status = t ? t.status : 0,
                                        "string" == typeof this.rxSize && this.rxSize.length > 0 && (n = +this.rxSize);
                                        var o = {
                                            txSize: this.txSize,
                                            rxSize: n,
                                            duration: (0,
                                            D.z)() - this.startTime
                                        };
                                        i("xhr", [this.params, o, this.startTime, this.endTime, "fetch"], this, r.D.ajax)
                                    }
                                    function x(e) {
                                        var t = this.params
                                          , n = this.metrics;
                                        if (!this.ended) {
                                            this.ended = !0;
                                            for (var o = 0; o < Z; o++)
                                                e.removeEventListener(G[o], this.listener, !1);
                                            t.aborted || (n.duration = (0,
                                            D.z)() - this.startTime,
                                            this.loadCaptureCalled || 4 !== e.readyState ? null == t.status && (t.status = 0) : E(this, e),
                                            n.cbTime = this.cbTime,
                                            i("xhr", [t, n, this.startTime, this.endTime, "xhr"], this, r.D.ajax))
                                        }
                                    }
                                    function E(e, t) {
                                        e.params.status = t.status;
                                        var r = function(e, t) {
                                            var r = e.responseType;
                                            return "json" === r && null !== t ? t : "arraybuffer" === r || "blob" === r || "json" === r ? F(e.response) : "text" === r || "" === r || void 0 === r ? F(e.responseText) : void 0
                                        }(t, e.lastSize);
                                        if (r && (e.metrics.rxSize = r),
                                        e.sameOrigin) {
                                            var n = t.getResponseHeader("X-NewRelic-App-Data");
                                            n && (e.params.cat = n.split(", ").pop())
                                        }
                                        e.loadCaptureCalled = !0
                                    }
                                    t.on("new-xhr", a),
                                    t.on("open-xhr-start", s),
                                    t.on("open-xhr-end", c),
                                    t.on("send-xhr-start", u),
                                    t.on("xhr-cb-time", d),
                                    t.on("xhr-load-added", f),
                                    t.on("xhr-load-removed", h),
                                    t.on("xhr-resolved", p),
                                    t.on("addEventListener-end", g),
                                    t.on("removeEventListener-end", m),
                                    t.on("fn-end", b),
                                    t.on("fetch-before-start", y),
                                    t.on("fetch-start", A),
                                    t.on("fn-start", v),
                                    t.on("fetch-done", w)
                                }(e, this.ee, this.handler, this.dt),
                                this.importAggregator()
                            }
                        }
                    }
                    function Y(e, t) {
                        var r = (0,
                        U.e)(t)
                          , n = e.params || e;
                        n.hostname = r.hostname,
                        n.port = r.port,
                        n.protocol = r.protocol,
                        n.host = r.hostname + ":" + r.port,
                        n.pathname = r.pathname,
                        e.parsedOrigin = r,
                        e.sameOrigin = r.sameOrigin
                    }
                    var J = i(3614);
                    const {BST_RESOURCE: Q, RESOURCE: ee, START: te, END: re, FEATURE_NAME: ne, FN_END: ie, FN_START: oe, PUSH_STATE: ae} = J;
                    var se = i(7056)
                      , ce = i(7144);
                    class ue extends f {
                        static featureName = ce.t9;
                        constructor(e, t) {
                            let r = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
                            super(e, t, ce.t9, r);
                            try {
                                const e = JSON.parse(localStorage.getItem("NRBA_SESSION"));
                                e.sessionReplayMode !== se.IK.OFF ? this.#a(e.sessionReplayMode) : this.importAggregator({})
                            } catch (e) {
                                this.importAggregator({})
                            }
                        }
                        async #a(e) {
                            const {Recorder: t} = await Promise.all([i.e(111), i.e(433)]).then(i.bind(i, 4136));
                            this.recorder = new t({
                                mode: e,
                                agentIdentifier: this.agentIdentifier
                            }),
                            this.recorder.startRecording(),
                            this.importAggregator({
                                recorder: this.recorder
                            })
                        }
                    }
                    var de = i(7836);
                    const {FEATURE_NAME: le, START: fe, END: he, BODY: pe, CB_END: ge, JS_TIME: me, FETCH: ve, FN_START: be, CB_START: ye, FN_END: Ae} = de;
                    var we = i(4649);
                    class xe extends f {
                        static featureName = we.t;
                        constructor(e, t) {
                            let r = !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2];
                            super(e, t, we.t, r),
                            this.importAggregator()
                        }
                    }
                    new class extends t {
                        constructor(t) {
                            let r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : (0,
                            E.ky)(16);
                            super(),
                            l._A ? (this.agentIdentifier = r,
                            this.sharedAggregator = new v({
                                agentIdentifier: this.agentIdentifier
                            }),
                            this.features = {},
                            (0,
                            x.h5)(r, this),
                            this.desiredFeatures = new Set(t.features || []),
                            this.desiredFeatures.add(p),
                            (0,
                            s.j)(this, t, t.loaderType || "agent"),
                            this.run()) : (0,
                            e.Z)("Failed to initial the agent. Could not determine the runtime environment.")
                        }
                        get config() {
                            return {
                                info: (0,
                                n.C5)(this.agentIdentifier),
                                init: (0,
                                n.P_)(this.agentIdentifier),
                                loader_config: (0,
                                n.DL)(this.agentIdentifier),
                                runtime: (0,
                                n.OP)(this.agentIdentifier)
                            }
                        }
                        run() {
                            try {
                                const t = a(this.agentIdentifier)
                                  , n = [...this.desiredFeatures];
                                n.sort(( (e, t) => r.p[e.featureName] - r.p[t.featureName])),
                                n.forEach((n => {
                                    if (t[n.featureName] || n.featureName === r.D.pageViewEvent) {
                                        const i = function(e) {
                                            switch (e) {
                                            case r.D.ajax:
                                                return [r.D.jserrors];
                                            case r.D.sessionTrace:
                                                return [r.D.ajax, r.D.pageViewEvent];
                                            case r.D.sessionReplay:
                                                return [r.D.sessionTrace];
                                            case r.D.pageViewTiming:
                                                return [r.D.pageViewEvent];
                                            default:
                                                return []
                                            }
                                        }(n.featureName);
                                        i.every((e => t[e])) || (0,
                                        e.Z)("".concat(n.featureName, " is enabled but one or more dependent features has been disabled (").concat((0,
                                        _.P)(i), "). This may cause unintended consequences or missing data...")),
                                        this.features[n.featureName] = new n(this.agentIdentifier,this.sharedAggregator)
                                    }
                                }
                                ))
                            } catch (t) {
                                (0,
                                e.Z)("Failed to initialize all enabled instrument classes (agent aborted) -", t);
                                for (const e in this.features)
                                    this.features[e].abortHandler?.();
                                const r = (0,
                                x.fP)();
                                return delete r.initializedAgents[this.agentIdentifier]?.api,
                                delete r.initializedAgents[this.agentIdentifier]?.features,
                                delete this.sharedAggregator,
                                r.ee?.abort(),
                                delete r.ee?.get(this.agentIdentifier),
                                !1
                            }
                        }
                    }
                    ({
                        features: [K, p, O, class extends f {
                            static featureName = ne;
                            constructor(e, t) {
                                if (super(e, t, ne, !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2]),
                                !l.il)
                                    return;
                                const n = this.ee;
                                let i;
                                (0,
                                B.QU)(n),
                                this.eventsEE = (0,
                                B.em)(n),
                                this.eventsEE.on(oe, (function(e, t) {
                                    this.bstStart = (0,
                                    D.z)()
                                }
                                )),
                                this.eventsEE.on(ie, (function(e, t) {
                                    (0,
                                    T.p)("bst", [e[0], t, this.bstStart, (0,
                                    D.z)()], void 0, r.D.sessionTrace, n)
                                }
                                )),
                                n.on(ae + te, (function(e) {
                                    this.time = (0,
                                    D.z)(),
                                    this.startPath = location.pathname + location.hash
                                }
                                )),
                                n.on(ae + re, (function(e) {
                                    (0,
                                    T.p)("bstHist", [location.pathname + location.hash, this.startPath, this.time], void 0, r.D.sessionTrace, n)
                                }
                                ));
                                try {
                                    i = new PerformanceObserver((e => {
                                        const t = e.getEntries();
                                        (0,
                                        T.p)(Q, [t], void 0, r.D.sessionTrace, n)
                                    }
                                    )),
                                    i.observe({
                                        type: ee,
                                        buffered: !0
                                    })
                                } catch (e) {}
                                this.importAggregator({
                                    resourceObserver: i
                                })
                            }
                        }
                        , ue, j, xe, k, class extends f {
                            static featureName = le;
                            constructor(e, t) {
                                if (super(e, t, le, !(arguments.length > 2 && void 0 !== arguments[2]) || arguments[2]),
                                !l.il)
                                    return;
                                if (!(0,
                                n.OP)(e).xhrWrappable)
                                    return;
                                try {
                                    this.removeOnAbort = new AbortController
                                } catch (e) {}
                                let r, i = 0;
                                const o = this.ee.get("tracer")
                                  , a = (0,
                                B._L)(this.ee)
                                  , s = (0,
                                B.Lg)(this.ee)
                                  , c = (0,
                                B.BV)(this.ee)
                                  , u = (0,
                                B.Kf)(this.ee)
                                  , d = this.ee.get("events")
                                  , f = (0,
                                B.u5)(this.ee)
                                  , h = (0,
                                B.QU)(this.ee)
                                  , p = (0,
                                B.Gm)(this.ee);
                                function g(e, t) {
                                    h.emit("newURL", ["" + window.location, t])
                                }
                                function m() {
                                    i++,
                                    r = window.location.hash,
                                    this[be] = (0,
                                    D.z)()
                                }
                                function v() {
                                    i--,
                                    window.location.hash !== r && g(0, !0);
                                    var e = (0,
                                    D.z)();
                                    this[me] = ~~this[me] + e - this[be],
                                    this[Ae] = e
                                }
                                function b(e, t) {
                                    e.on(t, (function() {
                                        this[t] = (0,
                                        D.z)()
                                    }
                                    ))
                                }
                                this.ee.on(be, m),
                                s.on(ye, m),
                                a.on(ye, m),
                                this.ee.on(Ae, v),
                                s.on(ge, v),
                                a.on(ge, v),
                                this.ee.buffer([be, Ae, "xhr-resolved"], this.featureName),
                                d.buffer([be], this.featureName),
                                c.buffer(["setTimeout" + he, "clearTimeout" + fe, be], this.featureName),
                                u.buffer([be, "new-xhr", "send-xhr" + fe], this.featureName),
                                f.buffer([ve + fe, ve + "-done", ve + pe + fe, ve + pe + he], this.featureName),
                                h.buffer(["newURL"], this.featureName),
                                p.buffer([be], this.featureName),
                                s.buffer(["propagate", ye, ge, "executor-err", "resolve" + fe], this.featureName),
                                o.buffer([be, "no-" + be], this.featureName),
                                a.buffer(["new-jsonp", "cb-start", "jsonp-error", "jsonp-end"], this.featureName),
                                b(f, ve + fe),
                                b(f, ve + "-done"),
                                b(a, "new-jsonp"),
                                b(a, "jsonp-end"),
                                b(a, "cb-start"),
                                h.on("pushState-end", g),
                                h.on("replaceState-end", g),
                                window.addEventListener("hashchange", g, (0,
                                R.m$)(!0, this.removeOnAbort?.signal)),
                                window.addEventListener("load", g, (0,
                                R.m$)(!0, this.removeOnAbort?.signal)),
                                window.addEventListener("popstate", (function() {
                                    g(0, i > 1)
                                }
                                ), (0,
                                R.m$)(!0, this.removeOnAbort?.signal)),
                                this.abortHandler = this.#o,
                                this.importAggregator()
                            }
                            #o() {
                                this.removeOnAbort?.abort(),
                                this.abortHandler = void 0
                            }
                        }
                        ],
                        loaderType: "spa"
                    })
                }
                )()
            }
            )();
        </script>
        <script crossorigin="anonymous" nonce="5080350460649940621">
            if (window && window.newrelic) {
                if (window.newrelic.setApplicationVersion && typeof window.newrelic.setApplicationVersion === "function") {
                    window.newrelic.setApplicationVersion("2.66.1");
                }
                if (window.newrelic.setCustomAttribute && typeof window.newrelic.setCustomAttribute === "function") {
                    window.newrelic.setCustomAttribute("sessionId", window.sessionId);
                }
                if (window.newrelic.setCustomAttribute && typeof window.newrelic.setCustomAttribute === "function" && window.navigator && window.navigator.userAgent) {
                    window.newrelic.setCustomAttribute("platform", window.navigator.userAgent);
                }
            }
        </script>
    </body>
</html>


